{
  "version": 3,
  "sources": ["../../../node_modules/tslib/tslib.es6.mjs", "../../../node_modules/rxjs/src/internal/util/isFunction.ts", "../../../node_modules/rxjs/src/internal/util/createErrorClass.ts", "../../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts", "../../../node_modules/rxjs/src/internal/util/arrRemove.ts", "../../../node_modules/rxjs/src/internal/Subscription.ts", "../../../node_modules/rxjs/src/internal/config.ts", "../../../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts", "../../../node_modules/rxjs/src/internal/util/reportUnhandledError.ts", "../../../node_modules/rxjs/src/internal/util/noop.ts", "../../../node_modules/rxjs/src/internal/NotificationFactories.ts", "../../../node_modules/rxjs/src/internal/util/errorContext.ts", "../../../node_modules/rxjs/src/internal/Subscriber.ts", "../../../node_modules/rxjs/src/internal/symbol/observable.ts", "../../../node_modules/rxjs/src/internal/util/identity.ts", "../../../node_modules/rxjs/src/internal/util/pipe.ts", "../../../node_modules/rxjs/src/internal/Observable.ts", "../../../node_modules/rxjs/src/internal/util/lift.ts", "../../../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts", "../../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../../node_modules/rxjs/src/internal/Subject.ts", "../../../node_modules/rxjs/src/internal/BehaviorSubject.ts", "../../../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../../node_modules/rxjs/src/internal/scheduler/Action.ts", "../../../node_modules/rxjs/src/internal/scheduler/intervalProvider.ts", "../../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts", "../../../node_modules/rxjs/src/internal/Scheduler.ts", "../../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../../node_modules/rxjs/src/internal/scheduler/async.ts", "../../../node_modules/rxjs/src/internal/util/isArrayLike.ts", "../../../node_modules/rxjs/src/internal/util/isPromise.ts", "../../../node_modules/rxjs/src/internal/util/isInteropObservable.ts", "../../../node_modules/rxjs/src/internal/util/isAsyncIterable.ts", "../../../node_modules/rxjs/src/internal/util/throwUnobservableError.ts", "../../../node_modules/rxjs/src/internal/symbol/iterator.ts", "../../../node_modules/rxjs/src/internal/util/isIterable.ts", "../../../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts", "../../../node_modules/rxjs/src/internal/observable/innerFrom.ts", "../../../node_modules/rxjs/src/internal/util/executeSchedule.ts", "../../../node_modules/rxjs/src/internal/operators/map.ts", "../../../node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../../node_modules/rxjs/src/internal/operators/mergeInternals.ts", "../../../node_modules/rxjs/src/internal/operators/mergeMap.ts", "../../../node_modules/rxjs/src/internal/observable/fromEvent.ts", "../../../node_modules/rxjs/src/internal/operators/debounceTime.ts", "../src/lib/reactive/Observable.ts", "../src/lib/reactive/variable.ts", "../src/lib/math/gauss.ts", "../src/lib/math/rotorFromDirections.ts", "../src/lib/math/G20.ts", "../src/lib/utils/path-commands.ts", "../src/lib/anchor.ts", "../src/lib/constants.ts", "../src/lib/collection.ts", "../src/lib/children.ts", "../src/lib/reactive/Disposable.ts", "../src/lib/utils/root.ts", "../src/lib/utils/math.ts", "../src/lib/renderers/SVGView.ts", "../src/lib/renderers/ZZZ.ts", "../src/lib/element.ts", "../src/lib/math/compose_2d_3x3_transform.ts", "../src/lib/matrix.ts", "../src/lib/utils/compute_world_matrix.ts", "../src/lib/Shape.ts", "../src/lib/group.ts", "../src/lib/effects/ColorProvider.ts", "../src/lib/math/decompose_2d_3x3_matrix.ts", "../src/lib/utils/curves.ts", "../src/lib/utils/shape.ts", "../src/lib/path.ts", "../src/lib/renderers/SVGViewFactory.ts", "../src/lib/shapes/ArcSegment.ts", "../src/lib/shapes/Arrow.ts", "../src/lib/shapes/Circle.ts", "../src/lib/shapes/Ellipse.ts", "../src/lib/shapes/Line.ts", "../src/lib/shapes/Polygon.ts", "../src/lib/shapes/Rectangle.ts", "../src/lib/text.ts", "../src/lib/utils/performance.ts", "../src/lib/board.ts", "../src/main.ts"],
  "sourcesContent": ["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * // note optional configuration parameter which will be passed to addEventListener\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\n * const clicksInDiv = fromEvent(div, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n", "import { Observable as RxjsObservable } from 'rxjs';\nimport { Disposable } from './Disposable';\n\nexport interface Observable<T> {\n    subscribe(callback: (value: T) => void): Disposable;\n}\n\nexport class DisposableObservable<T> implements Observable<T> {\n    #rxjs: RxjsObservable<T>;\n    constructor(rxjs: RxjsObservable<T>) {\n        this.#rxjs = rxjs;\n    }\n    subscribe(callback: (value: T) => void): Disposable {\n        const subscription = this.#rxjs.subscribe(callback);\n        const disposable: Disposable = {\n            dispose(): void {\n                subscription.unsubscribe();\n            }\n        };\n        return disposable;\n    }\n}", "import { BehaviorSubject } from \"rxjs\";\nimport { DisposableObservable, Observable } from \"./Observable\";\nimport { Equals, State } from \"./types\";\n\nexport interface VariableAttributes<T> {\n    equals?: Equals<T>;\n}\n\nexport class Variable<T> implements State<T> {\n    readonly #bs: BehaviorSubject<T>;\n    // readonly #attributes: VariableAttributes<T>;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    constructor(bs: BehaviorSubject<T>, attributes: VariableAttributes<T> = {}) {\n        this.#bs = bs;\n        // this.#attributes = attributes;\n    }\n    get(): T {\n        return this.#bs.getValue();\n    }\n    set(newValue: T): void {\n        // It appears that we need the first value for initialization.\n        this.#bs.next(newValue);\n        /*\n        const oldValue = this.#bs.getValue();\n        if (newValue !== oldValue) {\n            this.#bs.next(newValue);\n        }\n        else {\n            if (this.#attributes.equals) {\n                if (this.#attributes.equals(newValue, oldValue)) {\n                    // Do nothing.\n                }\n                else {\n                    this.#bs.next(newValue);\n                }\n            }\n        }\n        */\n    }\n    asObservable(): Observable<T> {\n        return new DisposableObservable(this.#bs.asObservable());\n    }\n}\n\n\nexport function variable<T>(initialValue: T, attributes: VariableAttributes<T> = {}): Variable<T> {\n    const bs = new BehaviorSubject(initialValue);\n    return new Variable(bs, attributes);\n}", "const abs = Math.abs;\n\n/**\n * @hidden\n * @param n \n * @param v \n * @returns \n */\nfunction makeColumnVector(n: number, v: number): number[] {\n    const a: number[] = [];\n    for (let i = 0; i < n; i++) {\n        a.push(v);\n    }\n    return a;\n}\n\n/**\n * @hidden\n */\nfunction rowWithMaximumInColumn(A: number[][], column: number, N: number): number {\n    let biggest = abs(A[column][column]);\n    let maxRow = column;\n    for (let row = column + 1; row < N; row++) {\n        if (abs(A[row][column]) > biggest) {\n            biggest = abs(A[row][column]);\n            maxRow = row;\n        }\n    }\n    return maxRow;\n}\n\n/**\n * @hidden\n */\nfunction swapRows(A: number[][], i: number, j: number, N: number) {\n    const colLength = N + 1;\n    for (let column = i; column < colLength; column++) {\n        const temp = A[j][column];\n        A[j][column] = A[i][column];\n        A[i][column] = temp;\n    }\n}\n\n/**\n * @hidden\n * @param A \n * @param i \n * @param N \n */\nfunction makeZeroBelow(A: number[][], i: number, N: number): void {\n    for (let row = i + 1; row < N; row++) {\n        const c = -A[row][i] / A[i][i];\n        for (let column = i; column < N + 1; column++) {\n            if (i === column) {\n                A[row][column] = 0;\n            }\n            else {\n                A[row][column] += c * A[i][column];\n            }\n        }\n    }\n}\n\n/**\n * @hidden\n * @param A \n * @param N \n * @returns \n */\nfunction solve(A: number[][], N: number) {\n    const x = makeColumnVector(N, 0);\n    for (let i = N - 1; i > -1; i--) {\n        x[i] = A[i][N] / A[i][i];\n        for (let k = i - 1; k > -1; k--) {\n            A[k][N] -= A[k][i] * x[i];\n        }\n    }\n    return x;\n}\n\n\n/**\n * Gaussian elimination\n * Ax = b\n * @hidden\n * \n * @param A an array containing the rows of A, where each row is a number array.\n * @param b an array containing the rows of b, where each row is a number.\n * @returns x an array containing the rows of x, where each row is a number. \n */\nexport function gauss(A: number[][], b: number[]): number[] {\n\n    const N = A.length;\n\n    for (let i = 0; i < N; i++) {\n        const Ai = A[i];\n        const bi = b[i];\n        Ai.push(bi);\n    }\n\n    for (let j = 0; j < N; j++) {\n        swapRows(A, j, rowWithMaximumInColumn(A, j, N), N);\n        makeZeroBelow(A, j, N);\n    }\n\n    return solve(A, N);\n}\n", "import { G20 } from './G20';\nimport { Vector } from './Vector';\n\nconst sqrt = Math.sqrt;\n\n/**\n * Sets this multivector to a rotor representing a rotation from a to b.\n * R = (|b||a| + b * a) / sqrt(2 * |b||a|(|b||a| + b << a))\n * Returns undefined (void 0) if the vectors are anti-parallel.\n * \n * @param a The 'from' vector. \n * @param b The 'to' vector.\n * @param m The output multivector.\n */\nexport function rotorFromDirections(a: Readonly<Vector>, b: Readonly<Vector>, m: G20): void {\n    const ax = a.x;\n    const ay = a.y;\n    const bx = b.x;\n    const by = b.y;\n    const aa = ax * ax + ay * ay;\n    const absA = sqrt(aa);\n    const bb = bx * bx + by * by;\n    const absB = sqrt(bb);\n    const BA = absB * absA;\n    const dotBA = ax * bx + ay * by;\n    const denom = sqrt(2 * (bb * aa + BA * dotBA));\n    if (denom !== 0) {\n        const B = ay * bx - ax * by;\n        m.set(0, 0, (BA + dotBA) / denom, B / denom);\n    }\n    else {\n        // The denominator is zero when |a||b| + a << b = 0.\n        // If \u03B8 is the angle between a and b, then  cos(\u03B8) = (a << b) /|a||b| = -1\n        // Then a and b are anti-parallel.\n        // The plane of the rotation is ambiguous.\n    }\n}\n", "import { variable } from '../reactive/variable';\nimport { Bivector } from './Bivector';\nimport { gauss } from './gauss';\nimport { rotorFromDirections } from './rotorFromDirections';\nimport { Scalar } from './Scalar';\nimport { Spinor } from './Spinor';\nimport { Vector } from './Vector';\n\n\ninterface Geometric extends Vector, Bivector, Scalar, Spinor {\n}\n\nfunction is_zero_vector(v: Vector): boolean {\n    return v.x === 0 && v.y === 0;\n}\n\nfunction is_zero_bivector(m: Bivector): boolean {\n    return m.b === 0;\n}\n\nfunction is_zero_multivector(m: Geometric): boolean {\n    return is_zero_vector(m) && is_zero_bivector(m) && m.a === 0 && m.b === 0;\n}\n\n/**\n * Sentinel value to indicate that the Geometric is not locked.\n * UNLOCKED is in the range -1 to 0.\n * \n */\nconst UNLOCKED = -1 * Math.random();\n\n/**\n * Sets the lock on the multivector argument and returns the same argument.\n * This is a convenience function for the dunder (double underscore) methods.\n * All dunder methods should return locked values.\n * \n */\nfunction lock(m: G20): G20 {\n    m.lock();\n    return m;\n}\n\n/**\n * \n */\nfunction isScalar(m: G20): boolean {\n    return m.x === 0 && m.y === 0 && m.b === 0;\n}\n/*\nfunction equals(P: [a: number, x: number, y: number, b: number], Q: [a: number, x: number, y: number, b: number]): boolean {\n    return P[0] === Q[0] && P[1] === Q[1] && P[2] === Q[2] && P[3] === Q[3];\n}\n*/\n\nconst COORD_A = 0;\nconst COORD_X = 1;\nconst COORD_Y = 2;\nconst COORD_B = 3;\n\n/**\n * A multivector for two dimensions with a Euclidean metric.\n */\nexport class G20 {\n\n    readonly #coords: [a: number, x: number, y: number, b: number];\n\n    #lock = UNLOCKED;\n\n    readonly #change = variable(this);\n    readonly change$ = this.#change.asObservable();\n\n    constructor(x = 0, y = 0, a = 0, b = 0) {\n        this.#coords = [a, x, y, b];\n    }\n\n    static scalar(a: number): G20 {\n        return new G20(0, 0, a, 0);\n    }\n\n    static bivector(b: number): G20 {\n        return new G20(0, 0, 0, b);\n    }\n\n    static spinor(a: number, b: number): G20 {\n        return new G20(0, 0, a, b);\n    }\n\n    static vector(x: number, y: number): G20 {\n        return new G20(x, y, 0, 0);\n    }\n\n    /**\n     * Determines whether this multivector is locked.\n     * If the multivector is in the unlocked state then it is mutable.\n     * If the multivector is in the locked state then it is immutable.\n     */\n    isLocked(): boolean {\n        return this.#lock !== UNLOCKED;\n    }\n\n    isMutable(): boolean {\n        return this.#lock === UNLOCKED;\n    }\n\n    /**\n     * Locks this multivector (preventing any further mutation),\n     * and returns a token that may be used to unlock it.\n     */\n    lock(): number {\n        if (this.#lock !== UNLOCKED) {\n            throw new Error(\"already locked\");\n        }\n        else {\n            this.#lock = Math.random();\n            return this.#lock;\n        }\n    }\n\n    /**\n     * Unlocks this multivector (allowing mutation),\n     * using a token that was obtained from a preceding lock method call.\n     */\n    unlock(token: number): this {\n        if (this.#lock === UNLOCKED) {\n            throw new Error(\"not locked\");\n        }\n        else if (this.#lock === token) {\n            this.#lock = UNLOCKED;\n            return this;\n        }\n        else {\n            throw new Error(\"unlock denied\");\n        }\n    }\n\n    get a(): number {\n        return this.#coords[COORD_A];\n    }\n\n    set a(a: number) {\n        if (typeof a === 'number') {\n            if (this.a !== a) {\n                this.#coords[COORD_A] = a;\n                this.#change.set(this);\n            }\n        }\n    }\n\n    get x(): number {\n        return this.#coords[COORD_X];\n    }\n\n    set x(x: number) {\n        if (typeof x === 'number') {\n            if (this.x !== x) {\n                this.#coords[COORD_X] = x;\n                this.#change.set(this);\n            }\n        }\n    }\n\n    get y(): number {\n        return this.#coords[COORD_Y];\n    }\n\n    set y(y: number) {\n        if (typeof y === 'number') {\n            if (this.y !== y) {\n                this.#coords[COORD_Y] = y;\n                this.#change.set(this);\n            }\n        }\n    }\n\n    get b(): number {\n        return this.#coords[COORD_B];\n    }\n\n    set b(b: number) {\n        if (typeof b === 'number') {\n            if (this.b !== b) {\n                this.#coords[COORD_B] = b;\n                this.#change.set(this);\n            }\n        }\n    }\n\n    static readonly one = lock(new G20(0, 0, 1, 0));\n    static readonly zero = lock(new G20(0, 0, 0, 0));\n    static readonly ex = lock(new G20(1, 0, 0, 0));\n    static readonly ey = lock(new G20(0, 1, 0, 0));\n    static readonly I = lock(new G20(0, 0, 0, 1));\n\n    static add(v1: Readonly<G20>, v2: Readonly<G20>): G20 {\n        const x = v1.x + v2.x;\n        const y = v1.y + v2.y;\n        const a = v1.a + v2.a;\n        const b = v1.b + v2.b;\n        return new G20(x, y, a, b);\n    }\n\n    static copy(mv: Readonly<G20>): G20 {\n        return new G20(mv.x, mv.y, mv.a, mv.b);\n    }\n\n    static fromBivector(B: Readonly<Bivector>): G20 {\n        return G20.bivector(B.b);\n    }\n\n    static fromScalar(alpha: Readonly<Scalar>): G20 {\n        return G20.scalar(alpha.a);\n    }\n\n    static fromSpinor(R: Readonly<Spinor>): G20 {\n        return G20.spinor(R.a, R.b);\n    }\n\n    static fromVector(v: Readonly<Vector>): G20 {\n        return G20.vector(v.x, v.y);\n    }\n\n    static rotorFromDirections(a: Vector, b: Vector): G20 {\n        return new G20(0, 0, 0, 0).rotorFromDirections(a, b);\n    }\n\n    static rotorFromVectorToVector(a: Vector, b: Vector): G20 {\n        return new G20(0, 0, 0, 0).rotorFromVectorToVector(a, b);\n    }\n\n    static sub(v1: G20, v2: G20): G20 {\n        const x = v1.x - v2.x;\n        const y = v1.y - v2.y;\n        const a = v1.a - v2.a;\n        const b = v1.b - v2.b;\n        return new G20(x, y, a, b);\n    }\n\n    static subtract(v1: G20, v2: G20): G20 {\n        return G20.sub(v1, v2);\n    }\n\n    static ratioBetween(v1: Readonly<G20>, v2: Readonly<G20>): number {\n        return (v1.x * v2.x + v1.y * v2.y) / (v1.magnitude() * v2.magnitude());\n    }\n\n    static angleBetween(v1: Readonly<Vector>, v2: Readonly<Vector>): number {\n        const dx = v1.x - v2.x;\n        const dy = v1.y - v2.y;\n        return Math.atan2(dy, dx);\n    }\n\n    static distanceBetween(v1: Readonly<Vector>, v2: Readonly<Vector>): number {\n\n        return Math.sqrt(G20.distanceBetweenSquared(v1, v2));\n\n    }\n\n    static distanceBetweenSquared(v1: Readonly<Vector>, v2: Readonly<Vector>): number {\n        const dx = v1.x - v2.x;\n        const dy = v1.y - v2.y;\n        return dx * dx + dy * dy;\n    }\n    /**\n     * \n     */\n    add2(a: Readonly<G20>, b: Readonly<G20>): G20 {\n        if (is_zero_multivector(a)) {\n            return this.set(b.x, b.y, b.a, b.b);\n        }\n        else if (is_zero_multivector(b)) {\n            return this.set(a.x, a.y, a.a, a.b);\n        }\n        else {\n            return this.set(a.x + b.x, a.y + b.y, a.a + b.a, a.b + b.b);\n        }\n    }\n\n    addPseudo(\u03B2: number): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().addPseudo(\u03B2));\n        }\n        else {\n            if (\u03B2 === 0) {\n                return this;\n            }\n            else {\n                return this.set(this.x, this.y, this.a, this.b + \u03B2);\n            }\n        }\n    }\n\n    /**\n     * Adds a multiple of a scalar to this multivector.\n     * @param a The scalar value to be added to this multivector.\n     * @param \u03B1 The fraction of (a * uom) to be added. Default is 1.\n     * @returns this + (a * uom) * \u03B1\n     */\n    addScalar(a: number, \u03B1 = 1): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().addScalar(a, \u03B1));\n        }\n        else {\n            if (this.isZero()) {\n                this.a = a * \u03B1;\n                return this;\n            }\n            else if (a === 0 || \u03B1 === 0) {\n                return this;\n            }\n            else {\n                this.a += a * \u03B1;\n                return this;\n            }\n        }\n    }\n\n    conj(): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().conj());\n        }\n        else {\n            return this.set(-this.x, -this.y, this.a, -this.b);\n        }\n    }\n\n    /**\n     * A convenience function for set(mv.x, mv.y, mv.a, mv.b).\n     * Requires `this` multivector to be mutable.\n     */\n    copy(mv: Readonly<G20>): this {\n        return this.set(mv.x, mv.y, mv.a, mv.b);\n    }\n\n    /**\n     * A convenience function for set(0, 0, spinor.a, spinor.b).\n     * Requires `this` multivector to be mutable.\n     */\n    copySpinor(spinor: Readonly<Spinor>): this {\n        return this.set(0, 0, spinor.a, spinor.b);\n    }\n\n    /**\n     * A convenience function for set(vector.x, vector.y, 0, 0).\n     * Requires `this` multivector to be mutable.\n     */\n    copyVector(vector: Readonly<Vector>): this {\n        return this.set(vector.x, vector.y, 0, 0);\n    }\n\n    /**\n     * A convenience function for set(0, 0, 0, 0).\n     * Requires `this` multivector to be mutable.\n     */\n    clear(): this {\n        return this.set(0, 0, 0, 0);\n    }\n\n    clone(): G20 {\n        return new G20(this.x, this.y, this.a, this.b);\n    }\n    /**\n     * @param rhs The multivector dividend.\n     * @returns this / m;\n     */\n    div(rhs: G20): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().div(rhs));\n        }\n        else {\n            if (isScalar(rhs)) {\n                return this.scale(1 / rhs.a);\n            }\n            else {\n                return this.mul(G20.copy(rhs).inv());\n            }\n        }\n    }\n\n    /**\n     * @param m\n     * @returns this ^ m\n     */\n    ext(m: G20): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().ext(m));\n        }\n        else {\n            const La = this.a;\n            const Lx = this.x;\n            const Ly = this.y;\n            const Lb = this.b;\n            const Ra = m.a;\n            const Rx = m.x;\n            const Ry = m.y;\n            const Rb = m.b;\n            const a = La * Ra;\n            const x = La * Rx + Lx * Ra;\n            const y = La * Ry + Ly * Ra;\n            const b = La * Rb + Lx * Ry - Ly * Rx + Lb * Ra;\n            return this.set(x, y, a, b);\n        }\n    }\n\n    /**\n     * Computes the right inverse of this multivector.\n     * inv(X) satisfies X * inv(X) = 1.\n     * @returns inverse(this)\n     */\n    inv(): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().inv());\n        }\n        else {\n            const x0 = this.a;\n            const x1 = this.x;\n            const x2 = this.y;\n            const x3 = this.b;\n\n            const A = [\n                [+x0, +x1, +x2, -x3],\n                [+x1, +x0, -x3, +x2],\n                [+x2, +x3, +x0, -x1],\n                [+x3, +x2, -x1, +x0]\n            ];\n\n            const s = [1, 0, 0, 0];\n\n            const X = gauss(A, s);\n\n            const a = X[0];\n            const x = X[1];\n            const y = X[2];\n            const b = X[3];\n\n            return this.set(x, y, a, b);\n        }\n    }\n\n    lco(rhs: G20): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().lco(rhs));\n        }\n        else {\n            return this.#lco2(this, rhs);\n        }\n    }\n\n    #lco2(lhs: G20, rhs: G20): this {\n        const La = lhs.a;\n        const Lx = lhs.x;\n        const Ly = lhs.y;\n        const Lb = lhs.b;\n        const Ra = rhs.a;\n        const Rx = rhs.x;\n        const Ry = rhs.y;\n        const Rb = rhs.b;\n        const a = La * Ra + Lx * Rx + Ly * Ry - Lb * Rb;\n        const x = La * Rx - Ly * Rb;\n        const y = La * Ry + Lx * Rb;\n        const b = La * Rb;\n        return this.set(x, y, a, b);\n    }\n\n    add(rhs: G20): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().add(rhs));\n        }\n        else {\n            const x = this.x + rhs.x;\n            const y = this.y + rhs.y;\n            const a = this.a + rhs.a;\n            const b = this.b + rhs.b;\n            return this.set(x, y, a, b);\n        }\n    }\n\n    sub(rhs: G20): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().sub(rhs));\n        }\n        else {\n            const x = this.x - rhs.x;\n            const y = this.y - rhs.y;\n            const a = this.a - rhs.a;\n            const b = this.b - rhs.b;\n            return this.set(x, y, a, b);\n        }\n    }\n\n    /**\n     * @param rhs\n     * @returns this * m\n     */\n    mul(rhs: G20): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().mul(rhs));\n        }\n        else {\n            return this.#mul2(this, rhs);\n        }\n    }\n\n    /**\n     * \n     */\n    #mul2(lhs: G20, rhs: G20): this {\n        const La = lhs.a;\n        const Lx = lhs.x;\n        const Ly = lhs.y;\n        const Lb = lhs.b;\n        const Ra = rhs.a;\n        const Rx = rhs.x;\n        const Ry = rhs.y;\n        const Rb = rhs.b;\n        const a = La * Ra + Lx * Rx + Ly * Ry - Lb * Rb;\n        const x = La * Rx + Lx * Ra - Ly * Rb + Lb * Ry;\n        const y = La * Ry + Lx * Rb + Ly * Ra - Lb * Rx;\n        const b = La * Rb + Lx * Ry - Ly * Rx + Lb * Ra;\n        return this.set(x, y, a, b);\n    }\n\n    neg(): G20 {\n        return this.scale(-1);\n    }\n\n    dot(v: G20): number {\n        return this.x * v.x + this.y * v.y;\n    }\n\n    exp(): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().exp());\n        }\n        else {\n            const w = this.a;\n            const z = this.b;\n            const expW = Math.exp(w);\n            // \u03C6 is actually the absolute value of one half the rotation angle.\n            // The orientation of the rotation gets carried in the bivector components.\n            const \u03C6 = Math.sqrt(z * z);\n            const s = expW * (\u03C6 !== 0 ? Math.sin(\u03C6) / \u03C6 : 1);\n            const a = expW * Math.cos(\u03C6);\n            const b = z * s;\n            return this.set(0, 0, a, b);\n        }\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.quaditude());\n    }\n\n    quaditude(): number {\n        const a = this.a;\n        const x = this.x;\n        const y = this.y;\n        const b = this.b;\n        return a * a + x * x + y * y - b * b;\n    }\n\n    normalize(): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().normalize());\n        }\n        else {\n            return this.scale(1 / this.magnitude());\n        }\n    }\n\n    distanceTo(v: G20): number {\n        return Math.sqrt(this.distanceToSquared(v));\n    }\n\n    distanceToSquared(v: G20): number {\n        const dx = this.x - v.x;\n        const dy = this.y - v.y;\n        return dx * dx + dy * dy;\n    }\n\n    rco(m: G20): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().rco(m));\n        }\n        else {\n            return this.#rco2(this, m);\n        }\n    }\n\n    #rco2(lhs: G20, rhs: G20): this {\n        const La = lhs.a;\n        const Lx = lhs.x;\n        const Ly = lhs.y;\n        const Lb = lhs.b;\n        const Ra = rhs.a;\n        const Rx = rhs.x;\n        const Ry = rhs.y;\n        const Rb = rhs.b;\n        const a = La * Ra + Lx * Rx + Ly * Ry - Lb * Rb;\n        const x = Lx * Ra + Lb * Ry;\n        const y = Ly * Ra - Lb * Rx;\n        const b = Lb * Ra;\n        return this.set(x, y, a, b);\n    }\n\n    /**\n     * If `this` is mutable, then sets `this` multivector to its reflection in the plane orthogonal to vector n. The result is mutable.\n     * If `this` is immutable (locked), a copy of `this` is made, which is then reflected. The result is immutable (locked).\n     * \n     * i.e. The result is mutable (unlocked) iff `this` is mutable (unlocked). \n     *\n     * Mathematically,\n     *\n     * this \u27FC - n * this * n\n     *\n     * Geometrically,\n     *\n     * Reflects this multivector in the plane orthogonal to the unit vector, n.\n     * This implementation does assume that n is a vector, but does not assume that it is normalized to unity.\n     *\n     * If n is not a unit vector then the result is scaled by n squared.\n     * The scalar component gets an extra minus sign. The pseudoscalar component does not change sign.\n     * The units of measure are carried through but in most cases n SHOULD be dimensionless.\n     *\n     * @param n The unit vector that defines the reflection plane.\n     */\n    reflect(n: Readonly<Vector>): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().reflect(n));\n        }\n        else {\n            const nx = n.x;\n            const ny = n.y;\n            const a = this.a;\n            const x = this.x;\n            const y = this.y;\n            const b = this.b;\n\n            const nx2 = nx * nx;\n            const ny2 = ny * ny;\n            const \u03BC = nx2 - ny2;\n            const \u03BB = -2 * nx * ny;\n            const \u03B2 = nx2 + ny2;\n\n            // The scalar component picks up a minus sign and the factor |n||n|.\n            const A = -\u03B2 * a;\n            const X = \u03BB * y - \u03BC * x;\n            const Y = \u03BB * x + \u03BC * y;\n            // The pseudoscalar component does not change sign but still picks up the |n||n| factor.\n            const B = \u03B2 * b;\n            // In most cases, n SHOULD be dimensionless.\n            return this.set(X, Y, A, B);\n        }\n    }\n    /**\n     * <p>\n     * Computes a rotor, R, from two unit vectors, where\n     * R = (|b||a| + b * a) / sqrt(2 * |b||a|(|b||a| + b << a))\n     * </p>\n     * \n     * The result is independent of the magnitudes of a and b.\n     *\n     * @param a The starting vector\n     * @param b The ending vector\n     * @returns The rotor representing a rotation from a to b.\n     */\n    rotorFromDirections(a: Readonly<Vector>, b: Readonly<Vector>): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().rotorFromDirections(a, b));\n        }\n        else {\n            rotorFromDirections(a, b, this);\n            return this;\n        }\n    }\n    /*\n    rotorFromFrameToFrame(es: Vector[], fs: Vector[]): G20 {\n        throw new Error(notImplemented('rotorFromFrameToFrame').message);\n    }\n    */\n    /**\n     * Sets this multivector to a rotor that rotates through angle \u03B8 in the oriented plane defined by I.\n     *\n     * @param \u03B8 The rotation angle in radians when the rotor is applied on both sides as R * M * ~R\n     */\n    rotorFromAngle(\u03B8: number): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().rotorFromAngle(\u03B8));\n        }\n        else {\n            const \u03C6 = \u03B8 / 2;\n            return this.set(0, 0, Math.cos(\u03C6), -Math.sin(\u03C6));\n        }\n    }\n    /**\n     * R = sqrt(|b|/|a|) * (|b||a| + b * a) / sqrt(2 * |b||a|(|b||a| + b << a))\n     *\n     * The result is depends  on the magnitudes of a and b. \n     */\n    rotorFromVectorToVector(a: Readonly<Vector>, b: Readonly<Vector>): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().rotorFromVectorToVector(a, b));\n        }\n        else {\n            const ax = a.x;\n            const ay = a.y;\n            const bx = b.x;\n            const by = b.y;\n            const absB = Math.sqrt(bx * bx + by * by);\n            const absA = Math.sqrt(ax * ax + ay * ay);\n            const BA = absB * absA;\n            const dotBA = bx * ax + by * ay;\n            /**\n             * q = b ^ a\n             */\n            const q = bx * ay - by * ax;\n            const denom = Math.sqrt(2 * BA * (BA + dotBA));\n            const f = Math.sqrt(absB) / (Math.sqrt(absA) * denom);\n\n            const A = f * (BA + dotBA);\n            const B = f * q;\n\n            return this.set(0, 0, A, B);\n        }\n    }\n\n    scale(\u03B1: number): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().scale(\u03B1));\n        }\n        else {\n            const x = this.x * \u03B1;\n            const y = this.y * \u03B1;\n            const a = this.a * \u03B1;\n            const b = this.b * \u03B1;\n            return this.set(x, y, a, b);\n        }\n    }\n\n    /**\n     * @param m\n     * @returns this | m\n     */\n    scp(m: G20): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().scp(m));\n        }\n        else {\n            return this.#scp2(this, m);\n        }\n    }\n\n    /**\n     * \n     */\n    #scp2(lhs: G20, rhs: G20): this {\n        const La = lhs.a;\n        const Lx = lhs.x;\n        const Ly = lhs.y;\n        const Lb = lhs.b;\n\n        const Ra = rhs.a;\n        const Rx = rhs.x;\n        const Ry = rhs.y;\n        const Rb = rhs.b;\n\n        const a = La * Ra + Lx * Rx + Ly * Ry - Lb * Rb;\n        const x = 0;\n        const y = 0;\n        const b = 0;\n\n        return this.set(x, y, a, b);\n    }\n\n    /**\n     * Sets the coordinates of `this` multivector.\n     * Requires `this` multivector to be mutable.\n     * @param x The coordinate along the x-axis.\n     * @param y The coordinate along the y-axis.\n     * @param a The scalar coordinate.\n     * @param b The bivector coordinate.\n     */\n    set(x: number, y: number, a = 0, b = 0): this {\n        if (this.isMutable()) {\n            // Take special care to only fire changed event if necessary.\n            const changed = (this.x !== x || this.y !== y || this.a !== a || this.b != b);\n            if (changed) {\n                const coords = this.#coords;\n                coords[COORD_A] = a;\n                coords[COORD_X] = x;\n                coords[COORD_Y] = y;\n                coords[COORD_B] = b;\n                this.#change.set(this);\n            }\n            return this;\n        }\n        else {\n            throw new Error();\n        }\n    }\n\n    equals(v: G20, eps?: number): boolean {\n        eps = (typeof eps === 'undefined') ? 0.0001 : eps;\n        return (this.distanceTo(v) < eps);\n    }\n\n    lerp(v: G20, t: number): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().lerp(v, t));\n        }\n        else {\n            const x = (v.x - this.x) * t + this.x;\n            const y = (v.y - this.y) * t + this.y;\n            const a = (v.a - this.a) * t + this.a;\n            const b = (v.b - this.b) * t + this.b;\n            return this.set(x, y, a, b);\n        }\n    }\n    /**\n     * Determines whether this multivector is exactly 0 (zero).\n     */\n    isZero(eps?: number): boolean {\n        if (typeof eps === 'number') {\n            return Math.abs(this.a) < eps && Math.abs(this.x) < eps && Math.abs(this.y) < eps && Math.abs(this.b) < eps;\n        }\n        else {\n            return this.a === 0 && this.x === 0 && this.y === 0 && this.b === 0;\n        }\n    }\n\n    toString(): string {\n        return JSON.stringify({ x: this.x, y: this.y, a: this.a, b: this.b });\n    }\n    /**\n     * reverse has a ++-- structure on the grades.\n     * The scalar component, a, will not change.\n     * The vector components, x and y, will not change.\n     * The bivector component, b, will change sign.\n     */\n    rev(): G20 {\n        if (this.isMutable()) {\n            // reverse has a ++-- structure on the grades.\n            const a = +this.a;\n            const x = +this.x;\n            const y = +this.y;\n            const b = -this.b;\n            // The unit of measure is unchanged.\n            return this.set(x, y, a, b);\n        }\n        else {\n            return lock(this.clone().rev());\n        }\n    }\n\n    rotate(radians: number): G20 {\n        if (this.isMutable()) {\n            const x0 = this.x;\n            const y0 = this.y;\n            const cos = Math.cos(radians);\n            const sin = Math.sin(radians);\n            const x = x0 * cos - y0 * sin;\n            const y = x0 * sin + y0 * cos;\n            return this.set(x, y, this.a, this.b);\n        }\n        else {\n            return lock(this.clone().rotate(radians));\n        }\n    }\n    /**\n     * Subtracts a multiple of a scalar from this multivector.\n     * @param a The scalar value to be subtracted from this multivector.\n     * @param \u03B1 The fraction of (a * uom) to be subtracted. Default is 1.\n     * @returns this - (a * uom) * \u03B1\n     */\n    subScalar(a: number, \u03B1 = 1): G20 {\n        if (this.isLocked()) {\n            return lock(this.clone().subScalar(a, \u03B1));\n        }\n        else {\n            if (this.isZero()) {\n                this.a = - a * \u03B1;\n                return this;\n            }\n            else if (a === 0 || \u03B1 === 0) {\n                return this;\n            }\n            else {\n                this.a -= a * \u03B1;\n                return this;\n            }\n        }\n    }\n\n    /**\n     * <p>\n     * <code>this \u27FC a * b</code>\n     * </p>\n     * Sets this Geometric2 to the geometric product a * b of the vector arguments.\n     */\n    versor(a: Vector, b: Vector): G20 {\n        if (this.isMutable()) {\n            const A = a.x * b.x + a.y * b.y;\n            const X = 0;\n            const Y = 0;\n            const B = a.x * b.y - a.y * b.x;\n            return this.set(X, Y, A, B);\n        }\n        else {\n            throw new Error();\n        }\n    }\n\n    /**\n     * \n     */\n    __div__(rhs: G20 | number): G20 {\n        if (rhs instanceof G20) {\n            return lock(this.clone().div(rhs));\n        }\n        else if (typeof rhs === 'number') {\n            return lock(this.clone().scale(1 / rhs));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __rdiv__(lhs: number | G20): G20 {\n        if (lhs instanceof G20) {\n            return lock(G20.copy(lhs).div(this));\n        }\n        else if (typeof lhs === 'number') {\n            return lock(G20.scalar(lhs).div(this));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __vbar__(rhs: number | G20): G20 {\n        if (rhs instanceof G20) {\n            return lock(G20.copy(this).scp(rhs));\n        }\n        else if (typeof rhs === 'number') {\n            return lock(G20.copy(this).scp(G20.scalar(rhs)));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __rvbar__(lhs: number | G20): G20 {\n        if (lhs instanceof G20) {\n            return lock(G20.copy(lhs).scp(this));\n        }\n        else if (typeof lhs === 'number') {\n            return lock(G20.scalar(lhs).scp(this));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __wedge__(rhs: number | G20): G20 {\n        if (rhs instanceof G20) {\n            return lock(G20.copy(this).ext(rhs));\n        }\n        else if (typeof rhs === 'number') {\n            // The outer product with a scalar is scalar multiplication.\n            return lock(G20.copy(this).scale(rhs));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __rwedge__(lhs: number | G20): G20 {\n        if (lhs instanceof G20) {\n            return lock(G20.copy(lhs).ext(this));\n        }\n        else if (typeof lhs === 'number') {\n            // The outer product with a scalar is scalar multiplication, and commutes.\n            return lock(G20.copy(this).scale(lhs));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __lshift__(rhs: number | G20): G20 {\n        if (rhs instanceof G20) {\n            return lock(G20.copy(this).lco(rhs));\n        }\n        else if (typeof rhs === 'number') {\n            return lock(G20.copy(this).lco(G20.scalar(rhs)));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __rlshift__(lhs: number | G20): G20 {\n        if (lhs instanceof G20) {\n            return lock(G20.copy(lhs).lco(this));\n        }\n        else if (typeof lhs === 'number') {\n            return lock(G20.scalar(lhs).lco(this));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __rshift__(rhs: number | G20): G20 {\n        if (rhs instanceof G20) {\n            return lock(G20.copy(this).rco(rhs));\n        }\n        else if (typeof rhs === 'number') {\n            return lock(G20.copy(this).rco(G20.scalar(rhs)));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __rrshift__(lhs: number | G20): G20 {\n        if (lhs instanceof G20) {\n            return lock(G20.copy(lhs).rco(this));\n        }\n        else if (typeof lhs === 'number') {\n            return lock(G20.scalar(lhs).rco(this));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __bang__(): G20 {\n        return lock(G20.copy(this).inv());\n    }\n\n    /**\n     * \n     */\n    __eq__(rhs: G20 | number): boolean {\n        if (rhs instanceof G20) {\n            return this.equals(rhs);\n        }\n        else if (typeof rhs === 'number') {\n            return this.equals(G20.scalar(rhs));\n        }\n        else {\n            return false;\n        }\n    }\n\n    /**\n     * \n     */\n    __ne__(rhs: G20 | number): boolean {\n        if (rhs instanceof G20) {\n            return !this.equals(rhs);\n        }\n        else if (typeof rhs === 'number') {\n            return !this.equals(G20.scalar(rhs));\n        }\n        else {\n            return true;\n        }\n    }\n\n    /**\n     * \n     */\n    __tilde__(): G20 {\n        return lock(G20.copy(this).rev());\n    }\n\n    /**\n     * \n     */\n    __add__(rhs: G20 | number): G20 {\n        if (rhs instanceof G20) {\n            return lock(this.clone().add(rhs));\n        }\n        else if (typeof rhs === 'number') {\n            return lock(this.clone().addScalar(rhs, 1));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __radd__(lhs: G20 | number): G20 {\n        if (lhs instanceof G20) {\n            return lock(G20.copy(lhs).add(this));\n        }\n        else if (typeof lhs === 'number') {\n            return lock(G20.scalar(lhs).add(this));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __sub__(rhs: G20 | number): G20 {\n        if (rhs instanceof G20) {\n            return lock(this.clone().sub(rhs));\n        }\n        else if (typeof rhs === 'number') {\n\n            return lock(this.clone().subScalar(rhs, 1));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __rsub__(lhs: G20 | number): G20 {\n        if (lhs instanceof G20) {\n            return lock(G20.copy(lhs).sub(this));\n        }\n        else if (typeof lhs === 'number') {\n            return lock(G20.scalar(lhs).sub(this));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __pos__(): G20 {\n        return lock(G20.copy(this));\n    }\n\n    /**\n     * \n     */\n    __neg__(): G20 {\n        return lock(G20.copy(this).neg());\n    }\n\n    /**\n     * \n     */\n    __mul__(rhs: G20 | number): G20 {\n        if (rhs instanceof G20) {\n            return lock(this.clone().mul(rhs));\n        }\n        else if (typeof rhs === 'number') {\n            return lock(this.clone().scale(rhs));\n        }\n        else {\n            return void 0;\n        }\n    }\n\n    /**\n     * \n     */\n    __rmul__(lhs: G20 | number): G20 {\n        if (lhs instanceof G20) {\n            return lock(G20.copy(lhs).mul(this));\n        }\n        else if (typeof lhs === 'number') {\n            // The ordering of operands is not important for scalar multiplication.\n            return lock(G20.copy(this).scale(lhs));\n        }\n        else {\n            return void 0;\n        }\n    }\n}\n", "export const Commands = {\n    move: 'M',\n    line: 'L',\n    curve: 'C',\n    arc: 'A',\n    close: 'Z'\n} as const;\n", "import { G20 } from './math/G20';\nimport { Disposable } from './reactive/Disposable';\nimport { Observable } from './reactive/Observable';\nimport { variable } from './reactive/variable';\nimport { Commands } from './utils/path-commands';\n\nexport class Anchor {\n    /**\n     * default is zero.\n     */\n    readonly origin: G20;\n    readonly #origin_change: Disposable;\n    readonly controls = {\n        a: new G20(),\n        b: new G20()\n    };\n    readonly #a_change: Disposable;\n    readonly #b_change: Disposable;\n\n    #command: 'M' | 'L' | 'C' | 'A' | 'Z';\n    #relative: boolean;\n\n    #rx: number;\n    #ry: number;\n    #xAxisRotation: number;\n    #largeArcFlag: number;\n    #sweepFlag: number;\n\n    readonly #change = variable(this);\n    readonly change$: Observable<this> = this.#change.asObservable();\n\n    #t: number;\n\n    /**\n     * @param origin\n     * @param ax The x position of the left handle point.\n     * @param ay The y position of the left handle point.\n     * @param bx The x position of the right handle point.\n     * @param by The y position of the right handle point.\n     * @param command The command to describe how to render. Applicable commands are {@link Commands}\n     */\n    constructor(origin: G20, command: 'M' | 'L' | 'C' | 'A' | 'Z' = Commands.move, ax = 0, ay = 0, bx = 0, by = 0) {\n\n        this.origin = origin;\n        this.controls.a.set(ax, ay);\n        this.controls.b.set(bx, by);\n\n        this.#command = command;\n        this.#relative = true;\n        this.#rx = 0;\n        this.#ry = 0;\n        this.#xAxisRotation = 0;\n        this.#largeArcFlag = 0;\n        this.#sweepFlag = 1;\n\n        this.#t = 0;\n\n        this.#origin_change = this.origin.change$.subscribe(() => {\n            this.#change.set(this);\n        });\n        this.#a_change = this.controls.a.change$.subscribe(() => {\n            this.#change.set(this);\n        });\n        this.#b_change = this.controls.b.change$.subscribe(() => {\n            this.#change.set(this);\n        });\n    }\n\n    dispose(): void {\n        if (this.#origin_change) {\n            this.#origin_change.dispose();\n        }\n        if (this.#a_change) {\n            this.#a_change.dispose();\n        }\n        if (this.#b_change) {\n            this.#b_change.dispose();\n        }\n    }\n\n    get x() {\n        return this.origin.x;\n    }\n\n    set x(x: number) {\n        this.origin.x = x;\n    }\n\n    get y() {\n        return this.origin.y;\n    }\n\n    set y(y: number) {\n        this.origin.y = y;\n    }\n\n    get t(): number {\n        return this.#t;\n    }\n    set t(t: number) {\n        if (this.t !== t) {\n            this.#t = t;\n        }\n    }\n\n    copy(v: Anchor): this {\n        this.origin.copyVector(v.origin);\n        this.command = v.command;\n        this.controls.a.copyVector(v.controls.a);\n        this.controls.b.copyVector(v.controls.b);\n        this.relative = v.relative;\n        this.rx = v.rx;\n        this.ry = v.ry;\n        this.xAxisRotation = v.xAxisRotation;\n        this.largeArcFlag = v.largeArcFlag;\n        this.sweepFlag = v.sweepFlag;\n        return this;\n    }\n\n    /**\n     * Invoked when the path is automatic (not manual).\n     */\n    ignore(): void {\n        throw new Error(\"TODO: Anchor.ignore()\");\n    }\n\n    /**\n     * Invoked when the path is manual (not automatic).\n     */\n    listen(): void {\n        // Do nothing.\n        // throw new Error(\"TODO: Anchor.listen()\");\n    }\n\n    /**\n     * default is 'M'.\n     */\n    get command(): 'M' | 'L' | 'C' | 'A' | 'Z' {\n        return this.#command;\n    }\n    set command(command: 'M' | 'L' | 'C' | 'A' | 'Z') {\n        if (this.command !== command) {\n            this.#command = command;\n        }\n    }\n    /**\n     * default is true.\n     */\n    get relative(): boolean {\n        return this.#relative;\n    }\n    set relative(relative: boolean) {\n        if (this.relative !== !!relative) {\n            this.#relative = relative;\n        }\n    }\n    /**\n     * default is zero.\n     */\n    get rx(): number {\n        return this.#rx;\n    }\n    set rx(rx: number) {\n        if (this.rx !== rx) {\n            this.#rx = rx;\n        }\n    }\n    /**\n     * default is zero.\n     */\n    get ry(): number {\n        return this.#ry;\n    }\n    set ry(ry: number) {\n        if (this.ry !== ry) {\n            this.#ry = ry;\n        }\n    }\n    /**\n     * default is zero.\n     */\n    get xAxisRotation(): number {\n        return this.#xAxisRotation;\n    }\n    set xAxisRotation(xAxisRotation: number) {\n        if (this.xAxisRotation !== xAxisRotation) {\n            this.#xAxisRotation = xAxisRotation;\n        }\n    }\n    /**\n     * default is zero.\n     */\n    get largeArcFlag(): number {\n        return this.#largeArcFlag;\n    }\n    set largeArcFlag(largeArcFlag) {\n        if (this.largeArcFlag !== largeArcFlag) {\n            this.#largeArcFlag = largeArcFlag;\n        }\n    }\n    /**\n     * default is one.\n     */\n    get sweepFlag(): number {\n        return this.#sweepFlag;\n    }\n    set sweepFlag(sweepFlag) {\n        if (this.sweepFlag !== sweepFlag) {\n            this.#sweepFlag = sweepFlag;\n        }\n    }\n}\n", "\nlet next_unique_id = 0;\n\nexport const Constants = {\n\n    Identifier: 'g2o-',\n\n    /**\n     * Default amount of vertices to be used for interpreting Arcs and ArcSegments.\n     */\n    Resolution: 12,\n\n    uniqueId: function (): number {\n        return next_unique_id++;\n    }\n};\n", "import { Subject } from 'rxjs';\nimport { DisposableObservable, Observable } from './reactive/Observable';\n\n/**\n * TODO: If this was iterable then there would be less need for the length and getAt.\n */\nexport class Collection<T> {\n\n    readonly #insert: Subject<T[]>;\n    readonly insert$: Observable<T[]>;\n\n    readonly #remove: Subject<T[]>;\n    readonly remove$: Observable<T[]>;\n\n    readonly #order: Subject<void>;\n    readonly order$: Observable<void>;\n\n    #items: T[];\n\n    constructor(items: T[]) {\n\n        this.#items = items;\n\n        this.#insert = new Subject();\n        this.insert$ = new DisposableObservable(this.#insert.asObservable());\n\n        this.#remove = new Subject();\n        this.remove$ = new DisposableObservable(this.#remove.asObservable());\n\n        this.#order = new Subject();\n        this.order$ = new DisposableObservable(this.#order.asObservable());\n    }\n\n    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: unknown): void {\n        this.#items.forEach(callbackfn, thisArg);\n    }\n\n    get length(): number {\n        return this.#items.length;\n    }\n\n    getAt(index: number): T {\n        return this.#items[index];\n    }\n\n    get(): T[] {\n        return this.#items;\n    }\n\n    ping(): void {\n        this.#insert.next(this.#items);\n    }\n\n    pop(): T {\n        const x = this.#items.pop();\n        this.#remove.next([x]);\n        return x;\n    }\n\n    shift(): T {\n        const x = this.#items.shift();\n        this.#remove.next([x]);\n        return x;\n    }\n\n    push(...items: T[]): number {\n        const new_length = this.#items.push(...items);\n        this.#insert.next(items);\n        return new_length;\n    }\n\n    unshift(...items: T[]): number {\n        const new_length = this.#items.unshift();\n        this.#insert.next(items);\n        return new_length;\n    }\n\n    splice(start: number, deleteCount?: number, ...more: T[]): T[] {\n        // TODO: This needs some care because the behavior dependes on ...\n        if (typeof deleteCount === 'number') {\n            const xs = this.#items.splice(start, deleteCount, ...more);\n            this.#remove.next(xs);\n            return xs;\n        }\n        else {\n            const xs = this.#items.splice(start);\n            this.#remove.next(xs);\n            return xs;\n        }\n        /*\n        const spliced = super.splice.apply(this, arguments);\n        this.trigger(Events.Types.remove, spliced);\n        if (arguments.length > 2) {\n            const inserted = this.slice(arguments[0], arguments[0] + arguments.length - 2);\n            this.trigger(Events.Types.insert, inserted);\n            this.trigger(Events.Types.order);\n        }\n        return spliced;\n        */\n    }\n\n    sort(compareFn: (a: T, b: T) => number): this {\n        this.#items.sort(compareFn);\n        this.#order.next();\n        return this;\n    }\n\n    reverse(): this {\n        this.#items.reverse();\n        this.#order.next();\n        return this;\n    }\n\n    indexOf(searchElement: T, fromIndex?: number): number {\n        return this.#items.indexOf(searchElement, fromIndex);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    map<X>(callbackfn: (value: T, index: number, array: T[]) => X, thisArg?: any): X[] {\n        return this.#items.map(callbackfn, thisArg);\n    }\n}\n", "import { Collection } from './collection';\nimport { Disposable } from './reactive/Disposable';\n\nexport interface Child {\n    readonly id: string;\n}\n\n/**\n * A children collection which is accesible both by index and by object `id`.\n */\nexport class Children<T extends Child> extends Collection<T> {\n\n    readonly ids: { [id: string]: T } = {};\n\n    readonly #insert_subscription: Disposable;\n    readonly #remove_subscription: Disposable;\n\n    constructor(children: T[]) {\n        super(children);\n\n        this.#attach(children);\n\n        this.#insert_subscription = this.insert$.subscribe((cs: T[]) => {\n            this.#attach(cs);\n        });\n\n        this.#remove_subscription = this.remove$.subscribe((cs: T[]) => {\n            this.#detach(cs);\n        });\n    }\n\n    dispose(): void {\n        this.#insert_subscription.dispose();\n        this.#remove_subscription.dispose();\n    }\n\n    #attach(children: T[]): this {\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child && child.id) {\n                this.ids[child.id] = child;\n            }\n        }\n        return this;\n    }\n\n    #detach(children: T[]): this {\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            delete this.ids[child.id];\n        }\n        return this;\n    }\n}\n", "\n/**\n * An object should be Disposable if its lifetime is bounded by the holder.\n * Such objects are normally created by the holding object.\n */\nexport interface Disposable {\n    dispose(): void;\n}\n\n/**\n * Calls `dispose()` on each element of `disposables`, traversing the array in reverse order.\n * When all dispose() calls have been made, the length of the disposables is set to zero.\n */\nexport function dispose<T extends Disposable>(disposables: T[]): void {\n    // Our convention is to push disposables onto a $references array.\n    // This means that the last disposable pushed is at the end of the array.\n    // It is more appropriate to dispose in LIFO (Last In First Out) order.\n    // So we iterate the disposables in reverse.\n    const length = disposables.length;\n    for (let i = length - 1; i >= 0; i--) {\n        disposables[i].dispose();\n    }\n    disposables.length = 0;\n}\n\nexport function disposable_from_disposables(disposables: Disposable[]): Disposable {\n    return disposableFromFunction(() => {\n        dispose(disposables);\n    });\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function disposableFromFunction(f: Function): Disposable {\n    return {\n        dispose: () => {\n            f();\n        },\n    };\n}\n", "\nlet root: Window & typeof globalThis;\n\nif (typeof window !== 'undefined') {\n    root = window;\n}\nelse if (typeof global !== 'undefined') {\n    root = global as Window & typeof globalThis;\n}\nelse if (typeof self !== 'undefined') {\n    root = self;\n}\n\nexport { root };\n", "import { root } from './root.js';\n\nexport const TWO_PI = Math.PI * 2;\nexport const HALF_PI = Math.PI * 0.5;\n\n/**\n * @param {Number} a - Start value.\n * @param {Number} b - End value.\n * @param {Number} t - Zero-to-one value describing percentage between a and b.\n * @returns {Number}\n * @description Linear interpolation between two values `a` and `b` by an amount `t`.\n */\nexport function lerp(a: number, b: number, t: number): number {\n    return t * (b - a) + a;\n}\n\n/**\n * @param value The number to find the nearest power-of-two value\n * @description Rounds a number up to the nearest power-of-two value.\n * @see {@link https://en.wikipedia.org/wiki/Power_of_two}\n */\nconst pots = [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096];\nexport function getPoT(value: number) {\n    let i = 0;\n    while (pots[i] && pots[i] < value) {\n        i++;\n    }\n    return pots[i];\n}\n\nexport function mod(v: number, l: number): number {\n    while (v < 0) {\n        v += l;\n    }\n    return v % l;\n}\n\nexport const NumArray = root.Float32Array || Array;\nconst floor = Math.floor;\n\n/**\n * @param {Number} v - Any float\n * @returns {Number} That float trimmed to the third decimal place.\n * @description A pretty fast toFixed(3) alternative.\n * @see {@link http://jsperf.com/parsefloat-tofixed-vs-math-round/18}\n */\nexport function toFixed(v: number): number {\n    return floor(v * 1000000) / 1000000;\n}\n", "import { Anchor } from '../anchor';\nimport { Group } from '../group';\nimport { IBoard } from '../IBoard';\nimport { G20 } from '../math/G20';\nimport { Matrix } from '../matrix';\nimport { variable } from '../reactive/variable';\nimport { Shape } from '../Shape';\nimport { mod, toFixed } from '../utils/math';\nimport { Commands } from '../utils/path-commands';\nimport { View } from './View';\n\ntype DOMElement = HTMLElement | SVGElement;\n\nexport function get_svg_element_defs(svg: SVGElement): SVGDefsElement {\n    const children = svg.children;\n    const N = children.length;\n    for (let i = 0; i < N; i++) {\n        const child = children.item(i);\n        if (child instanceof SVGDefsElement) {\n            return child;\n        }\n    }\n    throw new Error();\n}\n\n/**\n * sets the \"hidden\" _flagUpdate property.\n */\nexport function set_defs_dirty_flag(defs: SVGDefsElement, dirtyFlag: boolean): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (defs as any)._flagUpdate = dirtyFlag;\n}\n\n/**\n * gets the \"hidden\" _flagUpdate property.\n */\nfunction get_defs_dirty_flag(defs: SVGDefsElement): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (defs as any)._flagUpdate as boolean;\n}\n\n/**\n * Used to set attributes on SVG elements so the value MUST be a string.\n */\nexport type StylesMap = { [name: string]: string };\n\n/**\n * A more specific representation of the attributes that are permitted on SVG elements.\n * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\n * The value of all attributes MUST be string.\n */\nexport interface SVGAttributes {\n    'class'?: string;\n    'clip-rule'?: 'nonzero' | 'evenodd' | 'inherit';\n    'cx'?: string;\n    'cy'?: string;\n    /**\n     * Defines the path to be drawn as a list of path commands and their parameters.\n     */\n    'd'?: string;\n    'direction'?: 'ltr' | 'rtl';\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/dominant-baseline\n     */\n    'dominant-baseline'?: 'auto' | 'text-bottom' | 'alphabetic' | 'ideographic' | 'middle' | 'central' | 'mathematical' | 'hanging' | 'text-top';\n    'dx'?: string;\n    'dy'?: string;\n    'fill'?: string;\n    'fill-opacity'?: string;\n    'font-family'?: string;\n    'font-size'?: string;\n    'font-style'?: 'normal' | 'italic' | 'oblique';\n    'font-weight'?: 'normal' | 'bold' | 'bolder' | 'lighter' | string;\n    'fx'?: string;\n    'fy'?: string;\n    'gradientUnits'?: 'userSpaceOnUse' | 'objectBoundingBox';\n    'height'?: string;\n    'href'?: string;\n    'id'?: string;\n    'line-height'?: string;\n    /**\n     * TODO: offset is not a documented SVG attribute. How do we account for it?\n     */\n    'offset'?: string;\n    'opacity'?: string;\n    'text-anchor'?: 'start' | 'middle' | 'end';\n    'r'?: string;\n    'spreadMethod'?: 'pad' | 'reflect' | 'repeat';\n    'stop-color'?: string;\n    'stop-opacity'?: string;\n    'stroke'?: string;\n    'stroke-dasharray'?: string;\n    'stroke-dashoffset'?: string;\n    'stroke-linecap'?: 'butt' | 'round' | 'square';\n    'stroke-linejoin'?: 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round';\n    'stroke-miterlimit'?: string;\n    'stroke-opacity'?: string;\n    'stroke-width'?: string;\n    'text-decoration'?: string;\n    /**\n     * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform\n     */\n    'transform'?: string;\n    'vector-effect'?: 'none' | 'non-scaling-stroke' | 'non-scaling-size' | 'non-rotation' | 'fixed-position';\n    'visibility'?: 'visible' | 'hidden' | 'collapse';\n    'width'?: string;\n    'x'?: string;\n    'x1'?: string;\n    'x2'?: string;\n    'y'?: string;\n    'y1'?: string;\n    'y2'?: string;\n}\n\n/**\n * An de-serialized representation of SVGAttributes.\n */\nexport interface SVGProperties {\n    'class'?: string;\n    'cx'?: number;\n    'cy'?: number;\n    /**\n     * Defines the path to be drawn as a list of path commands and their parameters.\n     */\n    'd'?: string;\n    'dominant-baseline'?: 'auto' | 'middle' | 'hanging';\n    'fill'?: string;\n    'fill-opacity'?: string;\n    'font-family'?: string;\n    'font-size'?: number;\n    'fx'?: number;\n    'fy'?: number;\n    'height'?: number;\n    'id'?: string;\n    'line-height'?: number;\n    'opacity'?: string;\n    'patternUnits'?: 'userSpaceOnUse' | 'objectBoundingBox';\n    'text-anchor'?: 'start' | 'middle' | 'end';\n    'r'?: number;\n    'stroke'?: string;\n    'stroke-dasharray'?: string;\n    'stroke-opacity'?: number;\n    'stroke-width'?: number;\n    'transform'?: string;\n    'visibility'?: 'visible' | 'hidden' | 'collapse';\n    'width'?: number;\n    'x'?: number;\n    'y'?: number;\n}\n\nexport function serialize_svg_props(props: SVGProperties): SVGAttributes {\n    const attrs: SVGAttributes = {};\n    attrs.class = props.class;\n    if (typeof props.cx === 'number') {\n        attrs.cx = `${props.cx}`;\n    }\n    return attrs;\n}\n\nexport type DomContext = {\n    domElement: DOMElement;\n    elem: HTMLElement | SVGElement;\n};\n\nexport const svg = {\n    ns: 'http://www.w3.org/2000/svg',\n\n    xlink: 'http://www.w3.org/1999/xlink',\n\n    // Create an svg namespaced element.\n    createElement: function (qualifiedName: string, attrs: SVGAttributes = {}) {\n        const elem = document.createElementNS(svg.ns, qualifiedName);\n        if (attrs && Object.keys(attrs).length > 0) {\n            svg.setAttributes(elem, attrs);\n        }\n        return elem;\n    },\n\n    // Add attributes from an svg element.\n    setAttributes: function (elem: Element, attrs: SVGAttributes) {\n        // SVGAttributes does not have an index signature.\n        const styles = attrs as { [name: string]: string };\n        const keys = Object.keys(attrs);\n        for (let i = 0; i < keys.length; i++) {\n            const qualifiedName = keys[i];\n            const value = styles[qualifiedName];\n            if (/href/.test(keys[i])) {\n                elem.setAttributeNS(svg.xlink, qualifiedName, value);\n            }\n            else {\n                elem.setAttribute(qualifiedName, value);\n            }\n        }\n        return this;\n    },\n\n    // Remove attributes from an svg element.\n    removeAttributes: function (elem: Element, attrs: SVGAttributes) {\n        for (const key in attrs) {\n            elem.removeAttribute(key);\n        }\n        return this;\n    },\n\n    path_from_anchors: function (board: IBoard, position: G20, attitude: G20, anchors: Anchor[], closed: boolean): string {\n\n        // The anchors are user coordinates and don't include the position and attitude of the body.\n        // By switching x amd y here we handle a 90 degree coordinate rotation.\n        // We are not completely done because Text and Images are rotated.\n        const [screenX, screenY] = screen_functions(board);\n\n        const l = anchors.length;\n        const last = l - 1;\n        let d: Anchor; // The elusive last Commands.move point\n        let string = '';\n\n        for (let i = 0; i < l; i++) {\n\n            const b = anchors[i];\n\n            const prev = closed ? mod(i - 1, l) : Math.max(i - 1, 0);\n            const a = anchors[prev];\n\n            let command: string;\n            let c; Anchor;\n            let vx, vy, ux, uy, ar, bl, br, cl;\n            let rx, ry, xAxisRotation, largeArcFlag, sweepFlag;\n\n            let x = toFixed(screenX(b.x, b.y));\n            let y = toFixed(screenY(b.x, b.y));\n\n            switch (b.command) {\n\n                case Commands.close:\n                    command = Commands.close;\n                    break;\n\n                case Commands.arc:\n\n                    rx = b.rx;\n                    ry = b.ry;\n                    xAxisRotation = b.xAxisRotation;\n                    largeArcFlag = b.largeArcFlag;\n                    sweepFlag = b.sweepFlag;\n\n                    command = Commands.arc + ' ' + rx + ' ' + ry + ' '\n                        + xAxisRotation + ' ' + largeArcFlag + ' ' + sweepFlag + ' '\n                        + x + ' ' + y;\n                    break;\n\n                case Commands.curve:\n\n                    ar = (a.controls && a.controls.b) || G20.zero;\n                    bl = (b.controls && b.controls.a) || G20.zero;\n\n                    if (a.relative) {\n                        vx = toFixed(screenX(ar.x + a.x, ar.y + a.y));\n                        vy = toFixed(screenY(ar.x + a.x, ar.y + a.y));\n                    }\n                    else {\n                        vx = toFixed(screenX(ar.x, ar.y));\n                        vy = toFixed(screenY(ar.x, ar.y));\n                    }\n\n                    if (b.relative) {\n                        ux = toFixed(screenX(bl.x + b.x, bl.y + b.y));\n                        uy = toFixed(screenY(bl.x + b.x, bl.y + b.y));\n                    }\n                    else {\n                        ux = toFixed(screenX(bl.x, bl.y));\n                        uy = toFixed(screenY(bl.x, bl.y));\n                    }\n\n                    command = ((i === 0) ? Commands.move : Commands.curve) +\n                        ' ' + vx + ' ' + vy + ' ' + ux + ' ' + uy + ' ' + x + ' ' + y;\n                    break;\n\n                case Commands.move: {\n                    d = b;\n                    command = Commands.move + ' ' + x + ' ' + y;\n                    break;\n                }\n                default: {\n                    command = b.command + ' ' + x + ' ' + y;\n                }\n            }\n\n            // Add a final point and close it off\n\n            if (i >= last && closed) {\n\n                if (b.command === Commands.curve) {\n\n                    // Make sure we close to the most previous Commands.move\n                    c = d;\n\n                    br = (b.controls && b.controls.b) || b;\n                    cl = (c.controls && c.controls.a) || c;\n\n                    if (b.relative) {\n                        vx = toFixed(screenX(br.x + b.x, br.y + b.y));\n                        vy = toFixed(screenY(br.x + b.x, br.y + b.y));\n                    }\n                    else {\n                        vx = toFixed(screenX(br.x, br.y));\n                        vy = toFixed(screenY(br.x, br.y));\n                    }\n\n                    if (c.relative) {\n                        ux = toFixed(screenX(cl.x + c.x, cl.y + c.y));\n                        uy = toFixed(screenY(cl.x + c.x, cl.y + c.y));\n                    }\n                    else {\n                        ux = toFixed(screenX(cl.x, cl.y));\n                        uy = toFixed(screenY(cl.x, cl.y));\n                    }\n\n                    x = toFixed(screenX(c.x, c.y));\n                    y = toFixed(screenY(c.x, c.y));\n\n                    command += ' C ' + vx + ' ' + vy + ' ' + ux + ' ' + uy + ' ' + x + ' ' + y;\n                }\n\n                if (b.command !== Commands.close) {\n                    command += ' Z';\n                }\n            }\n            string += command + ' ';\n        }\n\n        return string;\n\n    },\n\n    /**\n     * https://developer.mozilla.org/en-US/docs/Web/SVG/Element/clipPath\n     * @param shape \n     * @param svgElement \n     * @returns \n     */\n    getClip: function (shape: Shape, svgElement: SVGElement): SVGClipPathElement {\n        let clipPath = shape.zzz.clipPath;\n        if (!clipPath) {\n            clipPath = shape.zzz.clipPath = svg.createElement('clipPath', { 'clip-rule': 'nonzero' }) as SVGClipPathElement;\n        }\n        if (clipPath.parentNode === null) {\n            get_svg_element_defs(svgElement).appendChild(clipPath);\n        }\n        return clipPath;\n    },\n\n    defs: {\n        update: function (svgElement: SVGElement, defs: SVGDefsElement) {\n            if (get_defs_dirty_flag(defs)) {\n                const children = Array.prototype.slice.call(defs.children, 0);\n                for (let i = 0; i < children.length; i++) {\n                    const child = children[i];\n                    const id = child.id;\n                    const selector = `[fill=\"url(#${id})\"],[stroke=\"url(#${id})\"],[clip-path=\"url(#${id})\"]`;\n                    const exists = svgElement.querySelector(selector);\n                    if (!exists) {\n                        defs.removeChild(child);\n                    }\n                }\n                set_defs_dirty_flag(defs, false);\n            }\n        }\n    },\n} as const;\n\nexport interface SVGViewParams {\n    domElement?: SVGElement;\n}\n\nexport class SVGView implements View {\n    /**\n     * The topmost svg element.\n     */\n    readonly domElement: SVGElement;\n    readonly viewBox: Group;\n    readonly defs: SVGDefsElement;\n\n    width?: number;\n    height?: number;\n\n    readonly #size = variable({ width: 0, height: 0 });\n    readonly size$ = this.#size.asObservable();\n\n    constructor(viewBox: Group, containerId: string, params: SVGViewParams = {}) {\n        if (viewBox instanceof Group) {\n            this.viewBox = viewBox;\n            this.viewBox.parent = null;\n        }\n        else {\n            throw new Error(\"viewBox must be a Group\");\n        }\n        if (params.domElement) {\n            this.domElement = params.domElement;\n        }\n        else {\n            this.domElement = svg.createElement('svg', { id: `${containerId}-svg` });\n        }\n\n        this.defs = svg.createElement('defs') as SVGDefsElement;\n        set_defs_dirty_flag(this.defs, false);\n        this.domElement.appendChild(this.defs);\n        this.domElement.style.overflow = 'hidden';\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setSize(size: { width: number, height: number }, ratio: number): this {\n        this.width = size.width;\n        this.height = size.height;\n        svg.setAttributes(this.domElement, { width: `${size.width}px`, height: `${size.height}px` });\n        this.#size.set(size);\n        return this;\n    }\n\n    render(): this {\n        const svgElement = this.domElement;\n        this.viewBox.render(this.domElement, svgElement);\n        svg.defs.update(svgElement, this.defs);\n        return this;\n    }\n}\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform\n *  \n * [\n *    [a c e]\n *    [b d f]\n *    [0 0 1]\n * ] => \"matrix(a b c d e f)\"\"\n */\nexport function transform_value_of_matrix(m: Matrix): string {\n    const a = m.a;\n    const b = m.b;\n    const c = m.c;\n    const d = m.d;\n    const e = m.e;\n    const f = m.f;\n    return `matrix(${[a, b, c, d, e, f].map(toFixed).join(' ')})`;\n}\n\n/**\n * If the bounding box is oriented such that y increases in the upwards direction,\n * exchange the x and y coordinates because we will be applying a 90 degree rotation.\n */\nfunction screen_functions(board: IBoard) {\n    if (board.goofy) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        return [(x: number, y: number): number => x, (x: number, y: number): number => y];\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        return [(x: number, y: number): number => y, (x: number, y: number): number => x];\n    }\n}\n", "import { Anchor } from \"../anchor\";\nimport { Color } from '../effects/ColorProvider';\nimport { Flag } from '../Flag';\nimport { G20 } from \"../math/G20\";\nimport { Disposable, dispose } from \"../reactive/Disposable\";\nimport { Observable } from \"../reactive/Observable\";\nimport { variable, Variable } from '../reactive/variable';\nimport { TextDecoration } from '../text';\n\n/**\n * Information that is shared between the model and the view.\n */\nexport class ZZZ implements Disposable {\n    /**\n     * \n     */\n    readonly disposables: Disposable[] = [];\n    /*\n     *\n     */\n    readonly flags: { [flag: number]: boolean } = {};\n\n    appended?: boolean;\n    anchor$?: Observable<'start' | 'middle' | 'end'>;\n    baseline$?: Observable<'auto' | 'text-bottom' | 'alphabetic' | 'ideographic' | 'middle' | 'central' | 'mathematical' | 'hanging' | 'text-top'>;\n\n    /**\n     * The clip property indicates that this path is being used as the clipPath for some other shape.\n     */\n    readonly #clip = variable(false);\n    readonly clip$ = this.#clip.asObservable();\n    clipPath?: SVGClipPathElement;\n\n    context?: {\n        ctx?: CanvasRenderingContext2D;\n    };\n    decoration$?: Observable<TextDecoration[]>;\n    direction$?: Observable<'ltr' | 'rtl'>;\n    dx$?: Observable<number | string>;\n    dy$?: Observable<number | string>;\n    /**\n     * Used by the CanvasRenderer.\n     */\n    effect?: CanvasPattern;\n    /**\n     * The element corresponding to some Shape and used by the SVG renderer. It will share the same identifier.\n     */\n    elem?: HTMLElement | SVGElement;\n    fill$?: Observable<Color>;\n    fillOpacity$?: Observable<number>;\n    fontStyle$?: Observable<'normal' | 'italic' | 'oblique'>;\n    fontWeight$?: Observable<'normal' | 'bold' | 'bolder' | 'lighter' | number>;\n    /**\n     * DGH: Something strange in use.\n     */\n    hasFillEffect?: boolean;\n    /**\n     * DGH: Something strange in use.\n     */\n    hasStrokeEffect?: boolean;\n    height$?: Observable<number>;\n    image?: SVGImageElement;\n    offset?: G20;\n    opacity$?: Observable<number>;\n    radius$?: Observable<number>;\n    scale?: G20;\n    spreadMethod$: Observable<'pad' | 'reflect' | 'repeat'>;\n    stroke$?: Observable<Color>;\n    strokeOpacity$?: Observable<number>;\n    strokeWidth$?: Observable<number>;\n    textContent$?: Observable<string>;\n    units$?: Observable<'userSpaceOnUse' | 'objectBoundingBox'>;\n\n    vertices?: Anchor[];\n    vertices_subject?: Variable<number>;\n    vertices$?: Observable<number>;\n\n    visibility$?: Observable<'visible' | 'hidden' | 'collapse'>;\n    width$?: Observable<number>;\n\n    dispose(): void {\n        dispose(this.disposables);\n    }\n    get clip(): boolean {\n        return this.#clip.get();\n    }\n    set clip(clip: boolean) {\n        this.#clip.set(clip);\n        this.flags[Flag.ClipFlag] = true;\n    }\n}", "import { Child } from './children';\nimport { Flag } from './Flag';\nimport { Disposable } from './reactive/Disposable';\nimport { ZZZ } from './renderers/ZZZ';\n\n/**\n * The foundational object for the scenegraph.\n */\nexport abstract class ElementBase<P> implements Child, Disposable {\n    /**\n     * \n     */\n    parent: P;\n\n    /**\n     * \n     */\n    readonly zzz: ZZZ = new ZZZ();\n\n    readonly #id: string;\n\n    #className = '';\n\n    classList: string[] = [];\n\n    constructor(id: string) {\n        this.#id = id;\n        this.flagReset(false);\n    }\n\n    dispose(): void {\n        this.zzz.dispose();\n    }\n\n    flagReset(dirtyFlag = false): this {\n        this.zzz.flags[Flag.ClassName] = dirtyFlag;\n        return this;\n    }\n    get id(): string {\n        return this.#id;\n    }\n    get className(): string {\n        return this.#className;\n    }\n    set className(className: string) {\n        if (this.className !== className) {\n            this.zzz.flags[Flag.ClassName] = true;\n            this.classList = className.split(/\\s+?/);\n            this.#className = className;\n        }\n    }\n}\n", "import { Matrix } from \"../matrix\";\n\nexport function compose_2d_3x3_transform(x: number, y: number, sx: number, sy: number, cos_\u03C6:number, sin_\u03C6: number, skewX: number, skewY: number, matrix: Matrix): void {\n    // \u03C6 is 1/2 the rotation angle.\n    // SVG and CSS consider positive angles to be active clockwise movement.\n    // But in mathematics, a positive angle is associated with counter-clockwise movement.\n    // Use double-angle formulae to compute the cosine and sine of the full angle, which is what we need for the matrix.\n    const cos_\u03B8 = cos_\u03C6 * cos_\u03C6 - sin_\u03C6 * sin_\u03C6;\n    const sin_\u03B8 = 2 * cos_\u03C6 * sin_\u03C6;\n    const a = sx;\n    const b = sy;\n    const p = Math.tan(skewX);\n    const q = Math.tan(skewY);\n    const c = cos_\u03B8;\n    const s = sin_\u03B8;\n    const ac = a * c;\n    const as = a * s;\n    const asq = as * q;\n    const bc = b * c;\n    const bcp = bc * p;\n    const bcq = bc * q;\n    const bs = b * s;\n    const pq = p * q;\n    const py = p * y;\n\n    const a11 = ac - asq + bcp * pq * bs;\n    const a12 = -as + bcp;\n    const a13 = x + py;\n    const a21 = bcq + bs;\n    const a22 = bc;\n    const a23 = y;\n    matrix.set(a11, a12, a13, a21, a22, a23, 0, 0, 1);\n}", "import { variable } from './reactive/variable.js';\nimport { NumArray } from './utils/math.js';\n\nconst cos = Math.cos;\nconst sin = Math.sin;\nconst tan = Math.tan;\n\n/**\n * 1st row is [a11,a12,a13], 2nd row is [a21,a22,a23], 3rd row is [a31,a32,a33]\n */\nexport class Matrix {\n\n    readonly #change = variable(this);\n    readonly change$ = this.#change.asObservable();\n\n    /**\n     * 1st row is [0,1,2], 2nd row is [3,4,5], 3rd row is [6,7,8]\n     */\n    #elements = new NumArray(9);\n\n    /**\n     * Determines whether we automatically calculate the values for the matrix or if the developer intends to manage the matrix.\n     */\n    manual = false;\n\n    #verbose = true;\n\n    constructor(a11 = 1, a12 = 0, a13 = 0, a21 = 0, a22 = 1, a23 = 0, a31 = 0, a32 = 0, a33 = 1) {\n        this.#elements[0] = a11;\n        this.#elements[1] = a12;\n        this.#elements[2] = a13;\n        this.#elements[3] = a21;\n        this.#elements[4] = a22;\n        this.#elements[5] = a23;\n        this.#elements[6] = a31;\n        this.#elements[7] = a32;\n        this.#elements[8] = a33;\n    }\n    get a(): number {\n        return this.#elements[0];\n    }\n    get b(): number {\n        return this.#elements[3];\n    }\n    get c(): number {\n        return this.#elements[1];\n    }\n    get d(): number {\n        return this.#elements[4];\n    }\n    get e(): number {\n        return this.#elements[2];\n    }\n    get f(): number {\n        return this.#elements[5];\n    }\n    get a11(): number {\n        return this.#elements[0];\n    }\n    get a12(): number {\n        return this.#elements[1];\n    }\n    get a13(): number {\n        return this.#elements[2];\n    }\n    get a21(): number {\n        return this.#elements[3];\n    }\n    get a22(): number {\n        return this.#elements[4];\n    }\n    get a23(): number {\n        return this.#elements[5];\n    }\n    get a31(): number {\n        return this.#elements[6];\n    }\n    get a32(): number {\n        return this.#elements[7];\n    }\n    get a33(): number {\n        return this.#elements[8];\n    }\n\n    set(a11: number, a12: number, a13: number, a21: number, a22: number, a23: number, a31: number, a32: number, a33: number): this {\n\n        this.#elements[0] = a11;\n        this.#elements[1] = a12;\n        this.#elements[2] = a13;\n        this.#elements[3] = a21;\n        this.#elements[4] = a22;\n        this.#elements[5] = a23;\n        this.#elements[6] = a31;\n        this.#elements[7] = a32;\n        this.#elements[8] = a33;\n\n        return this.#broadcast();\n    }\n\n    set_from_matrix(m: Matrix): this {\n\n        this.#elements[0] = m.a11;\n        this.#elements[1] = m.a12;\n        this.#elements[2] = m.a13;\n        this.#elements[3] = m.a21;\n        this.#elements[4] = m.a22;\n        this.#elements[5] = m.a23;\n        this.#elements[6] = m.a31;\n        this.#elements[7] = m.a32;\n        this.#elements[8] = m.a33;\n\n        return this.#broadcast();\n    }\n\n    /**\n     * Copy the matrix of one to the current instance.\n     */\n    copy(m: Matrix): this {\n\n        this.#elements[0] = m.#elements[0];\n        this.#elements[1] = m.#elements[1];\n        this.#elements[2] = m.#elements[2];\n        this.#elements[3] = m.#elements[3];\n        this.#elements[4] = m.#elements[4];\n        this.#elements[5] = m.#elements[5];\n        this.#elements[6] = m.#elements[6];\n        this.#elements[7] = m.#elements[7];\n        this.#elements[8] = m.#elements[8];\n\n        this.manual = m.manual;\n\n        return this.#broadcast();\n    }\n\n    /**\n     * Sets matrix to the identity, like resetting.\n     */\n    identity(): this {\n\n        this.#elements[0] = 1;\n        this.#elements[1] = 0;\n        this.#elements[2] = 0;\n        this.#elements[3] = 0;\n        this.#elements[4] = 1;\n        this.#elements[5] = 0;\n        this.#elements[6] = 0;\n        this.#elements[7] = 0;\n        this.#elements[8] = 1;\n\n        return this.#broadcast();\n    }\n\n    multiply(b11: number, b12: number, b13: number, b21: number, b22: number, b23: number, b31: number, b32: number, b33: number): this {\n\n        const A = this.#elements;\n\n        const a11 = A[0];\n        const a12 = A[1];\n        const a13 = A[2];\n        const a21 = A[3];\n        const a22 = A[4];\n        const a23 = A[5];\n        const a31 = A[6];\n        const a32 = A[7];\n        const a33 = A[8];\n\n        this.#elements[0] = a11 * b11 + a12 * b21 + a13 * b31;  // c11\n        this.#elements[1] = a11 * b12 + a12 * b22 + a13 * b32;  // c12\n        this.#elements[2] = a11 * b13 + a12 * b23 + a13 * b33;  // c13\n\n        this.#elements[3] = a21 * b11 + a22 * b21 + a23 * b31;  // c21\n        this.#elements[4] = a21 * b12 + a22 * b22 + a23 * b32;  // c22\n        this.#elements[5] = a21 * b13 + a22 * b23 + a23 * b33;  // c23\n\n        this.#elements[6] = a31 * b11 + a32 * b21 + a33 * b31;  // c31\n        this.#elements[7] = a31 * b12 + a32 * b22 + a33 * b32;  // c32\n        this.#elements[8] = a31 * b13 + a32 * b23 + a33 * b33;  // c33\n\n        return this.#broadcast();\n    }\n\n    multiply_vector(x: number = 0, y: number = 0, z: number = 1): [number, number, number] {\n\n        const x1 = this.a11 * x + this.a12 * y + this.a13 * z;\n        const x2 = this.a21 * x + this.a22 * y + this.a23 * z;\n        const x3 = this.a31 * x + this.a32 * y + this.a33 * z;\n\n        return [x1, x2, x3];\n    }\n\n    multiply_by_scalar(s: number): this {\n        this.#elements[0] *= s;\n        this.#elements[1] *= s;\n        this.#elements[2] *= s;\n        this.#elements[3] *= s;\n        this.#elements[4] *= s;\n        this.#elements[5] *= s;\n        this.#elements[6] *= s;\n        this.#elements[7] *= s;\n        this.#elements[8] *= s;\n        return this.#broadcast();\n    }\n\n    /**\n     * @param out The optional matrix to apply the inversion to.\n     * Return an inverted version of the matrix. If no optional one is passed a new matrix is created and returned.\n     */\n    inverse(out?: Matrix): Matrix {\n\n        const a = this.#elements;\n        out = out || new Matrix();\n\n        const a00 = a[0], a01 = a[1], a02 = a[2];\n        const a10 = a[3], a11 = a[4], a12 = a[5];\n        const a20 = a[6], a21 = a[7], a22 = a[8];\n\n        const b01 = a22 * a11 - a12 * a21;\n        const b11 = -a22 * a10 + a12 * a20;\n        const b21 = a21 * a10 - a11 * a20;\n\n        // Calculate the determinant\n        let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n        if (!det) {\n            return null;\n        }\n\n        det = 1.0 / det;\n\n        out.#elements[0] = b01 * det;\n        out.#elements[1] = (-a22 * a01 + a02 * a21) * det;\n        out.#elements[2] = (a12 * a01 - a02 * a11) * det;\n        out.#elements[3] = b11 * det;\n        out.#elements[4] = (a22 * a00 - a02 * a20) * det;\n        out.#elements[5] = (-a12 * a00 + a02 * a10) * det;\n        out.#elements[6] = b21 * det;\n        out.#elements[7] = (-a21 * a00 + a01 * a20) * det;\n        out.#elements[8] = (a11 * a00 - a01 * a10) * det;\n\n        return out;\n    }\n\n    scale(sx: number, sy: number): this {\n        if (sx === 1 && sy === 1) {\n            return this;\n        }\n        else {\n            // console.lg(\"Matrix.scale\", \"sx\", sx, \"sy\", sy);\n            return this.multiply(sx, 0, 0, 0, sy, 0, 0, 0, 1);\n        }\n    }\n\n    /**\n     * @param angle The rotation angle in radians.\n     * @returns \n     */\n    rotate(angle: number): this {\n        const c = cos(angle);\n        const s = sin(angle);\n        if (c === 1 && s === 0) {\n            return this;\n        }\n        else {\n            // console.lg(\"Matrix.rotate\", \"angle\", angle, \"cos\", c, \"sin\", s);\n            return this.multiply(c, -s, 0, s, c, 0, 0, 0, 1);\n        }\n    }\n\n    translate(translation: { x: number, y: number }): this {\n        if (translation.x === 0 && translation.y === 0) {\n            return this;\n        }\n        else {\n            // console.lg(\"Matrix.translate\", translation.x, translation.y);\n            return this.multiply(1, 0, translation.x, 0, 1, translation.y, 0, 0, 1);\n        }\n    }\n\n    /**\n     * Skew the matrix by an angle in the x axis direction.\n     * \n     * @param skewX The skew angle in radians.\n     */\n    skewX(skewX: number): this {\n        if (skewX === 0) {\n            return this;\n        }\n        else {\n            const a = tan(skewX);\n            // console.lg(\"Matrix.skewX\", \"angle\", angle, \"a\", a);\n            return this.multiply(1, a, 0, 0, 1, 0, 0, 0, 1);\n        }\n    }\n\n    /**\n     * Skew the matrix by an angle in the y axis direction.\n     * \n     * @param skewY The skew angle in radians.\n     */\n    skewY(skewY: number): this {\n        if (skewY === 0) {\n            return this;\n        }\n        else {\n            const a = tan(skewY);\n            // console.lg(\"Matrix.skewY\", \"angle\", angle, \"a\", a);\n            return this.multiply(1, 0, 0, a, 1, 0, 0, 0, 1);\n        }\n\n    }\n\n    silence(): this {\n        this.#verbose = false;\n        return this;\n    }\n\n    #broadcast(): this {\n        if (this.#verbose) {\n            this.#change.set(this);\n        }\n        return this;\n    }\n\n    touch(): this {\n        this.#verbose = true;\n        return this.#broadcast();\n    }\n}\n// TODO\n/*\nexport function multiply(A: Matrix, B, C) {\n\n    if (B.length <= 3) { // Multiply G20\n\n        const e = A;\n        let x, y, z;\n\n        const a = B[0] || 0,\n            b = B[1] || 0,\n            c = B[2] || 0;\n\n        // Go down rows first\n        // a, d, g, b, e, h, c, f, i\n\n        x = e[0] * a + e[1] * b + e[2] * c;\n        y = e[3] * a + e[4] * b + e[5] * c;\n        z = e[6] * a + e[7] * b + e[8] * c;\n\n        return [x, y, z];\n\n    }\n\n    const A0 = A[0], A1 = A[1], A2 = A[2];\n    const A3 = A[3], A4 = A[4], A5 = A[5];\n    const A6 = A[6], A7 = A[7], A8 = A[8];\n\n    const B0 = B[0], B1 = B[1], B2 = B[2];\n    const B3 = B[3], B4 = B[4], B5 = B[5];\n    const B6 = B[6], B7 = B[7], B8 = B[8];\n\n    C = C || new NumArray(9);\n\n    C[0] = A0 * B0 + A1 * B3 + A2 * B6;\n    C[1] = A0 * B1 + A1 * B4 + A2 * B7;\n    C[2] = A0 * B2 + A1 * B5 + A2 * B8;\n    C[3] = A3 * B0 + A4 * B3 + A5 * B6;\n    C[4] = A3 * B1 + A4 * B4 + A5 * B7;\n    C[5] = A3 * B2 + A4 * B5 + A5 * B8;\n    C[6] = A6 * B0 + A7 * B3 + A8 * B6;\n    C[7] = A6 * B1 + A7 * B4 + A8 * B7;\n    C[8] = A6 * B2 + A7 * B5 + A8 * B8;\n\n    return C;\n\n}\n*/\n", "import { Group } from \"../group\";\nimport { Matrix } from \"../matrix\";\nimport { Shape } from \"../Shape\";\n\nexport function computed_world_matrix(shape: Shape, matrix: Matrix): void {\n\n    matrix = (matrix && matrix.identity()) || new Matrix();\n    let parent: Shape | Group = shape;\n    const matrices: Matrix[] = [];\n\n    while (parent && parent.matrix) {\n        matrices.push(parent.matrix);\n        // The parent may not be a Group, it could be a View we have reached the top level.\n        // However, the test for a local matrix will exclude the view.\n        parent = parent.parent as Group;\n    }\n\n    matrices.reverse();\n\n    for (let i = 0; i < matrices.length; i++) {\n        const m = matrices[i];\n        matrix.multiply(m.a11, m.a12, m.a13, m.a21, m.a22, m.a23, m.a31, m.a32, m.a33);\n    }\n}\n", "import { Anchor } from './anchor';\nimport { Constants } from './constants';\nimport { Color } from './effects/ColorProvider';\nimport { ElementBase } from './element';\nimport { Flag } from './Flag';\nimport { IBoard } from './IBoard';\nimport { IShape } from './IShape';\nimport { compose_2d_3x3_transform } from './math/compose_2d_3x3_transform';\nimport { G20 } from './math/G20';\nimport { Matrix } from './matrix';\nimport { Disposable } from './reactive/Disposable';\nimport { variable } from './reactive/variable';\nimport { computed_world_matrix } from './utils/compute_world_matrix';\n\nexport type PositionLike = Anchor | G20 | Shape | [x: number, y: number];\n\nfunction ensure_mutable(mv: G20): G20 {\n    if (mv.isMutable()) {\n        return mv;\n    }\n    else {\n        return mv.clone();\n    }\n}\n\nexport function position_from_like(like: PositionLike): G20 | null {\n    if (like instanceof Shape) {\n        return ensure_mutable(like.position);\n    }\n    if (like instanceof G20) {\n        return ensure_mutable(like);\n    }\n    else if (like instanceof Anchor) {\n        return ensure_mutable(like.origin);\n    }\n    else if (Array.isArray(like)) {\n        return G20.vector(like[0], like[1]);\n    }\n    else {\n        return null;\n    }\n}\n\nexport interface Parent {\n    update?(): void;\n}\n\nexport interface ShapeAttributes {\n    id: string;\n    opacity: number;\n    position: PositionLike;\n    attitude: G20;\n    visibility: 'visible' | 'hidden' | 'collapse';\n    compensate: boolean;\n}\n\nexport interface ShapeProperties {\n    id: string;\n    opacity: number;\n    /**\n     * alias for the position property.\n     */\n    X: G20;\n    position: G20;\n    /**\n     * alias for the attitude property.\n     */\n    R: G20;\n    attitude: G20;\n    visibility: 'visible' | 'hidden' | 'collapse';\n}\n\nfunction ensure_identifier(attributes: Partial<ShapeAttributes>): string {\n    if (typeof attributes.id === 'string') {\n        return attributes.id;\n    }\n    else {\n        return `${Constants.Identifier}${Constants.uniqueId()}`;\n    }\n}\n\nexport abstract class Shape extends ElementBase<unknown> implements IShape<unknown>, ShapeProperties {\n\n    /**\n     * The matrix value of the shape's position, rotation, and scale.\n     */\n    #matrix: Matrix = null;\n\n    /**\n     * The matrix value of the shape's position, rotation, and scale in the scene.\n     */\n    #worldMatrix: Matrix = null;\n\n    #position: G20;\n    #position_change: Disposable;\n\n    #attitude: G20;\n    #attitude_change: Disposable;\n\n    /**\n     * The scale supports non-uniform scaling.\n     * The API provides more convenient access for uniform scaling.\n     * Make the easy things easy...\n     */\n    readonly #scale: G20 = new G20(1, 1);\n    readonly #scale_change = this.#scale.change$.subscribe(() => {\n        this.zzz.flags[Flag.Matrix] = true;\n    });\n\n\n    readonly #skewX = variable(0);\n\n    readonly #skewY = variable(0);\n\n    readonly #opacity = variable(1);\n    readonly #visibility = variable('visible' as 'visible' | 'hidden' | 'collapse');\n\n    readonly #compensate: boolean;\n\n    #clipPath: Shape | null = null;\n\n    abstract automatic: boolean;\n    abstract beginning: number;\n    abstract cap: 'butt' | 'round' | 'square';\n    abstract closed: boolean;\n    abstract curved: boolean;\n    abstract ending: number;\n    abstract fill: Color;\n    abstract join: 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round';\n    abstract length: number;\n    abstract strokeWidth: number;\n    abstract miter: number;\n    abstract stroke: Color;\n    abstract getBoundingBox(shallow?: boolean): { top?: number; left?: number; right?: number; bottom?: number };\n    abstract hasBoundingBox(): boolean;\n    abstract noFill(): this;\n    abstract noStroke(): this;\n    abstract subdivide(limit: number): this;\n    abstract render(domElement: HTMLElement | SVGElement, svgElement: SVGElement): void;\n\n    constructor(readonly board: IBoard, attributes: Partial<ShapeAttributes> = {}) {\n\n        super(ensure_identifier(attributes));\n\n        this.zzz.opacity$ = this.#opacity.asObservable();\n        this.zzz.visibility$ = this.#visibility.asObservable();\n\n        this.flagReset(true);\n\n        /**\n         * The transformation matrix of the shape.\n         */\n        this.matrix = new Matrix();\n\n        /**\n         * The transformation matrix of the shape in the scene.\n         */\n        this.worldMatrix = new Matrix();\n\n        if (attributes.position) {\n            this.#position = position_from_like(attributes.position);\n        }\n        else {\n            this.#position = new G20(0, 0);\n        }\n\n        if (attributes.attitude) {\n            this.#attitude = attributes.attitude;\n        }\n        else {\n            this.#attitude = new G20(0, 0, 1, 0);\n        }\n\n        if (attributes.compensate) {\n            this.#compensate = attributes.compensate;\n        }\n        else {\n            this.#compensate = false;\n        }\n\n        if (typeof attributes.opacity === 'number') {\n            this.#opacity.set(attributes.opacity);\n        }\n\n        if (attributes.visibility) {\n            this.#visibility.set(attributes.visibility);\n        }\n\n        /**\n         * The value for how much the shape is scaled relative to its parent.\n         */\n        this.scale = 1;\n\n        /**\n         * Skew the shape by an angle in the x axis direction.\n         */\n        this.skewX = 0;\n\n        /**\n         * Skew the shape by an angle in the y axis direction.\n         */\n        this.skewY = 0;\n\n        // Wait to bind change detection until all properties have been established.\n        this.#position_change = this.#position_change_bind();\n        this.#attitude_change = this.#attitude_change_bind();\n    }\n\n    override dispose(): void {\n        this.#scale_change.dispose();\n        this.#position_change_unbind();\n        this.#attitude_change_unbind();\n        super.dispose();\n    }\n\n    #update_matrix(compensate: boolean): void {\n        // For performance, the matrix product has been pre-computed.\n        // M = T * S * R * skewX * skewY\n        const position = this.position;\n        const x = position.x;\n        const y = position.y;\n        const attitude = this.attitude;\n        const scale = this.scaleXY;\n        const sx = scale.x;\n        const sy = scale.y;\n        if (this.board.goofy) {\n            const cos_\u03C6 = attitude.a;\n            const sin_\u03C6 = attitude.b;\n            compose_2d_3x3_transform(x, y, sx, sy, cos_\u03C6, sin_\u03C6, this.skewX, this.skewY, this.matrix);\n        }\n        else {\n            if (compensate) {\n                // Text needs an additional rotation of -\u03C0/2 (i.e. clockwise 90 degrees) to compensate for \n                // the use of a right-handed coordinate frame. The rotor for this is cos(\u03C0/4)+sin(\u03C0/4)*I.\n                // Here we compute the effective rotator (which is obtained by multiplying the two rotors),\n                // and use that to compose the transformation matrix.\n                const a = attitude.a;\n                const b = attitude.b;\n                const cos_\u03C6 = (a - b) / Math.SQRT2;\n                const sin_\u03C6 = (a + b) / Math.SQRT2;\n                compose_2d_3x3_transform(y, x, sy, sx, cos_\u03C6, sin_\u03C6, this.skewY, this.skewX, this.matrix);\n            }\n            else {\n                const cos_\u03C6 = attitude.a;\n                const sin_\u03C6 = attitude.b;\n                compose_2d_3x3_transform(y, x, sy, sx, cos_\u03C6, sin_\u03C6, this.skewY, this.skewX, this.matrix);\n            }\n        }\n    }\n\n    update(): this {\n        if (!this.matrix.manual && this.zzz.flags[Flag.Matrix]) {\n            this.#update_matrix(this.#compensate);\n        }\n\n        // There's no update on the super type.\n        return this;\n    }\n\n    flagReset(dirtyFlag = false): this {\n        this.zzz.flags[Flag.Vertices] = dirtyFlag;\n        this.zzz.flags[Flag.Matrix] = dirtyFlag;\n        this.zzz.flags[Flag.Scale] = dirtyFlag;\n        super.flagReset(dirtyFlag);\n        return this;\n    }\n    useAttitude(attitude: G20): void {\n        this.#attitude_change_unbind();\n        this.#attitude = attitude;\n        this.#attitude_change = this.#attitude_change_bind();\n    }\n    #attitude_change_bind(): Disposable {\n        return this.#attitude.change$.subscribe(() => {\n            this.#update_matrix(this.#compensate);\n            this.zzz.flags[Flag.Matrix] = true;\n        });\n    }\n    #attitude_change_unbind(): void {\n        if (this.#attitude_change) {\n            this.#attitude_change.dispose();\n            this.#attitude_change = null;\n        }\n    }\n    usePosition(position: G20): void {\n        this.#position_change_unbind();\n        this.#position = position;\n        this.#position_change = this.#position_change_bind();\n    }\n    #position_change_bind(): Disposable {\n        return this.#position.change$.subscribe(() => {\n            this.#update_matrix(this.#compensate);\n            this.zzz.flags[Flag.Matrix] = true;\n        });\n    }\n    #position_change_unbind(): void {\n        if (this.#position_change) {\n            this.#position_change.dispose();\n            this.#position_change = null;\n        }\n    }\n    get X(): G20 {\n        return this.#position;\n    }\n    set X(pos: G20) {\n        if (pos instanceof G20) {\n            this.#position.copyVector(pos);\n        }\n    }\n    get position(): G20 {\n        return this.#position;\n    }\n    set position(position: G20) {\n        if (position instanceof G20) {\n            this.#position.copyVector(position);\n        }\n    }\n    get R(): G20 {\n        return this.#attitude;\n    }\n    set R(attitude: G20) {\n        if (attitude instanceof G20) {\n            this.#attitude.copySpinor(attitude);\n        }\n    }\n    get attitude(): G20 {\n        return this.#attitude;\n    }\n    set attitude(attitude: G20) {\n        if (attitude instanceof G20) {\n            this.#attitude.copySpinor(attitude);\n        }\n    }\n    get scale(): number {\n        if (this.#scale.x === this.#scale.y) {\n            return this.#scale.x;\n        }\n        else {\n            // Some message to indicate non-uniform scaling is in effect.\n            throw new Error();\n        }\n    }\n    set scale(scale: number) {\n        this.#scale.x = scale;\n        this.#scale.y = scale;\n        this.#update_matrix(this.#compensate);\n        this.zzz.flags[Flag.Matrix] = true;\n        this.zzz.flags[Flag.Scale] = true;\n    }\n    get scaleXY(): G20 {\n        return this.#scale;\n    }\n    set scaleXY(scale: G20) {\n        this.#scale.set(scale.x, scale.y, 0, 0);\n        this.zzz.flags[Flag.Matrix] = true;\n        this.zzz.flags[Flag.Scale] = true;\n    }\n    get skewX(): number {\n        return this.#skewX.get();\n    }\n    set skewX(skewX: number) {\n        this.#skewX.set(skewX);\n        this.zzz.flags[Flag.Matrix] = true;\n    }\n    get skewY(): number {\n        return this.#skewY.get();\n    }\n    set skewY(skewY: number) {\n        this.#skewY.set(skewY);\n        this.zzz.flags[Flag.Matrix] = true;\n    }\n    get clipPath(): Shape | null {\n        return this.#clipPath;\n    }\n    set clipPath(clipPath: Shape | null) {\n        this.#clipPath = clipPath;\n        this.zzz.flags[Flag.ClipPath] = true;\n        if (clipPath instanceof Shape && !clipPath.zzz.clip) {\n            clipPath.zzz.clip = true;\n        }\n    }\n    get matrix(): Matrix {\n        return this.#matrix;\n    }\n    set matrix(matrix: Matrix) {\n        this.#matrix = matrix;\n        this.zzz.flags[Flag.Matrix] = true;\n    }\n    get opacity(): number {\n        return this.#opacity.get();\n    }\n    set opacity(opacity: number) {\n        if (typeof opacity === 'number') {\n            if (opacity >= 0 && opacity <= 1) {\n                if (this.opacity !== opacity) {\n                    this.#opacity.set(opacity);\n                }\n            }\n        }\n    }\n    get visibility(): 'visible' | 'hidden' | 'collapse' {\n        return this.#visibility.get();\n    }\n    set visibility(visible: 'visible' | 'hidden' | 'collapse') {\n        if (typeof visible === 'string') {\n            if (this.visibility !== visible) {\n                this.#visibility.set(visible);\n            }\n        }\n    }\n    show(): this {\n        this.visibility = 'visible';\n        return this;\n    }\n    hide(): this {\n        this.visibility = 'hidden';\n        return this;\n    }\n    collapse(): this {\n        this.visibility = 'collapse';\n        return this;\n    }\n    get worldMatrix() {\n        // TODO: Make DRY\n        computed_world_matrix(this, this.#worldMatrix);\n        return this.#worldMatrix;\n    }\n    set worldMatrix(worldMatrix: Matrix) {\n        this.#worldMatrix = worldMatrix;\n    }\n}\n", "import { Children } from './children';\nimport { Color } from './effects/ColorProvider';\nimport { Flag } from './Flag';\nimport { IBoard } from './IBoard';\nimport { IShape } from './IShape';\nimport { Disposable, dispose } from './reactive/Disposable';\nimport { DomContext, svg, SVGAttributes, transform_value_of_matrix } from './renderers/SVGView';\nimport { Parent, Shape, ShapeAttributes } from './Shape';\n\nexport interface IGroup extends Parent {\n    remove(...shapes: Shape[]): void;\n}\n\nexport interface GroupAttributes {\n    id: string;\n}\n\nexport class Group extends Shape {\n\n    #strokeWidth = 1.0;\n    #cap: 'butt' | 'round' | 'square' = 'round';\n    #join: 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round' = 'round';\n    #miter = 4;\n    #closed = true;\n    #curved = false;\n    /**\n     * Determines whether Path plots coordinates base don \"closed\" and \"curved\" flags.\n     * The presence in Group seems unnecessary.\n     */\n    #automatic = true;\n\n    /**\n     * Number between zero and one to state the beginning of where the path is rendered.\n     * a percentage value that represents at what percentage into all child shapes should the renderer start drawing.\n     */\n    #beginning = 0.0;\n\n    /**\n     * Number between zero and one to state the ending of where the path is rendered.\n     * a percentage value that represents at what percentage into all child shapes should the renderer start drawing.\n     */\n    #ending = 1.0;\n\n    #length = 0;\n\n    #shapes: Children<Shape>;\n    #shapes_insert: Disposable | null = null;\n    #shapes_remove: Disposable | null = null;\n    #shapes_order: Disposable | null = null;\n\n    /**\n     * An automatically updated list of shapes that need to be appended to the renderer's scenegraph.\n     */\n    readonly additions: Shape[] = [];\n    /**\n     * An automatically updated list of children that need to be removed from the renderer's scenegraph.\n     */\n    readonly subtractions: Shape[] = [];\n\n    constructor(board: IBoard, shapes: Shape[] = [], attributes: Partial<GroupAttributes> = {}) {\n\n        super(board, shape_attributes(attributes));\n\n        this.flagReset(true);\n        this.zzz.flags[Flag.Additions] = false;\n        this.zzz.flags[Flag.Subtractions] = false;\n        this.zzz.flags[Flag.Beginning] = false;\n        this.zzz.flags[Flag.Ending] = false;\n        this.zzz.flags[Flag.Length] = false;\n        this.zzz.flags[Flag.Order] = false;\n        this.zzz.flags[Flag.ClipPath] = false;\n\n        this.#shapes = new Children(shapes);\n\n        this.#subscribe_to_shapes();\n    }\n\n    override dispose() {\n        this.#unsubscribe_from_shapes();\n        this.#shapes.dispose();\n        super.dispose();\n    }\n\n    hasBoundingBox(): boolean {\n        return false;\n    }\n\n    render(domElement: HTMLElement | SVGElement, svgElement: SVGElement): void {\n\n        this.update();\n\n        if (this.zzz.elem) {\n            // It's already defined.\n        }\n        else {\n            this.zzz.elem = svg.createElement('g', { id: this.id });\n            domElement.appendChild(this.zzz.elem);\n            this.zzz.disposables.push(this.matrix.change$.subscribe(() => {\n                this.zzz.elem.setAttribute('transform', transform_value_of_matrix(this.matrix));\n            }));\n\n            // opacity\n            this.zzz.disposables.push(this.zzz.opacity$.subscribe((opacity) => {\n                const change: SVGAttributes = { opacity: `${opacity}` };\n                if (opacity === 1) {\n                    svg.removeAttributes(this.zzz.elem, change);\n                }\n                else {\n                    svg.setAttributes(this.zzz.elem, change);\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // visibility\n            this.zzz.disposables.push(this.zzz.visibility$.subscribe((visibility) => {\n                switch (visibility) {\n                    case 'visible': {\n                        const change: SVGAttributes = { visibility };\n                        svg.removeAttributes(this.zzz.elem, change);\n                        break;\n                    }\n                    default: {\n                        const change: SVGAttributes = { visibility };\n                        svg.setAttributes(this.zzz.elem, change);\n                        break;\n                    }\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n        }\n\n        // _Update styles for the <g>\n        const flagMatrix = this.matrix.manual || this.zzz.flags[Flag.Matrix];\n        const dom_context: DomContext = {\n            domElement: domElement,\n            elem: this.zzz.elem\n        };\n\n        if (flagMatrix) {\n            this.zzz.elem.setAttribute('transform', transform_value_of_matrix(this.matrix));\n        }\n\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            const elem = this.zzz.elem;\n            child.render(elem, svgElement);\n        }\n\n        if (this.zzz.flags[Flag.ClassName]) {\n            this.zzz.elem.setAttribute('class', this.classList.join(' '));\n        }\n\n        if (this.zzz.flags[Flag.Additions]) {\n            this.additions.forEach((shape) => {\n                const childNode = shape.zzz.elem;\n                if (!childNode) {\n                    return;\n                }\n                const tag = childNode.nodeName;\n                if (!tag || /(radial|linear)gradient/i.test(tag) || shape.zzz.clip) {\n                    return;\n                }\n                dom_context.elem.appendChild(childNode);\n            });\n        }\n\n        if (this.zzz.flags[Flag.Subtractions]) {\n            this.subtractions.forEach((shape) => {\n                const childNode = shape.zzz.elem;\n                if (!childNode || childNode.parentNode != dom_context.elem) {\n                    return;\n                }\n                const tag = childNode.nodeName;\n                if (!tag) {\n                    return;\n                }\n                // Defer subtractions while clipping.\n                if (shape.zzz.clip) {\n                    return;\n                }\n                dispose(shape.zzz.disposables);\n                dom_context.elem.removeChild(childNode);\n            });\n        }\n\n        if (this.zzz.flags[Flag.Order]) {\n            this.children.forEach((child) => {\n                dom_context.elem.appendChild(child.zzz.elem);\n            });\n        }\n\n        // Commented two-way functionality of clips / masks with groups and\n        // polygons. Uncomment when this bug is fixed:\n        // https://code.google.com/p/chromium/issues/detail?id=370951\n\n        // if (this._flagClip) {\n\n        //   clip = svg.getClip(this, domElement);\n        //   elem = this._renderer.elem;\n\n        //   if (this.clip) {\n        //     elem.removeAttribute('id');\n        //     clip.setAttribute('id', this.id);\n        //     clip.appendChild(elem);\n        //   }\n        else {\n            //     clip.removeAttribute('id');\n            //     elem.setAttribute('id', this.id);\n            //     this.parent._renderer.elem.appendChild(elem); // TODO: should be insertBefore\n            //   }\n\n            // }\n\n            if (this.zzz.flags[Flag.ClipPath]) {\n                if (this.clipPath) {\n                    this.clipPath.render(domElement, svgElement);\n                    this.zzz.elem.setAttribute('clip-path', 'url(#' + this.clipPath.id + ')');\n                }\n                else {\n                    this.zzz.elem.removeAttribute('clip-path');\n                }\n            }\n\n            this.flagReset();\n        }\n    }\n\n    #subscribe_to_shapes(): void {\n        this.#shapes_insert = this.#shapes.insert$.subscribe((inserts: Shape[]) => {\n            for (const shape of inserts) {\n                update_shape_group(shape, this);\n            }\n        });\n\n        this.#shapes_remove = this.#shapes.remove$.subscribe((removes: Shape[]) => {\n            for (const shape of removes) {\n                update_shape_group(shape, null);\n            }\n        });\n\n        this.#shapes_order = this.#shapes.order$.subscribe(() => {\n            this.zzz.flags[Flag.Order] = true;\n        });\n    }\n\n    #unsubscribe_from_shapes(): void {\n        if (this.#shapes_insert) {\n            this.#shapes_insert.dispose();\n            this.#shapes_insert = null;\n        }\n        if (this.#shapes_remove) {\n            this.#shapes_remove.dispose();\n            this.#shapes_remove = null;\n        }\n        if (this.#shapes_order) {\n            this.#shapes_order.dispose();\n            this.#shapes_order = null;\n        }\n    }\n\n    /**\n     * Orient the children of the group to the upper left-hand corner of that group.\n     */\n    corner(): this {\n        const bbox = this.getBoundingBox(true);\n\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.position.x -= bbox.left;\n            child.position.y -= bbox.top;\n        }\n\n        if (this.clipPath) {\n            this.clipPath.position.x -= bbox.left;\n            this.clipPath.position.y -= bbox.top;\n        }\n\n        return this;\n    }\n\n    /**\n     * Orient the children of the group to the center of that group.\n     */\n    center(): this {\n        const bbox = this.getBoundingBox(true);\n        const cx = (bbox.left + bbox.right) / 2 - this.position.x;\n        const cy = (bbox.top + bbox.bottom) / 2 - this.position.y;\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.position.x -= cx;\n            child.position.y -= cy;\n        }\n        if (this.clipPath) {\n            this.clipPath.position.x -= cx;\n            this.clipPath.position.y -= cy;\n        }\n        return this;\n    }\n\n    getById(id: string): IShape<unknown> {\n        let found = null;\n        function search(node: IShape<unknown>): IShape<unknown> {\n            if (node.id === id) {\n                return node;\n            }\n            else if (node instanceof Group && node.children) {\n                for (let i = 0; i < node.children.length; i++) {\n                    found = search(node.children.getAt(i));\n                    if (found) {\n                        return found;\n                    }\n                }\n            }\n            return null;\n        }\n        return search(this);\n    }\n\n    getByClassName(className: string): IShape<unknown>[] {\n        const found: IShape<unknown>[] = [];\n        function search(node: IShape<unknown>) {\n            if (Array.prototype.indexOf.call(node.classList, className) >= 0) {\n                found.push(node);\n            }\n            if (node instanceof Group && node.children) {\n                for (let i = 0; i < node.children.length; i++) {\n                    const child = node.children.getAt(i);\n                    search(child);\n                }\n            }\n            return found;\n        }\n        return search(this);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getByType(type: any): IShape<unknown>[] {\n        const found: IShape<unknown>[] = [];\n        function search(node: IShape<unknown>) {\n            if (node instanceof type) {\n                found.push(node);\n            }\n            if (node instanceof Group && node.children) {\n                for (let i = 0; i < node.children.length; i++) {\n                    const child = node.children.getAt(i);\n                    search(child);\n                }\n            }\n            return found;\n        }\n        return search(this);\n    }\n\n    add(...shapes: Shape[]) {\n        for (let i = 0; i < shapes.length; i++) {\n            const child = shapes[i];\n            if (!(child && child.id)) {\n                continue;\n            }\n            const index = this.children.indexOf(child);\n            if (index >= 0) {\n                this.children.splice(index, 1);\n            }\n            this.children.push(child);\n        }\n        return this;\n    }\n\n    remove(...shapes: Shape[]) {\n        for (let i = 0; i < shapes.length; i++) {\n            const shape = shapes[i];\n            shape.dispose();\n            const index = this.children.indexOf(shape);\n            if (index >= 0) {\n                this.children.splice(index, 1);\n            }\n        }\n        return this;\n    }\n\n    getBoundingBox(shallow = false): { top: number; left: number; right: number; bottom: number; } {\n\n        this.update();\n\n        // Variables need to be defined here, because of nested nature of groups.\n        let left = Infinity, right = -Infinity,\n            top = Infinity, bottom = -Infinity;\n\n        const matrix = shallow ? this.matrix : this.worldMatrix;\n\n        for (let i = 0; i < this.children.length; i++) {\n\n            const child = this.children.getAt(i);\n\n            if (!(child.visibility === 'visible') || child.hasBoundingBox()) {\n                continue;\n            }\n\n            const rect = child.getBoundingBox(shallow);\n\n            const tc = typeof rect.top !== 'number' || isNaN(rect.top) || !isFinite(rect.top);\n            const lc = typeof rect.left !== 'number' || isNaN(rect.left) || !isFinite(rect.left);\n            const rc = typeof rect.right !== 'number' || isNaN(rect.right) || !isFinite(rect.right);\n            const bc = typeof rect.bottom !== 'number' || isNaN(rect.bottom) || !isFinite(rect.bottom);\n\n            if (tc || lc || rc || bc) {\n                continue;\n            }\n\n            if (shallow) {\n                const [ax, ay] = matrix.multiply_vector(rect.left, rect.top);\n                const [bx, by] = matrix.multiply_vector(rect.right, rect.top);\n                const [cx, cy] = matrix.multiply_vector(rect.left, rect.bottom);\n                const [dx, dy] = matrix.multiply_vector(rect.right, rect.bottom);\n\n                top = Math.min(ay, by, cy, dy);\n                left = Math.min(ax, bx, cx, dx);\n                right = Math.max(ax, bx, cx, dx);\n                bottom = Math.max(ay, by, cy, dy);\n            }\n            else {\n                top = Math.min(rect.top, top);\n                left = Math.min(rect.left, left);\n                right = Math.max(rect.right, right);\n                bottom = Math.max(rect.bottom, bottom);\n            }\n        }\n\n        return { top, left, right, bottom };\n    }\n\n    /**\n     * Apply `noFill` method to all child shapes.\n     */\n    noFill() {\n        this.children.forEach(function (child) {\n            child.noFill();\n        });\n        return this;\n    }\n\n    /**\n     * Apply `noStroke` method to all child shapes.\n     */\n    noStroke() {\n        this.children.forEach(function (child) {\n            child.noStroke();\n        });\n        return this;\n    }\n\n    /**\n     * Apply `subdivide` method to all child shapes.\n     */\n    subdivide(limit: number) {\n        this.children.forEach(function (child) {\n            child.subdivide(limit);\n        });\n        return this;\n    }\n\n    update(): this {\n        if (this.zzz.flags[Flag.Beginning] || this.zzz.flags[Flag.Ending]) {\n\n            const beginning = Math.min(this.beginning, this.ending);\n            const ending = Math.max(this.beginning, this.ending);\n            const length = this.length;\n            let sum = 0;\n\n            const bd = beginning * length;\n            const ed = ending * length;\n\n            for (let i = 0; i < this.children.length; i++) {\n                const child = this.children.getAt(i);\n                const l = child.length;\n\n                if (bd > sum + l) {\n                    child.beginning = 1;\n                    child.ending = 1;\n                }\n                else if (ed < sum) {\n                    child.beginning = 0;\n                    child.ending = 0;\n                }\n                else if (bd > sum && bd < sum + l) {\n                    child.beginning = (bd - sum) / l;\n                    child.ending = 1;\n                }\n                else if (ed > sum && ed < sum + l) {\n                    child.beginning = 0;\n                    child.ending = (ed - sum) / l;\n                }\n                else {\n                    child.beginning = 0;\n                    child.ending = 1;\n                }\n                sum += l;\n            }\n        }\n        return super.update();\n    }\n\n    override flagReset(dirtyFlag = false) {\n        if (this.zzz.flags[Flag.Additions]) {\n            this.additions.length = 0;\n            this.zzz.flags[Flag.Additions] = dirtyFlag;\n        }\n\n        if (this.zzz.flags[Flag.Subtractions]) {\n            this.subtractions.length = 0;\n            this.zzz.flags[Flag.Subtractions] = false;\n        }\n\n        this.zzz.flags[Flag.Order] = dirtyFlag;\n        this.zzz.flags[Flag.ClipPath] = dirtyFlag;\n\n        this.zzz.flags[Flag.Beginning] = dirtyFlag;\n        this.zzz.flags[Flag.Ending] = dirtyFlag;\n\n        super.flagReset(dirtyFlag);\n\n        return this;\n\n    }\n    get automatic(): boolean {\n        return this.#automatic;\n    }\n    set automatic(automatic: boolean) {\n        this.#automatic = automatic;\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.automatic = automatic;\n        }\n    }\n    get beginning(): number {\n        return this.#beginning;\n    }\n    set beginning(beginning: number) {\n        if (typeof beginning === 'number') {\n            if (this.beginning !== beginning) {\n                this.#beginning = beginning;\n                this.zzz.flags[Flag.Beginning] = true;\n            }\n        }\n    }\n    get cap(): 'butt' | 'round' | 'square' {\n        return this.#cap;\n    }\n    set cap(cap: 'butt' | 'round' | 'square') {\n        this.#cap = cap;\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.cap = cap;\n        }\n    }\n    /**\n     * A list of all the children in the scenegraph.\n     */\n    get children(): Children<Shape> {\n        return this.#shapes;\n    }\n    set children(children) {\n\n        this.#unsubscribe_from_shapes();\n        this.#shapes.dispose();\n\n        this.#shapes = children;\n        this.#subscribe_to_shapes();\n\n        for (let i = 0; i < children.length; i++) {\n            const shape = children.getAt(i);\n            update_shape_group(shape, this);\n        }\n    }\n    get closed(): boolean {\n        return this.#closed;\n    }\n    set closed(v: boolean) {\n        this.#closed = v;\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.closed = v;\n        }\n    }\n    get curved(): boolean {\n        return this.#curved;\n    }\n    set curved(v: boolean) {\n        this.#curved = v;\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.curved = v;\n        }\n    }\n    get ending(): number {\n        return this.#ending;\n    }\n    set ending(ending: number) {\n        if (typeof ending === 'number') {\n            if (this.ending !== ending) {\n                this.#ending = ending;\n                this.zzz.flags[Flag.Ending] = true;\n            }\n        }\n    }\n    get fill(): Color {\n        throw new Error();\n    }\n    set fill(fill: Color) {\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.fill = fill;\n        }\n    }\n    get join(): 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round' {\n        return this.#join;\n    }\n    set join(v: 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round') {\n        this.#join = v;\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.join = v;\n        }\n    }\n    get length(): number {\n        if (this.zzz.flags[Flag.Length] || this.#length <= 0) {\n            this.#length = 0;\n            if (!this.children) {\n                return this.#length;\n            }\n            for (let i = 0; i < this.children.length; i++) {\n                const child = this.children.getAt(i);\n                this.#length += child.length;\n            }\n        }\n        return this.#length;\n    }\n    get strokeWidth(): number {\n        return this.#strokeWidth;\n    }\n    set strokeWidth(strokeWidth: number) {\n        this.#strokeWidth = strokeWidth;\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.strokeWidth = strokeWidth;\n        }\n    }\n    get miter(): number {\n        return this.#miter;\n    }\n    set miter(v: number) {\n        this.#miter = v;\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.miter = v;\n        }\n    }\n    get stroke(): Color {\n        throw new Error();\n    }\n    set stroke(stroke: Color) {\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children.getAt(i);\n            child.stroke = stroke;\n        }\n    }\n}\n\nexport function update_shape_group(child: Shape, parent?: Group) {\n\n    const previous_parent = child.parent;\n\n    if (previous_parent === parent) {\n        add();\n        return;\n    }\n\n    if (previous_parent && previous_parent instanceof Group && previous_parent.children.ids[child.id]) {\n        const index = Array.prototype.indexOf.call(previous_parent.children, child);\n        previous_parent.children.splice(index, 1);\n        splice();\n    }\n\n    if (parent) {\n        add();\n        return;\n    }\n\n    splice();\n\n    if (previous_parent && previous_parent instanceof Group) {\n        if (previous_parent.zzz.flags[Flag.Additions] && previous_parent.additions.length === 0) {\n            previous_parent.zzz.flags[Flag.Additions] = false;\n        }\n        if (previous_parent.zzz.flags[Flag.Subtractions] && previous_parent.subtractions.length === 0) {\n            previous_parent.zzz.flags[Flag.Subtractions] = false;\n        }\n    }\n\n    delete child.parent;\n\n    function add() {\n\n        if (parent.subtractions.length > 0) {\n            const index = Array.prototype.indexOf.call(parent.subtractions, child);\n            if (index >= 0) {\n                parent.subtractions.splice(index, 1);\n            }\n        }\n\n        if (parent.additions.length > 0) {\n            const index = Array.prototype.indexOf.call(parent.additions, child);\n            if (index >= 0) {\n                parent.additions.splice(index, 1);\n            }\n        }\n\n        child.parent = parent;\n        parent.additions.push(child);\n        parent.zzz.flags[Flag.Additions] = true;\n    }\n\n    function splice() {\n\n        if (previous_parent && previous_parent instanceof Group) {\n            const indexAdd = previous_parent.additions.indexOf(child);\n            if (indexAdd >= 0) {\n                previous_parent.additions.splice(indexAdd, 1);\n            }\n\n            const indexSub = previous_parent.subtractions.indexOf(child);\n            if (indexSub < 0) {\n                previous_parent.subtractions.push(child);\n                previous_parent.zzz.flags[Flag.Subtractions] = true;\n            }\n        }\n    }\n}\n\nfunction shape_attributes(attributes: Partial<GroupAttributes>): Partial<ShapeAttributes> {\n    const retval: Partial<ShapeAttributes> = {\n        id: attributes.id\n    };\n    return retval;\n}\n", "import { Observable } from '../reactive/Observable';\n\nexport interface ColorProvider {\n    readonly id: string;\n    readonly change$: Observable<unknown>;\n    render(svgElement: SVGElement): this;\n}\n\nexport type Color = string | ColorProvider;\n\nexport function is_color_provider(x: Color): x is ColorProvider {\n    if (typeof x === 'string') {\n        return false;\n    }\n    else if (typeof x === 'object') {\n        return true;\n    }\n    else {\n        throw new Error();\n    }\n}\n\nexport function serialize_color(x: Color): string {\n    if (is_color_provider(x)) {\n        return `url(#${x.id})`;\n    }\n    else {\n        return x;\n    }\n}\n", "import { Matrix } from \"../matrix\";\nimport { MatrixDecomposition } from \"./MatrixDecomposition\";\n\n/**\n * Decompose a 2D 3x3 Matrix to find the skew.\n * \n */\nexport function decompose_2d_3x3_matrix(m: Matrix): MatrixDecomposition {\n\n    const a = m.a11;\n    const c = m.a12;\n    const x = m.a13;\n\n    const b = m.a21;\n    const d = m.a22;\n    const y = m.a23;\n\n    // M =\n    //\n    // | sx * cos \u03C6, -sx * sin \u03C6, tx |\n    // | sy * sin \u03C6,  sy * cos \u03C6, ty |\n    // | 0,           0,          1  |\n\n    // S =\n    //\n    // | sx, 0,  0 |\n    // | 0,  sy, 0 |\n    // | 0,  0,  1 |\n\n    // R =\n    //\n    // | cos \u03C6, - sin \u03C6, 0 |\n    // | sin \u03C6,   cos \u03C6, 0 |\n    // | 0,       0,     1 |\n\n    // T =\n    //\n    // | 1, 0, tx |\n    // | 0, 1, ty |\n    // | 0, 0, 1  |\n\n    // M = S * R * T\n\n    // TODO: Include skewX, skewY\n    // It's much more complicated\n    // https://math.stackexchange.com/questions/13150/extracting-rotation-scale-values-from-2d-transformation-matrix\n    // https://math.stackexchange.com/questions/237369/given-this-transformation-matrix-how-do-i-decompose-it-into-translation-rotati/417813\n    // https://stackoverflow.com/questions/45159314/decompose-2d-transformation-matrix\n    // https://stackoverflow.com/questions/28075743/how-do-i-compose-a-rotation-matrix-with-human-readable-angles-from-scratch/28084380#28084380\n\n    // For a working example using symbolic math...\n    // https://www.stemcstudio.com/gists/5c0bc63b847e3df02e57f0548ecce7a3\n\n    return {\n        position: { x, y },\n        translateX: x,\n        translateY: y,\n        scaleX: Math.sqrt(a * a + c * c),   // should be multiplied by sign(a)\n        scaleY: Math.sqrt(b * b + d * d),   // should be multiplied by sign(d)\n        // TODO: rotation is being reported in degrees.\n        // tan(\u03C6) = -b/a = c/d\n        rotation: Math.atan2(b, a)\n    };\n\n}\n", "/* eslint-disable @typescript-eslint/no-loss-of-precision */\nimport { Anchor } from '../anchor.js';\nimport { Collection } from '../collection.js';\nimport { Constants } from '../constants.js';\nimport { G20 } from '../math/G20.js';\nimport { HALF_PI, mod } from './math.js';\nimport { Commands } from './path-commands.js';\n\nexport const Curve = {\n\n    CollinearityEpsilon: Math.pow(10, -30),\n\n    RecursionLimit: 16,\n\n    CuspLimit: 0,\n\n    Tolerance: {\n        distance: 0.25,\n        angle: 0,\n        epsilon: Number.EPSILON\n    },\n\n    // Lookup tables for abscissas and weights with values for n = 2 .. 16.\n    // As values are symmetric, only store half of them and adapt algorithm\n    // to factor in symmetry.\n    abscissas: [\n        [0.5773502691896257645091488],\n        [0, 0.7745966692414833770358531],\n        [0.3399810435848562648026658, 0.8611363115940525752239465],\n        [0, 0.5384693101056830910363144, 0.9061798459386639927976269],\n        [0.2386191860831969086305017, 0.6612093864662645136613996, 0.9324695142031520278123016],\n        [0, 0.4058451513773971669066064, 0.7415311855993944398638648, 0.9491079123427585245261897],\n        [0.1834346424956498049394761, 0.5255324099163289858177390, 0.7966664774136267395915539, 0.9602898564975362316835609],\n        [0, 0.3242534234038089290385380, 0.6133714327005903973087020, 0.8360311073266357942994298, 0.9681602395076260898355762],\n        [0.1488743389816312108848260, 0.4333953941292471907992659, 0.6794095682990244062343274, 0.8650633666889845107320967, 0.9739065285171717200779640],\n        [0, 0.2695431559523449723315320, 0.5190961292068118159257257, 0.7301520055740493240934163, 0.8870625997680952990751578, 0.9782286581460569928039380],\n        [0.1252334085114689154724414, 0.3678314989981801937526915, 0.5873179542866174472967024, 0.7699026741943046870368938, 0.9041172563704748566784659, 0.9815606342467192506905491],\n        [0, 0.2304583159551347940655281, 0.4484927510364468528779129, 0.6423493394403402206439846, 0.8015780907333099127942065, 0.9175983992229779652065478, 0.9841830547185881494728294],\n        [0.1080549487073436620662447, 0.3191123689278897604356718, 0.5152486363581540919652907, 0.6872929048116854701480198, 0.8272013150697649931897947, 0.9284348836635735173363911, 0.9862838086968123388415973],\n        [0, 0.2011940939974345223006283, 0.3941513470775633698972074, 0.5709721726085388475372267, 0.7244177313601700474161861, 0.8482065834104272162006483, 0.9372733924007059043077589, 0.9879925180204854284895657],\n        [0.0950125098376374401853193, 0.2816035507792589132304605, 0.4580167776572273863424194, 0.6178762444026437484466718, 0.7554044083550030338951012, 0.8656312023878317438804679, 0.9445750230732325760779884, 0.9894009349916499325961542]\n    ],\n\n    weights: [\n        [1],\n        [0.8888888888888888888888889, 0.5555555555555555555555556],\n        [0.6521451548625461426269361, 0.3478548451374538573730639],\n        [0.5688888888888888888888889, 0.4786286704993664680412915, 0.2369268850561890875142640],\n        [0.4679139345726910473898703, 0.3607615730481386075698335, 0.1713244923791703450402961],\n        [0.4179591836734693877551020, 0.3818300505051189449503698, 0.2797053914892766679014678, 0.1294849661688696932706114],\n        [0.3626837833783619829651504, 0.3137066458778872873379622, 0.2223810344533744705443560, 0.1012285362903762591525314],\n        [0.3302393550012597631645251, 0.3123470770400028400686304, 0.2606106964029354623187429, 0.1806481606948574040584720, 0.0812743883615744119718922],\n        [0.2955242247147528701738930, 0.2692667193099963550912269, 0.2190863625159820439955349, 0.1494513491505805931457763, 0.0666713443086881375935688],\n        [0.2729250867779006307144835, 0.2628045445102466621806889, 0.2331937645919904799185237, 0.1862902109277342514260976, 0.1255803694649046246346943, 0.0556685671161736664827537],\n        [0.2491470458134027850005624, 0.2334925365383548087608499, 0.2031674267230659217490645, 0.1600783285433462263346525, 0.1069393259953184309602547, 0.0471753363865118271946160],\n        [0.2325515532308739101945895, 0.2262831802628972384120902, 0.2078160475368885023125232, 0.1781459807619457382800467, 0.1388735102197872384636018, 0.0921214998377284479144218, 0.0404840047653158795200216],\n        [0.2152638534631577901958764, 0.2051984637212956039659241, 0.1855383974779378137417166, 0.1572031671581935345696019, 0.1215185706879031846894148, 0.0801580871597602098056333, 0.0351194603317518630318329],\n        [0.2025782419255612728806202, 0.1984314853271115764561183, 0.1861610000155622110268006, 0.1662692058169939335532009, 0.1395706779261543144478048, 0.1071592204671719350118695, 0.0703660474881081247092674, 0.0307532419961172683546284],\n        [0.1894506104550684962853967, 0.1826034150449235888667637, 0.1691565193950025381893121, 0.1495959888165767320815017, 0.1246289712555338720524763, 0.0951585116824927848099251, 0.0622535239386478928628438, 0.0271524594117540948517806]\n    ]\n\n} as const;\n\n/**\n * @param {Number} t - Zero-to-one value describing what percentage to calculate.\n * @param {Number} a - The firt point's component value.\n * @param {Number} b - The first point's bezier component value.\n * @param {Number} c - The second point's bezier component value.\n * @param {Number} d - The second point's component value.\n * @returns {Number} The coordinate value for a specific component along a cubic bezier curve by `t`.\n */\nexport function getComponentOnCubicBezier(t: number, a: number, b: number, c: number, d: number): number {\n    const k = 1 - t;\n    return (k * k * k * a) + (3 * k * k * t * b) + (3 * k * t * t * c) +\n        (t * t * t * d);\n}\n\n/**\n * @param {Number} x1 - x position of first anchor point.\n * @param {Number} y1 - y position of first anchor point.\n * @param {Number} x2 - x position of first anchor point's \"right\" bezier handle.\n * @param {Number} y2 - y position of first anchor point's \"right\" bezier handle.\n * @param {Number} x3 - x position of second anchor point's \"left\" bezier handle.\n * @param {Number} y3 - y position of second anchor point's \"left\" bezier handle.\n * @param {Number} x4 - x position of second anchor point.\n * @param {Number} y4 - y position of second anchor point.\n * @param limit The amount of vertices to create by subdividing.\n * @returns A list of points ordered in between `x1`, `y1` and `x4`, `y4`\n * @description Given 2 points (a, b) and corresponding control point for each return an array of points that represent points plotted along the curve. The number of returned points is determined by `limit`.\n */\nexport function subdivide<T>(builder: (x: number, y: number) => T, x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number, limit: number = Curve.RecursionLimit): T[] {\n\n    const amount = limit + 1;\n\n    // TODO: Abstract 0.001 to a limiting variable\n    // Don't recurse if the end points are identical\n    if (Math.abs(x1 - x4) < 0.001 && Math.abs(y1 - y4) < 0.001) {\n        return [builder(x4, y4)];\n    }\n\n    const result: T[] = [];\n\n    for (let i = 0; i < amount; i++) {\n        const t = i / amount;\n        const x = getComponentOnCubicBezier(t, x1, x2, x3, x4);\n        const y = getComponentOnCubicBezier(t, y1, y2, y3, y4);\n        result.push(builder(x, y));\n    }\n\n    return result;\n}\n\n/**\n * @param {Number} x1 - x position of first anchor point.\n * @param {Number} y1 - y position of first anchor point.\n * @param {Number} x2 - x position of first anchor point's \"right\" bezier handle.\n * @param {Number} y2 - y position of first anchor point's \"right\" bezier handle.\n * @param {Number} x3 - x position of second anchor point's \"left\" bezier handle.\n * @param {Number} y3 - y position of second anchor point's \"left\" bezier handle.\n * @param {Number} x4 - x position of second anchor point.\n * @param {Number} y4 - y position of second anchor point.\n * @param limit The amount of vertices to create by subdividing.\n * @returns {Number} The length of a curve.\n * @description Given 2 points (a, b) and corresponding control point for each, return a float that represents the length of the curve using Gauss-Legendre algorithm. Limit iterations of calculation by `limit`.\n */\nexport function getCurveLength(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number, limit: number): number {\n\n    // TODO: Better / fuzzier equality check\n    // Linear calculation\n    if (x1 === x2 && y1 === y2 && x3 === x4 && y3 === y4) {\n        const dx = x4 - x1;\n        const dy = y4 - y1;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    // Calculate the coefficients of a Bezier derivative.\n    const ax = 9 * (x2 - x3) + 3 * (x4 - x1),\n        bx = 6 * (x1 + x3) - 12 * x2,\n        cx = 3 * (x2 - x1),\n\n        ay = 9 * (y2 - y3) + 3 * (y4 - y1),\n        by = 6 * (y1 + y3) - 12 * y2,\n        cy = 3 * (y2 - y1);\n\n    function integrand(t: number): number {\n        // Calculate quadratic equations of derivatives for x and y\n        const dx = (ax * t + bx) * t + cx,\n            dy = (ay * t + by) * t + cy;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    return integrate(\n        integrand, 0, 1, limit || Curve.RecursionLimit\n    );\n}\n\n/**\n * @param {Number} x1 - x position of first anchor point.\n * @param {Number} y1 - y position of first anchor point.\n * @param {Number} x2 - x position of first anchor point's \"right\" bezier handle.\n * @param {Number} y2 - y position of first anchor point's \"right\" bezier handle.\n * @param {Number} x3 - x position of second anchor point's \"left\" bezier handle.\n * @param {Number} y3 - y position of second anchor point's \"left\" bezier handle.\n * @param {Number} x4 - x position of second anchor point.\n * @param {Number} y4 - y position of second anchor point.\n * @returns {Object} Object contains min and max `x` / `y` bounds.\n * @see {@link https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js#L856}\n */\nexport function getCurveBoundingBox(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number): { min: { x: number; y: number }; max: { x: number; y: number } } {\n\n    const tvalues: number[] = [];\n    const bounds: [number[], number[]] = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    for (let i = 0; i < 2; ++i) {\n        if (i == 0) {\n            b = 6 * x1 - 12 * x2 + 6 * x3;\n            a = -3 * x1 + 9 * x2 - 9 * x3 + 3 * x4;\n            c = 3 * x2 - 3 * x1;\n        }\n        else {\n            b = 6 * y1 - 12 * y2 + 6 * y3;\n            a = -3 * y1 + 9 * y2 - 9 * y3 + 3 * y4;\n            c = 3 * y2 - 3 * y1;\n        }\n        if (Math.abs(a) < 1e-12) {\n            if (Math.abs(b) < 1e-12) {\n                continue;\n            }\n            t = -c / b;\n            if (0 < t && t < 1) {\n                tvalues.push(t);\n            }\n            continue;\n        }\n        b2ac = b * b - 4 * c * a;\n        sqrtb2ac = Math.sqrt(b2ac);\n        if (b2ac < 0) {\n            continue;\n        }\n        t1 = (-b + sqrtb2ac) / (2 * a);\n        if (0 < t1 && t1 < 1) {\n            tvalues.push(t1);\n        }\n        t2 = (-b - sqrtb2ac) / (2 * a);\n        if (0 < t2 && t2 < 1) {\n            tvalues.push(t2);\n        }\n    }\n\n    const jlen = tvalues.length;\n    let j = jlen;\n    let mt: number;\n\n    while (j--) {\n        t = tvalues[j];\n        mt = 1 - t;\n        bounds[0][j] = mt * mt * mt * x1 + 3 * mt * mt * t * x2 + 3 * mt * t * t * x3 + t * t * t * x4;\n        bounds[1][j] = mt * mt * mt * y1 + 3 * mt * mt * t * y2 + 3 * mt * t * t * y3 + t * t * t * y4;\n    }\n\n    bounds[0][jlen] = x1;\n    bounds[1][jlen] = y1;\n    bounds[0][jlen + 1] = x4;\n    bounds[1][jlen + 1] = y4;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return {\n        min: { x: Math.min.apply(0, bounds[0]), y: Math.min.apply(0, bounds[1]) },\n        max: { x: Math.max.apply(0, bounds[0]), y: Math.max.apply(0, bounds[1]) }\n    };\n\n}\n\n/**\n * @see [Paper.js](@link https://github.com/paperjs/paper.js/blob/master/src/util/Numerical.js#L101)\n */\nexport function integrate(f: (x: number) => number, a: number, b: number, n: number) {\n    const x = Curve.abscissas[n - 2];\n    const w = Curve.weights[n - 2];\n    const A = 0.5 * (b - a);\n    const B = A + a;\n    let i = 0;\n    const m = (n + 1) >> 1;\n    let sum = n & 1 ? w[i++] * f(B) : 0; // Handle odd n\n    while (i < m) {\n        const Ax = A * x[i];\n        sum += w[i++] * (f(B + Ax) + f(B - Ax));\n    }\n    return A * sum;\n}\n\n/**\n * Sets the bezier handles on {@link Anchor}s in the `points` list with estimated values to create a catmull-rom like curve.\n */\nexport function getCurveFromPoints(points: Collection<Anchor>, closed: boolean): void {\n\n    const l = points.length, last = l - 1;\n\n    for (let i = 0; i < l; i++) {\n\n        const point = points.getAt(i);\n\n        const prev = closed ? mod(i - 1, l) : Math.max(i - 1, 0);\n        const next = closed ? mod(i + 1, l) : Math.min(i + 1, last);\n\n        const a = points.getAt(prev);\n        const b = point;\n        const c = points.getAt(next);\n        getControlPoints(a, b, c);\n\n        b.command = i === 0 ? Commands.move : Commands.curve;\n    }\n}\n\n/**\n * Given three coordinates set the control points for the middle, b, vertex based on its position with the adjacent points.\n */\nexport function getControlPoints(a: Anchor, b: Anchor, c: Anchor): Anchor {\n\n    const a1 = G20.angleBetween(a.origin, b.origin);\n    const a2 = G20.angleBetween(c.origin, b.origin);\n\n    let d1 = G20.distanceBetween(a.origin, b.origin);\n    let d2 = G20.distanceBetween(c.origin, b.origin);\n\n    let mid = (a1 + a2) / 2;\n\n    // TODO: Issue 73\n    if (d1 < 0.0001 || d2 < 0.0001) {\n        if (typeof b.relative === 'boolean' && !b.relative) {\n            b.controls.a.copyVector(b.origin);\n            b.controls.b.copyVector(b.origin);\n        }\n        return b;\n    }\n\n    d1 *= 0.33; // Why 0.33?\n    d2 *= 0.33;\n\n    if (a2 < a1) {\n        mid += HALF_PI;\n    }\n    else {\n        mid -= HALF_PI;\n    }\n\n    b.controls.a.x = Math.cos(mid) * d1;\n    b.controls.a.y = Math.sin(mid) * d1;\n\n    mid -= Math.PI;\n\n    b.controls.b.x = Math.cos(mid) * d2;\n    b.controls.b.y = Math.sin(mid) * d2;\n\n    if (typeof b.relative === 'boolean' && !b.relative) {\n        b.controls.a.x += b.x;\n        b.controls.a.y += b.y;\n        b.controls.b.x += b.x;\n        b.controls.b.y += b.y;\n    }\n\n    return b;\n\n}\n\n/**\n * Get the reflection of a point `b` about point `a`. Where `a` is in absolute space and `b` is relative to `a`.\n * @see {@link http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes}\n */\nexport function getReflection(a: G20, b: G20, relative = false): G20 {\n\n    return new G20(\n        2 * a.x - (b.x + a.x) - (relative ? a.x : 0),\n        2 * a.y - (b.y + a.y) - (relative ? a.y : 0)\n    );\n\n}\n\nexport function getAnchorsFromArcData(center: G20, xAxisRotation: number, rx: number, ry: number, ts: number, td: number, ccw = false): void {\n\n    const resolution = Constants.Resolution;\n    const anchors = [];\n\n    for (let i = 0; i < resolution; i++) {\n\n        let pct = (i + 1) / resolution;\n        if (ccw) {\n            pct = 1 - pct;\n        }\n\n        const theta = pct * td + ts;\n        const x = rx * Math.cos(theta);\n        const y = ry * Math.sin(theta);\n\n        // x += center.x;\n        // y += center.y;\n\n        const anchor = new Anchor(G20.vector(x, y));\n        anchor.command = Commands.line;\n\n        // TODO: Calculate control points here...\n\n        anchors.push(anchor);\n    }\n}\n", "import { Anchor } from '../anchor.js';\nimport { G20 } from '../math/G20.js';\nimport { Path } from '../path.js';\nimport { getCurveLength as gcl, subdivide } from './curves.js';\n\nexport function contains(path: Path, t: number): boolean {\n\n    if (t === 0 || t === 1) {\n        return true;\n    }\n\n    const length = path.length;\n    const target = length * t;\n    let elapsed = 0;\n\n    const lengths = path.lengths;\n    for (let i = 0; i < lengths.length; i++) {\n        const dist = lengths[i];\n        if (elapsed >= target) {\n            return target - elapsed >= 0;\n        }\n        elapsed += dist;\n    }\n\n    return false;\n\n}\n\nexport interface IPathOrPoints {\n    /**\n     * The total length of the path.\n     */\n    length: number;\n    /**\n     * The lengths of each segment of the path.\n     */\n    lengths: number[];\n}\n\n/**\n * TODO: Not a good name. Appears to be returning the index into the lengths array\n * corresponding to the provided \"target\" length. But the result also appears to be fractional.\n */\nexport function getIdByLength(path: IPathOrPoints, target: number): number {\n\n    const total = path.length;\n\n    if (target <= 0) {\n        return 0;\n    }\n    else if (target >= total) {\n        return path.lengths.length - 1;\n    }\n    for (let i = 0, sum = 0; i < path.lengths.length; i++) {\n        if (sum + path.lengths[i] >= target) {\n            target -= sum;\n            return Math.max(i - 1, 0) + target / path.lengths[i];\n        }\n        sum += path.lengths[i];\n    }\n    return -1;\n}\n\nexport function getCurveLength(a: Anchor, b: Anchor, limit: number): number {\n    // TODO: DRYness\n    let x2, x3, y2, y3;\n\n    const right = b.controls && b.controls.b;\n    const left = a.controls && a.controls.a;\n\n    const x1 = b.x;\n    const y1 = b.y;\n    x2 = (right || b).x;\n    y2 = (right || b).y;\n    x3 = (left || a).x;\n    y3 = (left || a).y;\n    const x4 = a.x;\n    const y4 = a.y;\n\n    if (right && b.relative) {\n        x2 += b.x;\n        y2 += b.y;\n    }\n\n    if (left && a.relative) {\n        x3 += a.x;\n        y3 += a.y;\n    }\n\n    return gcl(x1, y1, x2, y2, x3, y3, x4, y4, limit);\n\n}\n\nexport function getSubdivisions(a: Anchor, b: Anchor, limit: number): Anchor[] {\n\n    const br = b.controls.b;\n    const al = a.controls.a;\n\n    const bx = b.x;\n    const by = b.y;\n    let brx = br.x;\n    let bry = br.y;\n    let alx = al.x;\n    let aly = al.y;\n    const ax = a.x;\n    const ay = a.y;\n\n    if (b.relative) {\n        brx += b.x;\n        bry += b.y;\n    }\n\n    if (a.relative) {\n        alx += a.x;\n        aly += a.y;\n    }\n    const builder = (x: number, y: number) => new Anchor(G20.vector(x, y));\n    // TODO: Curiously, the semantics of which anchor is first and second seems to have been reversed.\n    return subdivide(builder, bx, by, brx, bry, alx, aly, ax, ay, limit);\n}\n", "import { Anchor } from './anchor';\nimport { Collection } from './collection';\nimport { Color, is_color_provider, serialize_color } from './effects/ColorProvider';\nimport { ElementBase } from './element';\nimport { Flag } from './Flag';\nimport { IBoard } from './IBoard';\nimport { decompose_2d_3x3_matrix } from './math/decompose_2d_3x3_matrix';\nimport { G20 } from './math/G20.js';\nimport { Disposable } from './reactive/Disposable';\nimport { variable } from './reactive/variable';\nimport { get_svg_element_defs, set_defs_dirty_flag, svg, SVGAttributes, transform_value_of_matrix } from './renderers/SVGView';\nimport { PositionLike, Shape } from './Shape';\nimport { getComponentOnCubicBezier, getCurveBoundingBox, getCurveFromPoints } from './utils/curves';\nimport { lerp, mod } from './utils/math';\nimport { Commands } from './utils/path-commands';\nimport { contains, getCurveLength, getIdByLength, getSubdivisions } from './utils/shape';\n\nexport function get_dashes_offset(dashes: number[]): number | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (dashes as any)['offset'];\n}\n\nexport function set_dashes_offset(dashes: number[], offset: number): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (dashes as any)['offset'] = offset;\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nconst vector = new G20();\n\nexport interface PathAttributes {\n    attitude: G20;\n    id: string,\n    opacity: number;\n    position: PositionLike;\n    visibility: 'visible' | 'hidden' | 'collapse';\n    /**\n     * The value of what the path should be filled in with.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n     */\n    fill: Color;\n    fillOpacity: number;\n    /**\n     * The value of what the path should be outlined in with.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n     */\n    stroke: Color;\n    strokeWidth: number;\n    strokeOpacity: number;\n}\n\nexport class Path extends Shape implements PathAttributes {\n\n    #length = 0;\n\n    readonly #lengths: number[] = [];\n\n    readonly #fill = variable('none' as Color);\n    #fill_change: Disposable | null = null;\n    readonly #fillOpacity = variable(1.0);\n\n    readonly #stroke = variable('#000000' as Color);\n    #stroke_change: Disposable | null = null;\n    readonly #strokeWidth = variable(1);\n    readonly #strokeOpacity = variable(1.0);\n\n    #vectorEffect: 'none' | 'non-scaling-stroke' | 'non-scaling-size' | 'non-rotation' | 'fixed-position' = 'non-scaling-stroke';\n\n    /**\n     * stroke-linecap\n     */\n    readonly #cap = variable('round' as 'butt' | 'round' | 'square');\n\n    /**\n     * stroke-linejoin\n     */\n    readonly #join = variable('round' as 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round');\n\n    /**\n     * stroke-miterlimit\n     */\n    readonly #miter = variable(4);\n\n    #closed = true;\n    #curved = false;\n    #automatic = true;\n    #beginning = 0.0;\n    #ending = 1.0;\n\n    #dashes: number[] = null;\n\n    /**\n     * The hidden variable behind the `vertices` property.\n     */\n    #vertices: Collection<Anchor>;\n    // TODO; These could be unified into e.g. vertices_disposables.\n    #vertices_insert: Disposable | null = null;\n    #vertices_remove: Disposable | null = null;\n    /**\n     * [Q] What exactly is this?\n     * [A] It appears to be a working storage between the model vertices here and those that are used to compute the SVG path `d` attribute.\n     */\n    readonly #anchors: Anchor[] = [];\n\n    readonly #anchor_change_map = new Map<Anchor, Disposable>();\n\n    /**\n     * @param vertices A list of {@link Anchor}s that represent the order and coordinates to construct the rendered shape.\n     * @param closed Describes whether the path is closed or open.\n     * @param curved Describes whether the path automatically calculates bezier handles for each vertex.\n     * @param manual Describes whether the developer controls how vertices are plotted.\n     */\n    constructor(board: IBoard, vertices: Anchor[] = [], closed?: boolean, curved?: boolean, manual?: boolean, attributes: Partial<PathAttributes> = {}) {\n\n        super(board, attributes);\n\n        this.zzz.fill$ = this.#fill.asObservable();\n        this.zzz.fillOpacity$ = this.#fillOpacity.asObservable();\n        this.zzz.stroke$ = this.#stroke.asObservable();\n        this.zzz.strokeOpacity$ = this.#strokeOpacity.asObservable();\n        this.zzz.strokeWidth$ = this.#strokeWidth.asObservable();\n\n        this.flagReset(true);\n        this.zzz.flags[Flag.ClipPath] = false;\n        this.zzz.flags[Flag.ClipFlag] = false;\n\n        this.zzz.vertices = [];\n        this.zzz.vertices_subject = variable(0);\n        this.zzz.vertices$ = this.zzz.vertices_subject.asObservable();\n\n        /**\n         * Determines whether a final line is drawn between the final point in the `vertices` array and the first point.\n         */\n        this.closed = !!closed;\n\n        /**\n         * When the path is `automatic = true` this boolean determines whether the lines between the points are curved or not.\n         */\n        this.curved = !!curved;\n\n        /**\n         * Number between zero and one to state the beginning of where the path is rendered.\n         * A percentage value that represents at what percentage into the path should the renderer start drawing.\n         */\n        this.beginning = 0;\n\n        /**\n         * Number between zero and one to state the ending of where the path is rendered.\n         */\n        this.ending = 1;\n\n        // Style properties\n\n        if (attributes.fill) {\n            this.fill = attributes.fill;\n        }\n        else {\n            this.fill = '#fff';\n        }\n\n        if (typeof attributes.fillOpacity === 'number') {\n            this.fillOpacity = attributes.fillOpacity;\n        }\n        else {\n            this.fillOpacity = 1.0;\n        }\n\n        if (attributes.stroke) {\n            this.stroke = attributes.stroke;\n        }\n        else {\n            this.stroke = '#000';\n        }\n\n        if (typeof attributes.strokeWidth === 'number') {\n            this.strokeWidth = attributes.strokeWidth;\n        }\n        else {\n            this.strokeWidth = 1;\n        }\n\n        if (typeof attributes.strokeOpacity === 'number') {\n            this.strokeOpacity = attributes.strokeOpacity;\n        }\n        else {\n            this.strokeOpacity = 1.0;\n        }\n\n\n        /**\n         * A class to be applied to the element to be compatible with CSS styling.\n         */\n        this.className = '';\n\n        /**\n         * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeLinecapProperty}\n         */\n        this.cap = 'butt';      // Default of Adobe Illustrator\n\n        /**\n         * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeLinejoinProperty}\n         */\n        this.join = 'miter';    // Default of Adobe Illustrator\n\n        /**\n         * @see {@link https://www.w3.org/TR/SVG11/painting.html#StrokeMiterlimitProperty}\n         */\n        this.miter = 4;         // Default of Adobe Illustrator\n\n        this.vertices = new Collection(vertices);\n\n        this.automatic = !manual;\n\n        /**\n         * Array of numbers. Odd indices represent dash length. Even indices represent dash space.\n         * A list of numbers that represent the repeated dash length and dash space applied to the stroke of the text.\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more information on the SVG stroke-dasharray attribute.\n         */\n        this.dashes = [];\n\n        set_dashes_offset(this.dashes, 0);\n    }\n\n    render(domElement: HTMLElement | SVGElement, svgElement: SVGElement): void {\n\n        this.update();\n\n        // Collect any attribute that needs to be changed here\n        const changed: SVGAttributes = {};\n\n        const flagMatrix = this.matrix.manual || this.zzz.flags[Flag.Matrix];\n\n        if (flagMatrix) {\n            changed.transform = transform_value_of_matrix(this.matrix);\n        }\n\n        if (this.fill && is_color_provider(this.fill)) {\n            this.zzz.hasFillEffect = true;\n            this.fill.render(svgElement);\n        }\n\n        if (this.zzz.flags[Flag.Fill]) {\n            if (this.fill) {\n                changed.fill = serialize_color(this.fill);\n            }\n            if (this.zzz.hasFillEffect && typeof this.fill === 'string') {\n                set_defs_dirty_flag(get_svg_element_defs(svgElement), true);\n                delete this.zzz.hasFillEffect;\n            }\n        }\n\n        if (this.stroke && is_color_provider(this.stroke)) {\n            this.zzz.hasStrokeEffect = true;\n            this.stroke.render(svgElement);\n        }\n\n        if (this.zzz.flags[Flag.Stroke]) {\n            if (this.stroke) {\n                changed.stroke = serialize_color(this.stroke);\n            }\n            if (this.zzz.hasStrokeEffect && typeof this.stroke === 'string') {\n                set_defs_dirty_flag(get_svg_element_defs(svgElement), true);\n                delete this.zzz.hasStrokeEffect;\n            }\n        }\n\n        if (this.zzz.flags[Flag.Linewidth]) {\n            changed['stroke-width'] = `${this.strokeWidth}`;\n        }\n\n        if (this.zzz.flags[Flag.ClassName]) {\n            changed['class'] = this.classList.join(' ');\n        }\n\n        if (this.zzz.flags[Flag.VectorEffect]) {\n            changed['vector-effect'] = this.vectorEffect;\n        }\n\n        if (this.zzz.flags[Flag.Cap]) {\n            changed['stroke-linecap'] = this.cap;\n        }\n\n        if (this.zzz.flags[Flag.Join]) {\n            changed['stroke-linejoin'] = this.join;\n        }\n\n        if (this.zzz.flags[Flag.Miter]) {\n            changed['stroke-miterlimit'] = `${this.miter}`;\n        }\n\n        if (this.dashes && this.dashes.length > 0) {\n            changed['stroke-dasharray'] = this.dashes.join(' ');\n            changed['stroke-dashoffset'] = `${get_dashes_offset(this.dashes) || 0}`;\n        }\n\n        if (this.zzz.elem) {\n            // When completely reactive, this will not be needed\n            svg.setAttributes(this.zzz.elem, changed);\n        }\n        else {\n            changed.id = this.id;\n            this.zzz.elem = svg.createElement('path', changed);\n            domElement.appendChild(this.zzz.elem);\n\n            // The matrix is in the Shape.\n            this.zzz.disposables.push(this.matrix.change$.subscribe((matrix) => {\n                const change: SVGAttributes = {};\n                change.transform = transform_value_of_matrix(matrix);\n                svg.setAttributes(this.zzz.elem, change);\n            }));\n\n            this.zzz.disposables.push(this.zzz.vertices$.subscribe(() => {\n                const change: SVGAttributes = {};\n                change.d = svg.path_from_anchors(this.board, this.position, this.attitude, this.zzz.vertices, this.closed);\n                svg.setAttributes(this.zzz.elem, change);\n            }));\n\n            // fill\n            this.zzz.disposables.push(this.zzz.fill$.subscribe((fill) => {\n                const change: SVGAttributes = {};\n                change.fill = serialize_color(fill);\n                svg.setAttributes(this.zzz.elem, change);\n\n                if (this.zzz.hasFillEffect && typeof fill === 'string') {\n                    set_defs_dirty_flag(get_svg_element_defs(svgElement), true);\n                    delete this.zzz.hasFillEffect;\n                }\n\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // fillOpacity\n            this.zzz.disposables.push(this.zzz.fillOpacity$.subscribe((fillOpacity) => {\n                const change: SVGAttributes = {};\n                change['fill-opacity'] = `${fillOpacity}`;\n                svg.setAttributes(this.zzz.elem, change);\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // opacity\n            this.zzz.disposables.push(this.zzz.opacity$.subscribe((opacity) => {\n                const change: SVGAttributes = { opacity: `${opacity}` };\n                if (opacity === 1) {\n                    svg.removeAttributes(this.zzz.elem, change);\n                }\n                else {\n                    svg.setAttributes(this.zzz.elem, change);\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // stroke\n            this.zzz.disposables.push(this.zzz.stroke$.subscribe((stroke) => {\n                const change: SVGAttributes = {};\n                change.stroke = serialize_color(stroke);\n                svg.setAttributes(this.zzz.elem, change);\n\n                if (this.zzz.hasStrokeEffect && typeof stroke === 'string') {\n                    set_defs_dirty_flag(get_svg_element_defs(svgElement), true);\n                    delete this.zzz.hasStrokeEffect;\n                }\n\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // strokeOpacity\n            this.zzz.disposables.push(this.zzz.strokeOpacity$.subscribe((strokeOpacity) => {\n                const change: SVGAttributes = {};\n                change['stroke-opacity'] = `${strokeOpacity}`;\n                svg.setAttributes(this.zzz.elem, change);\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // strokeWidth\n            this.zzz.disposables.push(this.zzz.strokeWidth$.subscribe((strokeWidth) => {\n                const change: SVGAttributes = {};\n                change['stroke-width'] = `${strokeWidth}`;\n                svg.setAttributes(this.zzz.elem, change);\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // visibility\n            this.zzz.disposables.push(this.zzz.visibility$.subscribe((visibility) => {\n                switch (visibility) {\n                    case 'visible': {\n                        const change: SVGAttributes = { visibility };\n                        svg.removeAttributes(this.zzz.elem, change);\n                        break;\n                    }\n                    default: {\n                        const change: SVGAttributes = { visibility };\n                        svg.setAttributes(this.zzz.elem, change);\n                        break;\n                    }\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n        }\n\n        if (this.zzz.flags[Flag.ClipFlag]) {\n            const clip = svg.getClip(this, svgElement);\n            const elem = this.zzz.elem;\n\n            if (this.zzz.clip) {\n                elem.removeAttribute('id');\n                clip.setAttribute('id', this.id);\n                clip.appendChild(elem);\n            }\n            else {\n                clip.removeAttribute('id');\n                elem.setAttribute('id', this.id);\n                if (this.parent && this.parent instanceof ElementBase) {\n                    this.parent.zzz.elem.appendChild(elem); // TODO: should be insertBefore\n                }\n            }\n        }\n\n        // Commented two-way functionality of clips / masks with groups and\n        // polygons. Uncomment when this bug is fixed:\n        // https://code.google.com/p/chromium/issues/detail?id=370951\n\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mask\n        if (this.zzz.flags[Flag.ClipPath]) {\n            if (this.clipPath) {\n                this.clipPath.render(domElement, svgElement);\n                this.zzz.elem.setAttribute('clip-path', 'url(#' + this.clipPath.id + ')');\n            }\n            else {\n                this.zzz.elem.removeAttribute('clip-path');\n            }\n        }\n\n        this.flagReset();\n    }\n\n    /**\n     * A convenience method for setting the `fill` attribute to \"none\".\n     */\n    noFill(): this {\n        this.fill = 'none';\n        return this;\n    }\n\n    /**\n     * A convenience method for setting the `stroke` attribute to \"none\".\n     */\n    noStroke(): this {\n        this.stroke = 'none';\n        return this;\n    }\n\n    corner(): this {\n        const bbox = this.getBoundingBox(true);\n        const hw = (bbox.right - bbox.left) / 2;\n        const hh = (bbox.bottom - bbox.top) / 2;\n        const cx = (bbox.left + bbox.right) / 2;\n        const cy = (bbox.top + bbox.bottom) / 2;\n\n        for (let i = 0; i < this.vertices.length; i++) {\n            const v = this.vertices.getAt(i);\n            v.x -= cx;\n            v.y -= cy;\n            v.x += hw;\n            v.y += hh;\n        }\n\n        if (this.clipPath) {\n            this.clipPath.position.x -= cx;\n            this.clipPath.position.x += hw;\n            this.clipPath.position.y -= cy;\n            this.clipPath.position.y += hh;\n        }\n        return this;\n    }\n\n    center(): this {\n        const bbox = this.getBoundingBox(true);\n\n        const cx = (bbox.left + bbox.right) / 2 - this.position.x;\n        const cy = (bbox.top + bbox.bottom) / 2 - this.position.y;\n\n        for (let i = 0; i < this.vertices.length; i++) {\n            const v = this.vertices.getAt(i);\n            v.x -= cx;\n            v.y -= cy;\n        }\n\n        if (this.clipPath) {\n            this.clipPath.position.x -= cx;\n            this.clipPath.position.y -= cy;\n        }\n\n        return this;\n\n    }\n\n    getBoundingBox(shallow?: boolean): { top?: number; left?: number; right?: number; bottom?: number } {\n\n        let left = Infinity;\n        let right = -Infinity;\n        let top = Infinity;\n        let bottom = -Infinity;\n\n        this.update();\n\n        const M = shallow ? this.matrix : this.worldMatrix;\n\n        let border = (this.strokeWidth || 0) / 2;\n        const l = this.zzz.vertices.length;\n\n        if (this.strokeWidth > 0 || (this.stroke && typeof this.stroke === 'string' && !(/(transparent|none)/i.test(this.stroke)))) {\n            if (this.matrix.manual) {\n                const { scaleX, scaleY } = decompose_2d_3x3_matrix(M);\n                border = max(scaleX, scaleY) * (this.strokeWidth || 0) / 2;\n            }\n            else {\n                border *= max(this.scaleXY.x, this.scaleXY.y);\n            }\n        }\n\n        if (l <= 0) {\n            return {};\n        }\n\n        for (let i = 0; i < l; i++) {\n\n            const v1 = this.zzz.vertices[i];\n            // If i = 0, then this \"wraps around\" to the last vertex. Otherwise, it's the previous vertex.\n            // This is important for handling cyclic paths.\n            const v0 = this.zzz.vertices[(i + l - 1) % l];\n\n            const [v0x, v0y] = M.multiply_vector(v0.x, v0.y);\n            const [v1x, v1y] = M.multiply_vector(v1.x, v1.y);\n\n            if (v0.controls && v1.controls) {\n\n                let rx = v0.controls.b.x;\n                let ry = v0.controls.b.y;\n\n                if (v0.relative) {\n                    rx += v0.x;\n                    ry += v0.y;\n                }\n\n                const [c0x, c0y] = M.multiply_vector(rx, ry);\n\n                let lx = v1.controls.a.x;\n                let ly = v1.controls.a.y;\n\n                if (v1.relative) {\n                    lx += v1.x;\n                    ly += v1.y;\n                }\n\n                const [c1x, c1y] = M.multiply_vector(lx, ly);\n\n                const bb = getCurveBoundingBox(\n                    v0x, v0y,\n                    c0x, c0y,\n                    c1x, c1y,\n                    v1x, v1y\n                );\n\n                top = min(bb.min.y - border, top);\n                left = min(bb.min.x - border, left);\n                right = max(bb.max.x + border, right);\n                bottom = max(bb.max.y + border, bottom);\n            }\n            else {\n                if (i <= 1) {\n                    top = min(v0y - border, top);\n                    left = min(v0x - border, left);\n                    right = max(v0x + border, right);\n                    bottom = max(v0y + border, bottom);\n                }\n                top = min(v1y - border, top);\n                left = min(v1x - border, left);\n                right = max(v1x + border, right);\n                bottom = max(v1y + border, bottom);\n            }\n        }\n\n        return { top, left, right, bottom, };\n    }\n\n    hasBoundingBox(): boolean {\n        return true;\n    }\n\n    /**\n     * TODO: Bad name. This function is called for its side effects which are to modify the Anchor.\n     * Originally the function appears to promote a Vector and return an Anchor, but this is not used\n     * and the call always involves an Anchor.\n     * There is a return value but it is not being used.\n     * @param t Percentage value describing where on the {@link Path} to estimate and assign coordinate values.\n     * @param anchor - Object to apply calculated x, y to. If none available returns new `Object`.\n     * @description Given a float `t` from 0 to 1, return a point or assign a passed `obj`'s coordinates to that percentage on this {@link Path}'s curve.\n     */\n    getPointAt(t: number, anchor: Anchor): Anchor {\n        /**\n         * This line proves that the anchor argument is not re-assigned. \n         */\n        const ank = anchor;\n\n        /**\n         * target is initialized to the distance along the total `length` determined by `t`.\n         */\n        let target = this.length * min(max(t, 0), 1);\n        /**\n         * The number of vertices.\n         */\n        const Nvs = this.vertices.length;\n        const last = Nvs - 1;\n\n        let a: Anchor | null = null;\n        let b: Anchor | null = null;\n\n        /**\n         * The number of length segments.\n         */\n        const Nseg = this.#lengths.length;\n        /**\n         * Keeps track of the cumulative distance travelled over the segments.\n         */\n        let sum = 0;\n        for (let i = 0; i < Nseg; i++) {\n            // When the target point lies inside the current segment...\n            if (sum + this.#lengths[i] >= target) {\n                // Determine the anchors that enclose the target...\n                let ia: number;\n                let ib: number;\n                if (this.closed) {\n                    ia = mod(i, Nvs);\n                    ib = mod(i - 1, Nvs);\n                    if (i === 0) {\n                        ia = ib;\n                        ib = i;\n                    }\n                }\n                else {\n                    ia = i;\n                    ib = min(max(i - 1, 0), last);\n                }\n                a = this.vertices.getAt(ia);\n                b = this.vertices.getAt(ib);\n\n                // We'll be breaking out of the loop and target will not be used anymore,\n                // so we could introduce a new variable here. The goal seems to be to re-use t for some lerping\n                // later on, so this new t value must somehow be better?\n                target -= sum;\n                if (this.#lengths[i] !== 0) {\n                    t = target / this.#lengths[i];\n                }\n                else {\n                    t = 0;\n                }\n                break;\n            }\n            sum += this.#lengths[i];\n        }\n\n        if (a === null || b === null) {\n            return null;\n        }\n\n        if (!a) {\n            return b;\n        }\n        else if (!b) {\n            return a;\n        }\n\n        const bb = b.controls && b.controls.b;\n        const aa = a.controls && a.controls.a;\n\n        const x1 = b.x;\n        const y1 = b.y;\n        let x2 = (bb || b).x;\n        let y2 = (bb || b).y;\n        let x3 = (aa || a).x;\n        let y3 = (aa || a).y;\n        const x4 = a.x;\n        const y4 = a.y;\n\n        if (bb && b.relative) {\n            x2 += b.x;\n            y2 += b.y;\n        }\n\n        if (aa && a.relative) {\n            x3 += a.x;\n            y3 += a.y;\n        }\n\n        const x = getComponentOnCubicBezier(t, x1, x2, x3, x4);\n        const y = getComponentOnCubicBezier(t, y1, y2, y3, y4);\n\n        // Higher order points for control calculation.\n        const t1x = lerp(x1, x2, t);\n        const t1y = lerp(y1, y2, t);\n        const t2x = lerp(x2, x3, t);\n        const t2y = lerp(y2, y3, t);\n        const t3x = lerp(x3, x4, t);\n        const t3y = lerp(y3, y4, t);\n\n        // Calculate the returned points control points.\n        const brx = lerp(t1x, t2x, t);\n        const bry = lerp(t1y, t2y, t);\n        const alx = lerp(t2x, t3x, t);\n        const aly = lerp(t2y, t3y, t);\n\n        ank.x = x;\n        ank.y = y;\n\n        ank.controls.a.x = brx;\n        ank.controls.a.y = bry;\n        ank.controls.b.x = alx;\n        ank.controls.b.y = aly;\n\n        if (!(typeof ank.relative === 'boolean') || ank.relative) {\n            ank.controls.a.x -= x;\n            ank.controls.a.y -= y;\n            ank.controls.b.x -= x;\n            ank.controls.b.y -= y;\n        }\n\n        ank.t = t;\n\n        return ank;\n    }\n\n    /**\n     * Based on closed / curved and sorting of vertices plot where all points should be and where the respective handles should be too.\n     */\n    plot(): this {\n        if (this.curved) {\n            getCurveFromPoints(this.#vertices, this.closed);\n            return this;\n        }\n        for (let i = 0; i < this.#vertices.length; i++) {\n            this.#vertices.getAt(i).command = (i === 0) ? Commands.move : Commands.line;\n        }\n        return this;\n    }\n\n    /**\n     * Insert an anchor at the midpoint between every vertex.\n     * @param limit - How many times to recurse subdivisions.\n     */\n    subdivide(limit: number): this {\n        // TODO: DRYness (function below)\n        this.update();\n\n        const last = this.vertices.length - 1;\n        const closed = this.closed || this.vertices.getAt(last).command === Commands.close;\n        let b = this.vertices.getAt(last);\n        let points: Anchor[] = [], verts;\n\n        this.vertices.forEach((a, i) => {\n\n            if (i <= 0 && !closed) {\n                b = a;\n                return;\n            }\n\n            if (a.command === Commands.move) {\n                points.push(new Anchor(G20.vector(b.x, b.y)));\n                if (i > 0) {\n                    points[points.length - 1].command = Commands.line;\n                }\n                b = a;\n                return;\n            }\n\n            verts = getSubdivisions(a, b, limit);\n            points = points.concat(verts);\n\n            // Assign commands to all the verts\n            verts.forEach(function (v, i) {\n                if (i <= 0 && b.command === Commands.move) {\n                    v.command = Commands.move;\n                }\n                else {\n                    v.command = Commands.line;\n                }\n            });\n\n            if (i >= last) {\n\n                // TODO: Add check if the two vectors in question are the same values.\n                if (this.closed && this.automatic) {\n\n                    b = a;\n\n                    verts = getSubdivisions(a, b, limit);\n                    points = points.concat(verts);\n\n                    // Assign commands to all the verts\n                    verts.forEach(function (v, i) {\n                        if (i <= 0 && b.command === Commands.move) {\n                            v.command = Commands.move;\n                        }\n                        else {\n                            v.command = Commands.line;\n                        }\n                    });\n\n                }\n                else if (closed) {\n                    points.push(new Anchor(G20.vector(a.x, a.y)));\n                }\n\n                points[points.length - 1].command = closed\n                    ? Commands.close : Commands.line;\n\n            }\n\n            b = a;\n        });\n\n        this.automatic = false;\n        this.curved = false;\n        this.vertices = new Collection(points);\n\n        return this;\n    }\n\n    #updateLength(limit?: number, silent = false): this {\n        // TODO: DRYness (function above)\n        if (!silent) {\n            this.update();\n        }\n\n        const length = this.vertices.length;\n        const last = length - 1;\n        const closed = false;//this.closed || this.vertices[last]._command === Commands.close;\n\n        let b = this.vertices.getAt(last);\n        let sum = 0;\n\n        this.vertices.forEach((a: Anchor, i: number) => {\n\n            if ((i <= 0 && !closed) || a.command === Commands.move) {\n                b = a;\n                this.#lengths[i] = 0;\n                return;\n            }\n\n            this.#lengths[i] = getCurveLength(a, b, limit);\n            sum += this.#lengths[i];\n\n            if (i >= last && closed) {\n\n                b = this.vertices.getAt((i + 1) % length);\n\n                this.#lengths[i + 1] = getCurveLength(a, b, limit);\n                sum += this.#lengths[i + 1];\n\n            }\n\n            b = a;\n        });\n\n        this.#length = sum;\n        this.zzz.flags[Flag.Length] = false;\n\n        return this;\n    }\n\n    override update(): this {\n        if (this.zzz.flags[Flag.Vertices]) {\n\n            if (this.automatic) {\n                this.plot();\n            }\n\n            if (this.zzz.flags[Flag.Length]) {\n                this.#updateLength(undefined, true);\n            }\n\n            const closed = this.closed;\n\n            const beginning = min(this.beginning, this.ending);\n            const ending = max(this.beginning, this.ending);\n\n            const lBound = Math.ceil(getIdByLength(this, beginning * this.length));\n            const uBound = Math.floor(getIdByLength(this, ending * this.length));\n\n            {\n                /**\n                 * Assigned in the for loop, used after the for loop.\n                 */\n                let left: Anchor;\n                /**\n                 * Assigned in the for loop, used after the for loop.\n                 */\n                let next: Anchor;\n\n                /**\n                 * The source for the updates are the vertices maintained by derived classes that specialize Path.\n                 */\n                const vertices = this.vertices;\n                this.zzz.vertices.length = 0;\n                {\n                    let right: Anchor;\n                    let prev: Anchor;\n                    const L = vertices.length;\n                    for (let i = 0; i < L; i++) {\n\n                        if (this.#anchors.length <= i) {\n                            // Expected to be `relative` anchor points.\n                            this.#anchors.push(new Anchor(G20.vector(0, 0)));\n                        }\n\n                        if (i > uBound && !right) {\n\n                            const v = this.#anchors[i].copy(vertices.getAt(i));\n                            this.getPointAt(ending, v);\n                            v.command = this.#anchors[i].command;\n                            this.zzz.vertices.push(v);\n\n                            right = v;\n                            prev = vertices.getAt(i - 1);\n\n                            // Project control over the percentage `t`\n                            // of the in-between point\n                            if (prev && prev.controls) {\n\n                                if (v.relative) {\n                                    v.controls.b.clear();\n                                }\n                                else {\n                                    v.controls.b.copyVector(v.origin);\n                                }\n\n                                if (prev.relative) {\n                                    this.#anchors[i - 1].controls.b\n                                        .copyVector(prev.controls.b)\n                                        .lerp(G20.zero, 1 - v.t);\n                                }\n                                else {\n                                    this.#anchors[i - 1].controls.b\n                                        .copyVector(prev.controls.b)\n                                        .lerp(prev.origin, 1 - v.t);\n                                }\n                            }\n                        }\n                        else if (i >= lBound && i <= uBound) {\n\n                            const v = this.#anchors[i].copy(vertices.getAt(i));\n                            this.zzz.vertices.push(v);\n\n                            if (i === uBound && contains(this, ending)) {\n                                right = v;\n                                if (!closed && right.controls) {\n                                    if (right.relative) {\n                                        right.controls.b.clear();\n                                    }\n                                    else {\n                                        right.controls.b.copyVector(right.origin);\n                                    }\n                                }\n                            }\n                            else if (i === lBound && contains(this, beginning)) {\n                                left = v;\n                                left.command = Commands.move;\n                                if (!closed && left.controls) {\n                                    if (left.relative) {\n                                        left.controls.a.clear();\n                                    }\n                                    else {\n                                        left.controls.a.copyVector(left.origin);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Prepend the trimmed point if necessary.\n                if (lBound > 0 && !left) {\n\n                    const i = lBound - 1;\n\n                    const v = this.#anchors[i].copy(vertices.getAt(i));\n                    this.getPointAt(beginning, v);\n                    v.command = Commands.move;\n                    this.zzz.vertices.unshift(v);\n\n                    next = vertices.getAt(i + 1);\n\n                    // Project control over the percentage `t`\n                    // of the in-between point\n                    if (next && next.controls) {\n\n                        v.controls.a.clear();\n\n                        if (next.relative) {\n                            this.#anchors[i + 1].controls.a\n                                .copyVector(next.controls.a)\n                                .lerp(G20.zero, v.t);\n                        }\n                        else {\n                            vector.copyVector(next.origin);\n                            this.#anchors[i + 1].controls.a\n                                .copyVector(next.controls.a)\n                                .lerp(next.origin, v.t);\n                        }\n                    }\n                }\n            }\n            this.zzz.vertices_subject.set(this.zzz.vertices_subject.get() + 1);\n        }\n        super.update();\n        return this;\n    }\n\n    override flagReset(dirtyFlag = false): this {\n\n        this.zzz.flags[Flag.Cap] = dirtyFlag;\n        this.zzz.flags[Flag.ClipFlag] = dirtyFlag;\n        this.zzz.flags[Flag.Fill] = dirtyFlag;\n        this.zzz.flags[Flag.Join] = dirtyFlag;\n        this.zzz.flags[Flag.Length] = dirtyFlag;\n        this.zzz.flags[Flag.Linewidth] = dirtyFlag;\n        this.zzz.flags[Flag.ClipPath] = dirtyFlag;\n        this.zzz.flags[Flag.Miter] = dirtyFlag;\n        this.zzz.flags[Flag.Stroke] = dirtyFlag;\n        this.zzz.flags[Flag.VectorEffect] = dirtyFlag;\n        this.zzz.flags[Flag.Vertices] = dirtyFlag;\n\n        super.flagReset(dirtyFlag);\n\n        return this;\n\n    }\n    get automatic(): boolean {\n        return this.#automatic;\n    }\n    set automatic(automatic: boolean) {\n        if (automatic === this.automatic) {\n            return;\n        }\n        this.#automatic = !!automatic;\n        this.vertices.forEach(function (v: Anchor) {\n            if (automatic) {\n                v.ignore();\n            }\n            else {\n                v.listen();\n            }\n        });\n    }\n    get beginning(): number {\n        return this.#beginning;\n    }\n    set beginning(beginning: number) {\n        this.#beginning = beginning;\n        this.zzz.flags[Flag.Vertices] = true;\n    }\n    /**\n     * Defines the shape to be used at the end of open subpaths when they are stroked.\n     * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap\n     */\n    get cap(): 'butt' | 'round' | 'square' {\n        return this.#cap.get();\n    }\n    set cap(cap: 'butt' | 'round' | 'square') {\n        this.#cap.set(cap);\n        this.zzz.flags[Flag.Cap] = true;\n    }\n    get closed(): boolean {\n        return this.#closed;\n    }\n    set closed(closed: boolean) {\n        this.#closed = !!closed;\n        this.zzz.flags[Flag.Vertices] = true;\n    }\n    get curved(): boolean {\n        return this.#curved;\n    }\n    set curved(curved: boolean) {\n        this.#curved = !!curved;\n        this.zzz.flags[Flag.Vertices] = true;\n    }\n    get dashes(): number[] {\n        return this.#dashes;\n    }\n    set dashes(dashes: number[]) {\n        if (typeof get_dashes_offset(dashes) !== 'number') {\n            set_dashes_offset(dashes, (this.dashes && get_dashes_offset(this.dashes)) || 0);\n        }\n        this.#dashes = dashes;\n    }\n    get ending(): number {\n        return this.#ending;\n    }\n    set ending(ending: number) {\n        this.#ending = ending;\n        this.zzz.flags[Flag.Vertices] = true;\n    }\n    get fill(): Color {\n        return this.#fill.get();\n    }\n    set fill(fill: Color) {\n        if (this.#fill_change) {\n            this.#fill_change.dispose();\n            this.#fill_change = null;\n        }\n\n        this.#fill.set(fill);\n        this.zzz.flags[Flag.Fill] = true;\n\n        if (is_color_provider(fill)) {\n            this.#fill_change = fill.change$.subscribe(() => {\n                this.zzz.flags[Flag.Fill] = true;\n            });\n        }\n    }\n    get fillOpacity(): number {\n        return this.#fillOpacity.get();\n    }\n    set fillOpacity(fillOpacity: number) {\n        this.#fillOpacity.set(fillOpacity);\n    }\n    get join(): 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round' {\n        return this.#join.get();\n    }\n    set join(join: 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round') {\n        this.#join.set(join);\n        this.zzz.flags[Flag.Join] = true;\n    }\n    get length(): number {\n        if (this.zzz.flags[Flag.Length]) {\n            this.#updateLength();\n        }\n        return this.#length;\n    }\n    get lengths(): number[] {\n        return this.#lengths;\n    }\n    get strokeWidth(): number {\n        return this.#strokeWidth.get();\n    }\n    set strokeWidth(stroeWidth: number) {\n        if (typeof stroeWidth === 'number') {\n            if (this.strokeWidth !== stroeWidth) {\n                this.#strokeWidth.set(stroeWidth);\n                this.zzz.flags[Flag.Linewidth] = true;\n            }\n        }\n    }\n    get miter(): number {\n        return this.#miter.get();\n    }\n    set miter(miter: number) {\n        this.#miter.set(miter);\n        this.zzz.flags[Flag.Miter] = true;\n    }\n    get stroke(): Color {\n        return this.#stroke.get();\n    }\n    set stroke(stroke: Color) {\n        if (this.#stroke_change) {\n            this.#stroke_change.dispose();\n            this.#stroke_change = null;\n        }\n\n        this.#stroke.set(stroke);\n        this.zzz.flags[Flag.Stroke] = true;\n\n        if (is_color_provider(stroke)) {\n            this.#stroke_change = stroke.change$.subscribe(() => {\n                this.zzz.flags[Flag.Stroke] = true;\n            });\n        }\n    }\n    get strokeOpacity(): number {\n        return this.#strokeOpacity.get();\n    }\n    set strokeOpacity(strokeOpacity: number) {\n        this.#strokeOpacity.set(strokeOpacity);\n    }\n    get vertices(): Collection<Anchor> {\n        return this.#vertices;\n    }\n    set vertices(vertices: Collection<Anchor>) {\n        // Remove previous listeners\n        if (this.#vertices_insert) {\n            this.#vertices_insert.dispose();\n            this.#vertices_insert = null;\n        }\n        if (this.#vertices_remove) {\n            this.#vertices_remove.dispose();\n            this.#vertices_remove = null;\n        }\n\n        // Create new Collection with copy of vertices\n        if (vertices instanceof Collection) {\n            this.#vertices = vertices;\n        }\n        else {\n            this.#vertices = new Collection(vertices || []);\n        }\n\n\n        // Listen for Collection changes and bind / unbind\n        this.#vertices_insert = this.vertices.insert$.subscribe((inserts: Anchor[]) => {\n            let i = inserts.length;\n            while (i--) {\n                const anchor = inserts[i];\n                const subscription = anchor.change$.subscribe(() => {\n                    this.zzz.flags[Flag.Vertices] = true;\n                });\n                // TODO: Check that we are not already mapped?\n                this.#anchor_change_map.set(anchor, subscription);\n            }\n            this.zzz.flags[Flag.Vertices] = true;\n        });\n\n        this.#vertices_remove = this.vertices.remove$.subscribe((removes: Anchor[]) => {\n            let i = removes.length;\n            while (i--) {\n                const anchor = removes[i];\n                const subscription = this.#anchor_change_map.get(anchor);\n                subscription.dispose();\n                this.#anchor_change_map.delete(anchor);\n            }\n            this.zzz.flags[Flag.Vertices] = true;\n        });\n\n        this.vertices.forEach((anchor: Anchor) => {\n            const subscription = anchor.change$.subscribe(() => {\n                this.zzz.flags[Flag.Vertices] = true;\n            });\n            this.#anchor_change_map.set(anchor, subscription);\n        });\n    }\n    get vectorEffect(): 'none' | 'non-scaling-stroke' | 'non-scaling-size' | 'non-rotation' | 'fixed-position' {\n        return this.#vectorEffect;\n    }\n    set vectorEffect(vectorEffect: 'none' | 'non-scaling-stroke' | 'non-scaling-size' | 'non-rotation' | 'fixed-position') {\n        this.#vectorEffect = vectorEffect;\n        this.zzz.flags[Flag.VectorEffect] = true;\n    }\n}\n", "import { Group } from \"../group\";\nimport { SVGView, SVGViewParams } from \"./SVGView\";\nimport { View } from \"./View\";\nimport { ViewFactory } from \"./ViewFactory\";\n\nexport class SVGViewFactory implements ViewFactory {\n    constructor(readonly params?: SVGViewParams) {\n\n    }\n    createView(viewBox: Group, containerId: string): View {\n        return new SVGView(viewBox, containerId, this.params);\n    }\n}", "import { Anchor } from '../anchor.js';\nimport { Constants } from '../constants.js';\nimport { Flag } from '../Flag.js';\nimport { IBoard } from '../IBoard.js';\nimport { G20 } from '../math/G20.js';\nimport { Path } from '../path.js';\nimport { HALF_PI, mod, TWO_PI } from '../utils/math.js';\nimport { Commands } from '../utils/path-commands.js';\n\n/**\n * @param {Number} [x=0] - The x position of the arc segment.\n * @param {Number} [y=0] - The y position of the arc segment.\n * @param {Number} [innerRadius=0] - The inner radius value of the arc segment.\n * @param {Number} [outerRadius=0] - The outer radius value of the arc segment.\n * @param {Number} [startAngle=0] - The start angle of the arc segment in Number.\n * @param {Number} [endAngle=6.2831] - The end angle of the arc segment in Number.\n * @param {Number} [resolution=24] - The number of vertices used to construct the arc segment.\n */\nexport class ArcSegment extends Path {\n\n    /**\n     * @name ArcSegment#_flagStartAngle\n     * @private\n     * @property {Boolean} - Determines whether the {@link ArcSegment#startAngle} needs updating.\n     */\n    _flagStartAngle = false;\n    /**\n     * @name ArcSegment#_flagEndAngle\n     * @private\n     * @property {Boolean} - Determines whether the {@link ArcSegment#endAngle} needs updating.\n     */\n    _flagEndAngle = false;\n    /**\n     * @name ArcSegment#_flagInnerRadius\n     * @private\n     * @property {Boolean} - Determines whether the {@link ArcSegment#innerRadius} needs updating.\n     */\n    _flagInnerRadius = false;\n    /**\n     * @name ArcSegment#_flagOuterRadius\n     * @private\n     * @property {Boolean} - Determines whether the {@link ArcSegment#outerRadius} needs updating.\n     */\n    _flagOuterRadius = false;\n\n    /**\n     * @name ArcSegment#_startAngle\n     * @private\n     * @see {@link ArcSegment#startAngle}\n     */\n    _startAngle = 0;\n    /**\n     * @name ArcSegment#_endAngle\n     * @private\n     * @see {@link ArcSegment#endAngle}\n     */\n    _endAngle = TWO_PI;\n    /**\n     * @name ArcSegment#_innerRadius\n     * @private\n     * @see {@link ArcSegment#innerRadius}\n     */\n    _innerRadius = 0;\n    /**\n     * @name ArcSegment#_outerRadius\n     * @private\n     * @see {@link ArcSegment#outerRadius}\n     */\n    _outerRadius = 0;\n\n    constructor(board: IBoard, x = 0, y = 0, ir = 0, or = 0, sa = 0, ea = 2 * Math.PI, res = 24) {\n\n        const amount = res || (Constants.Resolution * 3);\n        const points: Anchor[] = [];\n        for (let i = 0; i < amount; i++) {\n            points.push(new Anchor(G20.vector(0, 0)));\n        }\n\n        super(board, points, true, false, true);\n\n        /**\n         * @name ArcSegment#innerRadius\n         * @property {Number} - The size of the inner radius of the arc segment.\n         */\n        if (typeof ir === 'number') {\n            this.innerRadius = ir;\n        }\n\n        /**\n         * @name ArcSegment#outerRadius\n         * @property {Number} - The size of the outer radius of the arc segment.\n         */\n        if (typeof or === 'number') {\n            this.outerRadius = or;\n        }\n\n        /**\n         * @name ArcSegment#startAngle\n         * @property {Number} - The angle of one side for the arc segment.\n         */\n        if (typeof sa === 'number') {\n            this.startAngle = sa;\n        }\n\n        /**\n         * @name ArcSegment#endAngle\n         * @property {Number} - The angle of the other side for the arc segment.\n         */\n        if (typeof ea === 'number') {\n            this.endAngle = ea;\n        }\n\n        this.update();\n\n        if (typeof x === 'number') {\n            this.position.x = x;\n        }\n        if (typeof y === 'number') {\n            this.position.y = y;\n        }\n\n    }\n\n    static Properties = ['startAngle', 'endAngle', 'innerRadius', 'outerRadius'];\n\n    update() {\n\n        if (this.zzz.flags[Flag.Vertices] || this._flagStartAngle || this._flagEndAngle\n            || this._flagInnerRadius || this._flagOuterRadius) {\n\n            const sa = this._startAngle;\n            const ea = this._endAngle;\n\n            const ir = this._innerRadius;\n            const or = this._outerRadius;\n\n            const connected = mod(sa, TWO_PI) === mod(ea, TWO_PI);\n            const punctured = ir > 0;\n\n            const vertices = this.vertices;\n            let length = (punctured ? vertices.length / 2 : vertices.length);\n            let command, id = 0;\n            let i, last, pct, v, theta, step, x, y, amp;\n\n            if (connected) {\n                length--;\n            }\n            else if (!punctured) {\n                length -= 2;\n            }\n\n            /**\n             * Outer Circle\n             */\n            for (i = 0, last = length - 1; i < length; i++) {\n\n                pct = i / last;\n                v = vertices.getAt(id);\n                theta = pct * (ea - sa) + sa;\n                step = (ea - sa) / length;\n\n                x = or * Math.cos(theta);\n                y = or * Math.sin(theta);\n\n                switch (i) {\n                    case 0:\n                        command = Commands.move;\n                        break;\n                    default:\n                        command = Commands.curve;\n                }\n\n                v.command = command;\n                v.x = x;\n                v.y = y;\n                v.controls.a.clear();\n                v.controls.b.clear();\n\n                if (v.command === Commands.curve) {\n                    amp = or * step / Math.PI;\n                    v.controls.a.x = amp * Math.cos(theta - HALF_PI);\n                    v.controls.a.y = amp * Math.sin(theta - HALF_PI);\n                    v.controls.b.x = amp * Math.cos(theta + HALF_PI);\n                    v.controls.b.y = amp * Math.sin(theta + HALF_PI);\n                    if (i === 1) {\n                        v.controls.a.scale(2);\n                    }\n                    if (i === last) {\n                        v.controls.b.scale(2);\n                    }\n                }\n\n                id++;\n\n            }\n\n            if (punctured) {\n\n                if (connected) {\n                    vertices.getAt(id).command = Commands.close;\n                    id++;\n                }\n                else {\n                    length--;\n                    last = length - 1;\n                }\n\n                /**\n                 * Inner Circle\n                 */\n                for (i = 0; i < length; i++) {\n\n                    pct = i / last;\n                    v = vertices.getAt(id);\n                    theta = (1 - pct) * (ea - sa) + sa;\n                    step = (ea - sa) / length;\n\n                    x = ir * Math.cos(theta);\n                    y = ir * Math.sin(theta);\n                    command = Commands.curve;\n                    if (i <= 0) {\n                        command = connected ? Commands.move : Commands.line;\n                    }\n\n                    v.command = command;\n                    v.x = x;\n                    v.y = y;\n                    v.controls.a.clear();\n                    v.controls.b.clear();\n\n                    if (v.command === Commands.curve) {\n                        amp = ir * step / Math.PI;\n                        v.controls.a.x = amp * Math.cos(theta + HALF_PI);\n                        v.controls.a.y = amp * Math.sin(theta + HALF_PI);\n                        v.controls.b.x = amp * Math.cos(theta - HALF_PI);\n                        v.controls.b.y = amp * Math.sin(theta - HALF_PI);\n                        if (i === 1) {\n                            v.controls.a.scale(2);\n                        }\n                        if (i === last) {\n                            v.controls.b.scale(2);\n                        }\n                    }\n\n                    id++;\n\n                }\n\n                // Final Point\n                vertices.getAt(id).copy(vertices.getAt(0));\n                vertices.getAt(id).command = Commands.line;\n\n            }\n            else if (!connected) {\n\n                vertices.getAt(id).command = Commands.line;\n                vertices.getAt(id).x = 0;\n                vertices.getAt(id).y = 0;\n                id++;\n\n                // Final Point\n                vertices.getAt(id).copy(vertices.getAt(0));\n                vertices.getAt(id).command = Commands.line;\n\n            }\n\n        }\n\n        super.update();\n\n        return this;\n    }\n\n    override flagReset(dirtyFlag = false) {\n        super.flagReset(dirtyFlag);\n\n        this._flagStartAngle = this._flagEndAngle\n            = this._flagInnerRadius = this._flagOuterRadius = false;\n        return this;\n    }\n    get startAngle() {\n        return this._startAngle;\n    }\n    set startAngle(v) {\n        this._startAngle = v;\n        this._flagStartAngle = true;\n    }\n    get endAngle() {\n        return this._endAngle;\n    }\n    set endAngle(v) {\n        this._endAngle = v;\n        this._flagEndAngle = true;\n    }\n    get innerRadius() {\n        return this._innerRadius;\n    }\n    set innerRadius(v) {\n        this._innerRadius = v;\n        this._flagInnerRadius = true;\n    }\n    get outerRadius() {\n        return this._outerRadius;\n    }\n    set outerRadius(v) {\n        this._outerRadius = v;\n        this._flagOuterRadius = true;\n    }\n}\n", "import { Anchor } from \"../anchor\";\nimport { Collection } from \"../collection\";\nimport { Flag } from \"../Flag\";\nimport { IBoard } from \"../IBoard\";\nimport { G20 } from \"../math/G20\";\nimport { Path, PathAttributes } from \"../path\";\nimport { Disposable, dispose } from '../reactive/Disposable';\nimport { PositionLike, position_from_like } from \"../Shape\";\nimport { Commands } from \"../utils/path-commands\";\n\nexport interface ArrowAttributes {\n    id?: string;\n    headLength?: number;\n    position?: PositionLike;\n    strokeOpacity?: number;\n    strokeWidth?: number;\n}\n\nexport interface ArrowProperties {\n    X: G20;\n    position: G20;\n    R: G20;\n    attitude: G20;\n    axis: G20;\n    headLength: number;\n    strokeOpacity: number;\n    strokeWidth: number;\n}\n\nexport class Arrow extends Path implements ArrowProperties {\n    readonly #disposables: Disposable[] = [];\n    readonly #axis: G20;\n    readonly #headLength: G20;\n    readonly #origin: G20;\n    constructor(board: IBoard, axis: PositionLike, attributes: ArrowAttributes = {}) {\n\n        const vertices = [\n            new Anchor(G20.vector(0, 0), Commands.move),    // tail\n            new Anchor(G20.vector(0, 0), Commands.line),    // head\n            new Anchor(G20.vector(0, 0), Commands.move),    // port head\n            new Anchor(G20.vector(0, 0), Commands.line),    // port tail\n            new Anchor(G20.vector(0, 0), Commands.move),    // stbd head\n            new Anchor(G20.vector(0, 0), Commands.line),    // stbd tail\n        ];\n\n        super(board, vertices, false, false, true, path_attribs_from_arrow_attribs(attributes));\n\n        this.#origin = G20.zero.clone();\n\n        this.#axis = position_from_like(axis);\n\n        if (typeof attributes.headLength === 'number') {\n            // We're hitting the internal property so that we don't trigger a vertex update.\n            this.#headLength = G20.scalar(attributes.headLength);\n        }\n        else {\n            this.#headLength = G20.scalar(0.25);\n        }\n\n        this.noFill();\n        this.cap = 'round';\n        this.join = 'round';\n\n        this.#disposables.push(this.#axis.change$.subscribe(() => {\n            this.#updateVertices();\n        }));\n        this.#disposables.push(this.#headLength.change$.subscribe(() => {\n            this.#updateVertices();\n        }));\n        this.#disposables.push(this.#origin.change$.subscribe(() => {\n            this.#updateVertices();\n        }));\n    }\n\n    override dispose(): void {\n        dispose(this.#disposables);\n        super.dispose();\n    }\n\n    #updateVertices(): void {\n        update_arrow_vertices(this.axis, this.headLength, this.origin, this.vertices);\n        this.zzz.flags[Flag.Vertices] = true;\n        super.update();\n    }\n\n    override update(): this {\n        if (this.zzz.flags[Flag.Vertices]) {\n            // console.lg(\"Arrow.update\")\n            // update_arrow_vertices(this.axis, this.headLength, this.vertices);\n        }\n        super.update();\n        return this;\n    }\n\n    override flagReset(dirtyFlag = false): this {\n        // this.zzz.flags[Flag.Width] = dirtyFlag;\n        // this.zzz.flags[Flag.Height] = dirtyFlag;\n        super.flagReset(dirtyFlag);\n        return this;\n    }\n    get axis(): G20 {\n        return this.#axis;\n    }\n    set axis(axis: G20) {\n        if (axis instanceof G20) {\n            this.#axis.copyVector(axis);\n        }\n    }\n    get headLength(): number {\n        return this.#headLength.a;\n    }\n    set headLength(headLength: number) {\n        if (typeof headLength === 'number') {\n            if (this.headLength !== headLength) {\n                this.#headLength.set(0, 0, headLength, 0);\n            }\n        }\n    }\n    get origin(): G20 {\n        return this.#origin;\n    }\n    set origin(origin: G20) {\n        if (origin instanceof G20) {\n            this.#origin.copyVector(origin);\n        }\n    }\n}\n\nfunction update_arrow_vertices(axis: G20, headLength: number, origin: G20, vertices: Collection<Anchor>): void {\n\n    const \u03B8 = Math.atan2(axis.y, axis.x);\n    const \u03C6 = Math.PI / 6;\n\n    const tail = vertices.getAt(0);\n    const head = vertices.getAt(1);\n    const port_head = vertices.getAt(2);\n    const port_tail = vertices.getAt(3);\n    const stbd_head = vertices.getAt(4);\n    const stbd_tail = vertices.getAt(5);\n\n    // In the current design, the tail of the arrow is origin for rotations.\n    // In future we might allow the origin to be e.g. half way along the shaft so that the arrow could spin?\n    tail.origin.set(0, 0).sub(origin);\n    head.origin.copyVector(axis).sub(origin);\n\n    port_head.origin.copyVector(axis).sub(origin);\n    port_tail.origin.set(axis.x - headLength * Math.cos(\u03B8 - \u03C6), axis.y - headLength * Math.sin(\u03B8 - \u03C6)).sub(origin);\n\n    stbd_head.origin.copyVector(axis).sub(origin);\n    stbd_tail.origin.set(axis.x - headLength * Math.cos(\u03B8 + \u03C6), axis.y - headLength * Math.sin(\u03B8 + \u03C6)).sub(origin);\n}\n\nfunction path_attribs_from_arrow_attribs(attributes: ArrowAttributes): Partial<PathAttributes> {\n    const retval: Partial<PathAttributes> = {\n        id: attributes.id,\n        // attitude: attributes.attitude,\n        // opacity: attributes.opacity,\n        position: attributes.position,\n        // visibility: attributes.visibility,\n        // fill: attributes.fill,\n        // fillOpacity: attributes.fillOpacity,\n        // stroke: attributes.stroke,\n        strokeOpacity: attributes.strokeOpacity,\n        strokeWidth: attributes.strokeWidth\n    };\n    return retval;\n}\n", "import { Anchor } from '../anchor';\nimport { Color } from '../effects/ColorProvider';\nimport { Flag } from '../Flag';\nimport { IBoard } from '../IBoard';\nimport { G20 } from '../math/G20';\nimport { Path, PathAttributes } from '../path';\nimport { variable } from '../reactive/variable';\nimport { PositionLike } from '../Shape';\nimport { HALF_PI, TWO_PI } from '../utils/math';\nimport { Commands } from '../utils/path-commands';\n\nexport interface CircleAttributes {\n    position?: PositionLike;\n    attitude?: G20;\n    radius?: number;\n    fill?: Color;\n    fillOpacity?: number;\n    stroke?: Color;\n    strokeOpacity?: number;\n    strokeWidth?: number;\n    resolution?: number;\n}\n\nexport interface CircleProperties {\n    position: G20;\n    attitude: G20;\n    radius: number;\n    fill: Color;\n    fillOpacity: number;\n    stroke: Color;\n    strokeOpacity: number;\n    strokeWidth: number;\n}\n\nexport class Circle extends Path implements CircleProperties {\n\n    readonly #radius = variable(1);\n\n    constructor(board: IBoard, options: CircleAttributes = {}) {\n\n        // At least 2 vertices are required for proper circle.\n        const amount = options.resolution ? Math.max(options.resolution, 2) : 4;\n        // These anchors will be placed on the circle during the update phase.\n        const points: Anchor[] = [];\n        for (let i = 0; i < amount; i++) {\n            points.push(new Anchor(G20.vector(0, 0)));\n        }\n\n        super(board, points, true, true, true, path_attributes(options));\n\n        this.zzz.radius$ = this.#radius.asObservable();\n\n        if (typeof options.radius === 'number') {\n            this.#radius.set(options.radius);\n        }\n\n        this.flagReset(true);\n\n        this.update();\n    }\n\n    override dispose(): void {\n        super.dispose();\n    }\n\n    override update(): this {\n        if (this.zzz.flags[Flag.Vertices] || this.zzz.flags[Flag.Radius]) {\n\n            let length = this.vertices.length;\n\n            if (!this.closed && length > 2) {\n                length -= 1;\n            }\n\n            // Coefficient for approximating circular arcs with Bezier curves\n            const c = (4 / 3) * Math.tan(Math.PI / (length * 2));\n            const radius = this.radius;\n            const rc = radius * c;\n\n            const cos = Math.cos;\n            const sin = Math.sin;\n\n            for (let i = 0; i < this.vertices.length; i++) {\n                const pct = i / length;\n                const theta = pct * TWO_PI;\n\n                const x = radius * cos(theta);\n                const y = radius * sin(theta);\n\n                const lx = rc * cos(theta - HALF_PI);\n                const ly = rc * sin(theta - HALF_PI);\n\n                const rx = rc * cos(theta + HALF_PI);\n                const ry = rc * sin(theta + HALF_PI);\n\n                const v = this.vertices.getAt(i);\n\n                v.command = i === 0 ? Commands.move : Commands.curve;\n                v.origin.set(x, y);\n                v.controls.a.set(lx, ly);\n                v.controls.b.set(rx, ry);\n            }\n        }\n\n        super.update();\n        return this;\n    }\n\n    flagReset(dirtyFlag = false): this {\n        this.zzz.flags[Flag.Radius] = dirtyFlag;\n        super.flagReset(dirtyFlag);\n        return this;\n    }\n\n    get radius(): number {\n        return this.#radius.get();\n    }\n    set radius(radius: number) {\n        if (typeof radius === 'number') {\n            if (this.radius !== radius) {\n                this.#radius.set(radius);\n                this.zzz.flags[Flag.Radius] = true;\n                // This is critical, but does it violate encapsulation?\n                // By extending Path, it seems I have to know something of the implementation details.\n                this.zzz.flags[Flag.Length] = true;\n                this.update();\n            }\n        }\n    }\n}\n\nfunction path_attributes(attributes: CircleAttributes): Partial<PathAttributes> {\n    const retval: Partial<PathAttributes> = {\n        attitude: attributes.attitude,\n        position: attributes.position,\n        fill: attributes.fill,\n        fillOpacity: attributes.fillOpacity,\n        stroke: attributes.stroke,\n        strokeOpacity: attributes.strokeOpacity,\n        strokeWidth: attributes.strokeWidth\n    };\n    return retval;\n}\n", "import { Anchor } from '../anchor.js';\nimport { Color } from '../effects/ColorProvider.js';\nimport { Flag } from '../Flag.js';\nimport { IBoard } from '../IBoard.js';\nimport { G20 } from '../math/G20.js';\nimport { Path, PathAttributes } from '../path.js';\nimport { PositionLike } from '../Shape.js';\nimport { HALF_PI, TWO_PI } from '../utils/math.js';\nimport { Commands } from '../utils/path-commands.js';\n\nconst cos = Math.cos, sin = Math.sin;\n\nexport interface EllipseAttributes {\n    id?: string;\n    fill?: Color;\n    fillOpacity?: number;\n    position?: PositionLike;\n    attitude?: G20;\n    rx?: number;\n    ry?: number;\n    stroke?: Color;\n    strokeOpacity?: number;\n    strokeWidth?: number;\n    resolution?: number;\n    visibility?: 'visible' | 'hidden' | 'collapse';\n}\n\nexport class Ellipse extends Path {\n\n    _flagWidth = false;\n    _flagHeight = false;\n\n    _width = 0;\n    _height = 0;\n\n    constructor(board: IBoard, attributes: EllipseAttributes = {}) {\n\n        // At least 2 vertices are required for proper circlage\n        const amount = attributes.resolution ? Math.max(attributes.resolution, 2) : 4;\n        const points = [];\n        for (let i = 0; i < amount; i++) {\n            points.push(new Anchor(G20.vector(0, 0)));\n        }\n\n        super(board, points, true, true, true, path_attribs_from_ellipse_attribs(attributes));\n\n        if (typeof attributes.rx === 'number') {\n            this.width = attributes.rx * 2;\n        }\n        else {\n            this.width = 1;\n        }\n\n        if (typeof attributes.ry === 'number') {\n            this.height = attributes.ry * 2;\n        }\n        else {\n            this.height = 1;\n        }\n\n        this.flagReset(true);\n\n        this.update();\n    }\n\n    static Properties = ['width', 'height'];\n\n    override update(): this {\n        if (this.zzz.flags[Flag.Vertices] || this._flagWidth || this._flagHeight) {\n\n            let length = this.vertices.length;\n\n            if (!this.closed && length > 2) {\n                length -= 1;\n            }\n\n            // Coefficient for approximating circular arcs with Bezier curves\n            const c = (4 / 3) * Math.tan(Math.PI / (this.vertices.length * 2));\n            const radiusX = this._width / 2;\n            const radiusY = this._height / 2;\n\n            for (let i = 0; i < this.vertices.length; i++) {\n                const pct = i / length;\n                const theta = pct * TWO_PI;\n\n                const x = radiusX * cos(theta);\n                const y = radiusY * sin(theta);\n\n                const lx = radiusX * c * cos(theta - HALF_PI);\n                const ly = radiusY * c * sin(theta - HALF_PI);\n\n                const rx = radiusX * c * cos(theta + HALF_PI);\n                const ry = radiusY * c * sin(theta + HALF_PI);\n\n                const v = this.vertices.getAt(i);\n\n                v.command = i === 0 ? Commands.move : Commands.curve;\n                v.origin.set(x, y);\n                v.controls.a.set(lx, ly);\n                v.controls.b.set(rx, ry);\n            }\n        }\n\n        super.update();\n        return this;\n\n    }\n\n    override flagReset(dirtyFlag = false): this {\n        this._flagWidth = dirtyFlag;\n        this._flagHeight = dirtyFlag;\n        super.flagReset(dirtyFlag);\n        return this;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(v) {\n        this._height = v;\n        this._flagHeight = true;\n    }\n    get width() {\n        return this._width;\n    }\n    set width(v) {\n        this._width = v;\n        this._flagWidth = true;\n    }\n}\n\nfunction path_attribs_from_ellipse_attribs(attributes: EllipseAttributes): Partial<PathAttributes> {\n    const retval: Partial<PathAttributes> = {\n        id: attributes.id,\n        fill: attributes.fill,\n        fillOpacity: attributes.fillOpacity,\n        attitude: attributes.attitude,\n        position: attributes.position,\n        stroke: attributes.stroke,\n        strokeOpacity: attributes.strokeOpacity,\n        strokeWidth: attributes.strokeWidth,\n        visibility: attributes.visibility\n    };\n    return retval;\n}\n", "import { Anchor } from '../anchor';\nimport { Color } from '../effects/ColorProvider';\nimport { IBoard } from '../IBoard';\nimport { Path, PathAttributes } from '../path';\nimport { PositionLike, position_from_like } from '../Shape';\n\nexport interface LineAttributes {\n    id?: string,\n    stroke?: Color;\n    strokeOpacity?: number;\n    strokeWidth?: number;\n    visibility?: 'visible' | 'hidden' | 'collapse';\n}\n\nexport interface LineProperties {\n    id?: string,\n    stroke?: Color;\n    strokeOpacity?: number;\n    strokeWidth?: number;\n    visibility?: 'visible' | 'hidden' | 'collapse';\n}\n\nexport class Line extends Path implements LineProperties {\n    constructor(board: IBoard, point1: PositionLike, point2: PositionLike, attributes: LineAttributes = {}) {\n        super(board, [\n            new Anchor(position_from_like(point1), 'M'),\n            new Anchor(position_from_like(point2), 'L')],\n            false,\n            false,\n            false,\n            path_attribs_from_line_attribs(attributes));\n    }\n    get point1(): Anchor {\n        return this.vertices.getAt(0);\n    }\n    set point1(point1: Anchor) {\n        if (point1 instanceof Anchor) {\n            this.vertices.splice(0, 1, point1);\n        }\n        else {\n            const error = new Error('Line.point1 argument is not an Anchor.');\n            // eslint-disable-next-line no-console\n            console.warn(error.name, error.message);\n        }\n    }\n    get point2(): Anchor {\n        return this.vertices.getAt(1);\n    }\n    set point2(point2: Anchor) {\n        if (point2 instanceof Anchor) {\n            this.vertices.splice(1, 1, point2);\n        }\n        else {\n            const error = new Error('Line.point2 argument is not an Anchor.');\n            // eslint-disable-next-line no-console\n            console.warn(error.name, error.message);\n        }\n    }\n}\n\nfunction path_attribs_from_line_attribs(attributes: LineAttributes): Partial<PathAttributes> {\n    const retval: Partial<PathAttributes> = {\n        id: attributes.id,\n        visibility: attributes.visibility,\n        stroke: attributes.stroke,\n        strokeOpacity: attributes.strokeOpacity,\n        strokeWidth: attributes.strokeWidth\n    };\n    return retval;\n}\n", "import { Anchor } from \"../anchor\";\nimport { Color } from \"../effects/ColorProvider\";\nimport { IBoard } from \"../IBoard\";\nimport { Path, PathAttributes } from \"../path\";\nimport { PositionLike, position_from_like } from \"../Shape\";\n\nexport interface PolygonAttributes {\n    id: string;\n    opacity: number;\n    fill: Color,\n    fillOpacity: number,\n    stroke: Color,\n    strokeOpacity: number,\n    strokeWidth: number\n}\n\nexport class Polygon extends Path implements PolygonAttributes {\n    constructor(board: IBoard, points: PositionLike[] = [], attributes: Partial<PolygonAttributes> = {}) {\n\n        const vertices = points\n            .map((point) => position_from_like(point))\n            .map((position, index) => new Anchor(position, index === 0 ? 'M' : 'L'));\n\n        super(board, vertices, true, false, false, path_attributes(attributes));\n\n        this.flagReset(true);\n        this.update();\n    }\n}\n\nfunction path_attributes(attributes: Partial<PolygonAttributes>): Partial<PathAttributes> {\n    const retval: Partial<PathAttributes> = {\n        id: attributes.id,\n        opacity: attributes.opacity,\n        fill: attributes.fill,\n        fillOpacity: attributes.fillOpacity,\n        stroke: attributes.stroke,\n        strokeOpacity: attributes.strokeOpacity,\n        strokeWidth: attributes.strokeWidth\n    };\n    return retval;\n}\n", "import { Anchor } from '../anchor';\nimport { Collection } from '../collection';\nimport { Color } from '../effects/ColorProvider';\nimport { Flag } from '../Flag';\nimport { IBoard } from '../IBoard';\nimport { G20 } from '../math/G20';\nimport { Path, PathAttributes } from '../path';\nimport { Disposable, dispose } from '../reactive/Disposable';\nimport { variable } from '../reactive/variable';\nimport { PositionLike } from '../Shape';\n\nexport interface RectangleAPI<X> {\n    id: string;\n    opacity: number;\n    position: X;\n    attitude: G20;\n    width: number;\n    height: number;\n    visibility: 'visible' | 'hidden' | 'collapse';\n    fill: Color;\n    fillOpacity: number;\n    stroke: Color;\n    strokeOpacity: number;\n    strokeWidth: number;\n}\n\nexport interface RectangleAttributes extends Partial<RectangleAPI<PositionLike>> {\n    id?: string;\n    opacity?: number;\n    position?: PositionLike;\n    attitude?: G20;\n    width?: number;\n    height?: number;\n    visibility?: 'visible' | 'hidden' | 'collapse';\n}\n\nexport interface RectangleProperties extends RectangleAPI<G20> {\n    id: string;\n    opacity: number;\n    position: G20;\n    attitude: G20;\n    width: number;\n    height: number;\n    visibility: 'visible' | 'hidden' | 'collapse';\n}\n\nexport class Rectangle extends Path implements RectangleProperties, Disposable {\n\n    readonly #disposables: Disposable[] = [];\n\n    readonly #width = variable(1);\n    readonly #height = variable(1);\n\n    readonly #origin = G20.zero.clone();\n\n    constructor(board: IBoard, attributes: RectangleAttributes = {}) {\n\n        const points = [\n            new Anchor(G20.vector(0, 0), 'M'),\n            new Anchor(G20.vector(0, 0), 'L'),\n            new Anchor(G20.vector(0, 0), 'L'),\n            new Anchor(G20.vector(0, 0), 'L')\n        ];\n\n        super(board, points, true, false, true, path_options_from_rectangle_options(attributes));\n\n        this.zzz.width$ = this.#width.asObservable();\n        this.zzz.height$ = this.#height.asObservable();\n\n        if (typeof attributes.width === 'number') {\n            this.width = attributes.width;\n        }\n\n        if (typeof attributes.height === 'number') {\n            this.height = attributes.height;\n        }\n\n        this.#disposables.push(this.#origin.change$.subscribe(() => {\n            this.zzz.flags[Flag.Vertices] = true;\n        }));\n\n        this.#disposables.push(this.zzz.width$.subscribe((width) => {\n            update_rectangle_vertices(width, this.height, this.origin, this.closed, this.vertices);\n            // Nothing will happen if the Flag.Vertices is not set.\n            this.zzz.flags[Flag.Vertices] = true;\n            this.zzz.flags[Flag.Matrix] = true;\n            super.update();\n        }));\n\n        this.#disposables.push(this.zzz.height$.subscribe((height) => {\n            update_rectangle_vertices(this.width, height, this.origin, this.closed, this.vertices);\n            // Nothing will happen if the Flag.Vertices is not set.\n            this.zzz.flags[Flag.Vertices] = true;\n            this.zzz.flags[Flag.Matrix] = true;\n            super.update();\n        }));\n\n        this.#disposables.push(this.#origin.change$.subscribe((origin) => {\n            update_rectangle_vertices(this.width, this.height, origin, this.closed, this.vertices);\n            // Nothing will happen if the Flag.Vertices is not set.\n            this.zzz.flags[Flag.Vertices] = true;\n            this.zzz.flags[Flag.Matrix] = true;\n            super.update();\n        }));\n\n        this.flagReset(true);\n        this.update();\n    }\n\n    override dispose(): void {\n        dispose(this.#disposables);\n        super.dispose();\n    }\n\n    override update(): this {\n        if (this.zzz.flags[Flag.Vertices] || this.zzz.flags[Flag.Width] || this.zzz.flags[Flag.Height]) {\n            update_rectangle_vertices(this.width, this.height, this.origin, this.closed, this.vertices);\n        }\n\n        super.update();\n\n        return this;\n    }\n\n    override flagReset(dirtyFlag = false): this {\n        this.zzz.flags[Flag.Width] = dirtyFlag;\n        this.zzz.flags[Flag.Height] = dirtyFlag;\n        super.flagReset(dirtyFlag);\n        return this;\n    }\n    get height(): number {\n        return this.#height.get();\n    }\n    set height(height: number) {\n        if (typeof height === 'number') {\n            this.#height.set(height);\n            this.zzz.flags[Flag.Height] = true;\n        }\n    }\n    get origin(): G20 {\n        return this.#origin;\n    }\n    set origin(origin: G20) {\n        this.#origin.copyVector(origin);\n        this.zzz.flags[Flag.Vertices] = true;\n    }\n    get width(): number {\n        return this.#width.get();\n    }\n    set width(width: number) {\n        if (typeof width === 'number') {\n            this.#width.set(width);\n            this.zzz.flags[Flag.Width] = true;\n        }\n    }\n}\n\nfunction path_options_from_rectangle_options(attributes: RectangleAttributes): Partial<PathAttributes> {\n    const retval: Partial<PathAttributes> = {\n        id: attributes.id,\n        attitude: attributes.attitude,\n        opacity: attributes.opacity,\n        position: attributes.position,\n        visibility: attributes.visibility,\n        fill: attributes.fill,\n        fillOpacity: attributes.fillOpacity,\n        stroke: attributes.stroke,\n        strokeOpacity: attributes.strokeOpacity,\n        strokeWidth: attributes.strokeWidth\n    };\n    return retval;\n}\n\nfunction update_rectangle_vertices(sizeX: number, sizeY: number, origin: G20, closed: boolean, vertices: Collection<Anchor>): void {\n\n    const x = sizeX / 2;\n    const y = sizeY / 2;\n\n    if (!closed && vertices.length === 4) {\n        vertices.push(new Anchor(G20.vector(0, 0)));\n    }\n\n    vertices.getAt(0).origin.set(-x, -y).sub(origin);\n    vertices.getAt(1).origin.set(x, -y).sub(origin);\n    vertices.getAt(2).origin.set(x, y).sub(origin);\n    vertices.getAt(3).origin.set(-x, y).sub(origin);\n\n    const anchor = vertices.getAt(4);\n    if (anchor) {\n        anchor.origin.set(-x, -y).sub(origin);\n        anchor.command = 'L';\n    }\n}\n\n", "import { Color, is_color_provider, serialize_color } from './effects/ColorProvider';\nimport { ElementBase } from './element';\nimport { Flag } from './Flag';\nimport { IBoard } from './IBoard';\nimport { get_dashes_offset, set_dashes_offset } from './path';\nimport { Disposable } from './reactive/Disposable';\nimport { Observable } from './reactive/Observable';\nimport { variable } from './reactive/variable';\nimport { get_svg_element_defs, set_defs_dirty_flag, svg, SVGAttributes, transform_value_of_matrix } from './renderers/SVGView';\nimport { PositionLike, Shape, ShapeAttributes } from './Shape';\n\nconst min = Math.min, max = Math.max;\n\nexport type TextDecoration = 'none' | 'underline' | 'overline' | 'line-through';\n\nexport interface TextAttributes {\n    anchor: 'start' | 'middle' | 'end';\n    baseline: 'auto' | 'text-bottom' | 'alphabetic' | 'ideographic' | 'middle' | 'central' | 'mathematical' | 'hanging' | 'text-top';\n    decoration: TextDecoration[];\n    direction: 'ltr' | 'rtl';\n    dx: number | string;\n    dy: number | string;\n    fontFamily: string;\n    fill: Color;\n    id: string;\n    strokeWidth: number;\n    opacity: number;\n    position: PositionLike;\n    fontSize: number;\n    stroke: Color;\n    fontStyle: 'normal' | 'italic' | 'oblique';\n    value: string;\n    visibility: 'visible' | 'hidden' | 'collapse';\n    fontWeight: 'normal' | 'bold' | 'bolder' | 'lighter' | number;\n}\n\nexport interface TextProperties {\n    anchor: 'start' | 'middle' | 'end';\n    baseline: 'auto' | 'text-bottom' | 'alphabetic' | 'ideographic' | 'middle' | 'central' | 'mathematical' | 'hanging' | 'text-top';\n    decoration: TextDecoration[];\n    direction: 'ltr' | 'rtl';\n    dx: number | string;\n    dy: number | string;\n    fontFamily: string;\n    fill: Color;\n    id: string;\n    strokeWidth: number;\n    opacity: number;\n    fontSize: number;\n    stroke: Color;\n    fontStyle: 'normal' | 'italic' | 'oblique';\n    value: string;\n    visibility: 'visible' | 'hidden' | 'collapse';\n    fontWeight: 'normal' | 'bold' | 'bolder' | 'lighter' | number;\n}\n\nexport class Text extends Shape implements TextProperties {\n    automatic: boolean;\n    beginning: number;\n    cap: 'butt' | 'round' | 'square';\n    closed: boolean;\n    curved: boolean;\n    ending: number;\n    join: 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round';\n    length: number;\n    miter: number;\n\n    readonly #textContent = variable('');\n\n    readonly #fontFamily = variable('sans-serif');\n    readonly fontFamily$: Observable<string> = this.#fontFamily.asObservable();\n\n    readonly #fontSize = variable(13);\n    readonly fontSize$: Observable<number> = this.#fontSize.asObservable();\n\n    readonly #anchor = variable('start' as 'start' | 'middle' | 'end');\n\n    readonly #baseline = variable('auto' as 'auto' | 'text-bottom' | 'alphabetic' | 'ideographic' | 'middle' | 'central' | 'mathematical' | 'hanging' | 'text-top');\n\n    readonly #fontStyle = variable('normal' as 'normal' | 'italic' | 'oblique');\n\n    readonly #fontWeight = variable('normal' as 'normal' | 'bold' | 'bolder' | 'lighter' | number);\n\n    readonly #decoration = variable(['none' as TextDecoration]);\n\n    /**\n     * determine what direction the text should run.\n     * Possibly values are `'ltr'` for left-to-right and `'rtl'` for right-to-left. Defaults to `'ltr'`.\n     */\n    readonly #direction = variable('ltr' as 'ltr' | 'rtl');\n\n    readonly #dx = variable(0 as number | string);\n    readonly #dy = variable(0 as number | string);\n\n    /**\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n     */\n    readonly #fill = variable('#000000' as Color);\n    #fill_change: Disposable | null = null;\n\n    /**\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value} for more information on CSS's colors as `String`.\n     */\n    readonly #stroke = variable('none' as Color);\n    #stroke_change: Disposable | null = null;\n\n    readonly #strokeWidth = variable(1);\n\n    #dashes: number[] | null = null;\n\n    constructor(board: IBoard, value: string, attributes: Partial<TextAttributes> = {}) {\n\n        super(board, shape_attributes_from_text_attributes(attributes));\n\n        this.zzz.anchor$ = this.#anchor.asObservable();\n        this.zzz.baseline$ = this.#baseline.asObservable();\n        this.zzz.decoration$ = this.#decoration.asObservable();\n        this.zzz.direction$ = this.#direction.asObservable();\n        this.zzz.dx$ = this.#dx.asObservable();\n        this.zzz.dy$ = this.#dy.asObservable();\n        this.zzz.fill$ = this.#fill.asObservable();\n        this.zzz.fontStyle$ = this.#fontStyle.asObservable();\n        this.zzz.fontWeight$ = this.#fontWeight.asObservable();\n        this.zzz.stroke$ = this.#stroke.asObservable();\n        this.zzz.strokeWidth$ = this.#strokeWidth.asObservable();\n        this.zzz.textContent$ = this.#textContent.asObservable();\n\n        this.zzz.flags[Flag.Stroke] = true;\n\n        this.value = value;\n\n        /**\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more information on the SVG stroke-dasharray attribute.\n         */\n        this.dashes = [];\n\n        set_dashes_offset(this.dashes, 0);\n\n        if (attributes.anchor) {\n            this.anchor = attributes.anchor;\n        }\n        if (attributes.baseline) {\n            this.baseline = attributes.baseline;\n        }\n        if (attributes.decoration) {\n            this.decoration = attributes.decoration;\n        }\n        if (attributes.direction) {\n            this.direction = attributes.direction;\n        }\n        if (typeof attributes.dx === 'number' || typeof attributes.dx === 'string') {\n            this.dx = attributes.dx;\n        }\n        if (typeof attributes.dy === 'number' || typeof attributes.dy === 'string') {\n            this.dy = attributes.dy;\n        }\n        if (attributes.fontFamily) {\n            this.fontFamily = attributes.fontFamily;\n        }\n        if (attributes.fill) {\n            this.fill = attributes.fill;\n        }\n        if (attributes.strokeWidth) {\n            this.strokeWidth = attributes.strokeWidth;\n        }\n        if (attributes.opacity) {\n            this.opacity = attributes.opacity;\n        }\n        if (attributes.fontSize) {\n            this.fontSize = attributes.fontSize;\n        }\n        if (attributes.stroke) {\n            this.stroke = attributes.stroke;\n        }\n        if (attributes.fontStyle) {\n            this.fontStyle = attributes.fontStyle;\n        }\n        if (attributes.value) {\n            this.value = attributes.value;\n        }\n        if (typeof attributes.visibility === 'string') {\n            this.visibility = attributes.visibility;\n        }\n        if (attributes.fontWeight) {\n            this.fontWeight = attributes.fontWeight;\n        }\n\n        this.flagReset(true);\n    }\n\n    render(domElement: HTMLElement | SVGElement, svgElement: SVGElement): void {\n\n        this.update();\n\n        // The styles that will be applied to an SVG\n        const changed: SVGAttributes = {};\n\n        const flagMatrix = this.matrix.manual || this.zzz.flags[Flag.Matrix];\n\n        if (flagMatrix) {\n            changed.transform = transform_value_of_matrix(this.matrix);\n        }\n\n        if (this.zzz.flags[Flag.Size]) {\n            changed['font-size'] = `${this.fontSize}`;\n        }\n        {\n            const fill = this.fill;\n            if (fill) {\n                if (is_color_provider(fill)) {\n                    this.zzz.hasFillEffect = true;\n                    fill.render(svgElement);\n                }\n                else {\n                    changed.fill = serialize_color(fill);\n                    if (this.zzz.hasFillEffect) {\n                        set_defs_dirty_flag(get_svg_element_defs(svgElement), true);\n                        delete this.zzz.hasFillEffect;\n                    }\n                }\n            }\n        }\n        {\n            const stroke = this.stroke;\n            if (stroke) {\n                if (is_color_provider(stroke)) {\n                    this.zzz.hasStrokeEffect = true;\n                    stroke.render(svgElement);\n                }\n                else {\n                    changed.stroke = serialize_color(stroke);\n                    if (this.zzz.hasStrokeEffect) {\n                        set_defs_dirty_flag(get_svg_element_defs(svgElement), true);\n                        delete this.zzz.hasFillEffect;\n                    }\n                }\n            }\n        }\n        if (this.zzz.flags[Flag.ClassName]) {\n            changed['class'] = this.classList.join(' ');\n        }\n        if (this.dashes && this.dashes.length > 0) {\n            changed['stroke-dasharray'] = this.dashes.join(' ');\n            changed['stroke-dashoffset'] = `${get_dashes_offset(this.dashes) || 0}`;\n        }\n\n        if (this.zzz.elem) {\n            svg.setAttributes(this.zzz.elem, changed);\n        }\n        else {\n            changed.id = this.id;\n            this.zzz.elem = svg.createElement('text', changed);\n            domElement.appendChild(this.zzz.elem);\n\n            this.zzz.disposables.push(this.matrix.change$.subscribe((matrix) => {\n                const change: SVGAttributes = {};\n                change.transform = transform_value_of_matrix(matrix);\n                svg.setAttributes(this.zzz.elem, change);\n            }));\n\n            // anchor\n            this.zzz.disposables.push(this.zzz.anchor$.subscribe((anchor) => {\n                switch (anchor) {\n                    case 'start': {\n                        svg.removeAttributes(this.zzz.elem, { 'text-anchor': anchor });\n                        break;\n                    }\n                    case 'middle':\n                    case 'end': {\n                        svg.setAttributes(this.zzz.elem, { 'text-anchor': anchor });\n                        break;\n                    }\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // decoration\n            this.zzz.disposables.push(this.zzz.decoration$.subscribe((decoration) => {\n                const change: SVGAttributes = {};\n                change['text-decoration'] = decoration.join(' ');\n                svg.setAttributes(this.zzz.elem, change);\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // direction\n            this.zzz.disposables.push(this.zzz.direction$.subscribe((direction) => {\n                if (direction === 'rtl') {\n                    svg.setAttributes(this.zzz.elem, { direction });\n                }\n                else {\n                    svg.removeAttributes(this.zzz.elem, { direction });\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // dominant-baseline\n            this.zzz.disposables.push(this.zzz.baseline$.subscribe((baseline) => {\n                switch (baseline) {\n                    case 'auto': {\n                        svg.removeAttributes(this.zzz.elem, { 'dominant-baseline': baseline });\n                        break;\n                    }\n                    default: {\n                        svg.setAttributes(this.zzz.elem, { 'dominant-baseline': baseline });\n                        break;\n                    }\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // dx\n            this.zzz.disposables.push(this.zzz.dx$.subscribe((dx) => {\n                if (typeof dx === 'number' && dx === 0) {\n                    svg.removeAttributes(this.zzz.elem, { dx: \"\" });\n                }\n                else {\n                    svg.setAttributes(this.zzz.elem, { dx: `${dx}` });\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // dy\n            this.zzz.disposables.push(this.zzz.dy$.subscribe((dy) => {\n                if (typeof dy === 'number' && dy === 0) {\n                    svg.removeAttributes(this.zzz.elem, { dy: \"\" });\n                }\n                else {\n                    svg.setAttributes(this.zzz.elem, { dy: `${dy}` });\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // font-family\n            this.zzz.disposables.push(this.fontFamily$.subscribe((family) => {\n                svg.setAttributes(this.zzz.elem, { 'font-family': family });\n            }));\n\n            // font-size\n            this.zzz.disposables.push(this.fontSize$.subscribe((size) => {\n                svg.setAttributes(this.zzz.elem, { 'font-size': `${size}` });\n            }));\n\n            // font-style\n            this.zzz.disposables.push(this.zzz.fontStyle$.subscribe((fontStyle) => {\n                const change: SVGAttributes = { 'font-style': fontStyle };\n                if (change['font-style'] === 'normal') {\n                    svg.removeAttributes(this.zzz.elem, change);\n                }\n                else {\n                    svg.setAttributes(this.zzz.elem, change);\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // font-weight\n            this.zzz.disposables.push(this.zzz.fontWeight$.subscribe((fontWeight) => {\n                const change: SVGAttributes = { 'font-weight': `${fontWeight}` };\n                if (change['font-weight'] === 'normal') {\n                    svg.removeAttributes(this.zzz.elem, change);\n                }\n                else {\n                    svg.setAttributes(this.zzz.elem, change);\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // opacity\n            this.zzz.disposables.push(this.zzz.opacity$.subscribe((opacity) => {\n                const change: SVGAttributes = { opacity: `${opacity}` };\n                if (opacity === 1) {\n                    svg.removeAttributes(this.zzz.elem, change);\n                }\n                else {\n                    svg.setAttributes(this.zzz.elem, change);\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // stroke-width\n            this.zzz.disposables.push(this.zzz.strokeWidth$.subscribe((strokeWidth) => {\n                const change: SVGAttributes = {};\n                change['stroke-width'] = `${strokeWidth}`;\n                svg.setAttributes(this.zzz.elem, change);\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n\n            // textContent\n            this.zzz.disposables.push(this.zzz.textContent$.subscribe((textContent) => {\n                this.zzz.elem.textContent = textContent;\n            }));\n\n            // visibility\n            this.zzz.disposables.push(this.zzz.visibility$.subscribe((visibility) => {\n                switch (visibility) {\n                    case 'visible': {\n                        const change: SVGAttributes = { visibility };\n                        svg.removeAttributes(this.zzz.elem, change);\n                        break;\n                    }\n                    default: {\n                        const change: SVGAttributes = { visibility };\n                        svg.setAttributes(this.zzz.elem, change);\n                        break;\n                    }\n                }\n                return function () {\n                    // No cleanup to be done.\n                };\n            }));\n        }\n\n        if (this.zzz.flags[Flag.ClipFlag]) {\n            const clip = svg.getClip(this, svgElement);\n            const elem = this.zzz.elem;\n\n            if (this.zzz.clip) {\n                elem.removeAttribute('id');\n                clip.setAttribute('id', this.id);\n                clip.appendChild(elem);\n            }\n            else {\n                clip.removeAttribute('id');\n                elem.setAttribute('id', this.id);\n                if (this.parent instanceof ElementBase) {\n                    this.parent.zzz.elem.appendChild(elem); // TODO: should be insertBefore\n                }\n            }\n        }\n\n        // Commented two-way functionality of clips / masks with groups and\n        // polygons. Uncomment when this bug is fixed:\n        // https://code.google.com/p/chromium/issues/detail?id=370951\n\n        if (this.zzz.flags[Flag.ClipPath]) {\n            if (this.clipPath) {\n                this.clipPath.render(domElement, svgElement);\n                this.zzz.elem.setAttribute('clip-path', 'url(#' + this.clipPath.id + ')');\n            }\n            else {\n                this.zzz.elem.removeAttribute('clip-path');\n            }\n        }\n\n        this.flagReset();\n    }\n\n    static Measure(text: Text): { width: number; height: number } {\n        // 0.6 is approximate aspect ratio of a typeface's character width to height.\n        const width = text.value.length * text.fontSize * 0.6;\n        const height = text.fontSize;\n        return { width, height };\n    }\n\n    /**\n     * Convenience method to set fill to `none`.\n     */\n    noFill() {\n        this.fill = 'none';\n        return this;\n    }\n\n    /**\n     * Convenience method to set stroke to `none`.\n     */\n    noStroke() {\n        this.stroke = 'none';\n        return this;\n    }\n\n    getBoundingBox(shallow = false): { top: number; left: number; right: number; bottom: number; } {\n\n        let left: number;\n        let right: number;\n        let top: number;\n        let bottom: number;\n\n        this.update();\n\n        const matrix = shallow ? this.matrix : this.worldMatrix;\n\n        const { width, height } = Text.Measure(this);\n        const border = (this.strokeWidth || 0) / 2;\n\n        switch (this.anchor) {\n            case 'start': {\n                left = - border;\n                right = width + border;\n                break;\n            }\n            case 'middle': {\n                left = - (width / 2 + border);\n                right = width / 2 + border;\n                break;\n            }\n            case 'end': {\n                left = - (width + border);\n                right = border;\n                break;\n            }\n        }\n\n        switch (this.baseline) {\n            case 'middle':\n                top = - (height / 2 + border);\n                bottom = height / 2 + border;\n                break;\n            default:\n                top = - (height + border);\n                bottom = border;\n        }\n\n        const [ax, ay] = matrix.multiply_vector(left, top);\n        const [bx, by] = matrix.multiply_vector(left, bottom);\n        const [cx, cy] = matrix.multiply_vector(right, top);\n        const [dx, dy] = matrix.multiply_vector(right, bottom);\n\n        top = min(ay, by, cy, dy);\n        left = min(ax, bx, cx, dx);\n        right = max(ax, bx, cx, dx);\n        bottom = max(ay, by, cy, dy);\n\n        return { top, left, right, bottom };\n    }\n\n    hasBoundingBox(): boolean {\n        return true;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    subdivide(limit: number): this {\n        throw new Error('Method not implemented.');\n    }\n\n    override flagReset(dirtyFlag = false) {\n        super.flagReset(dirtyFlag);\n        this.zzz.flags[Flag.Size] = dirtyFlag;\n        this.zzz.flags[Flag.Fill] = dirtyFlag;\n        this.zzz.flags[Flag.Stroke] = dirtyFlag;\n        this.zzz.flags[Flag.ClipFlag] = dirtyFlag;\n        this.zzz.flags[Flag.ClassName] = dirtyFlag;\n        return this;\n    }\n    get anchor(): 'start' | 'middle' | 'end' {\n        return this.#anchor.get();\n    }\n    set anchor(anchor: 'start' | 'middle' | 'end') {\n        if (typeof anchor === 'string') {\n            switch (anchor) {\n                case 'start':\n                case 'middle':\n                case 'end': {\n                    this.#anchor.set(anchor);\n                    break;\n                }\n            }\n        }\n    }\n    get baseline(): 'auto' | 'text-bottom' | 'alphabetic' | 'ideographic' | 'middle' | 'central' | 'mathematical' | 'hanging' | 'text-top' {\n        return this.#baseline.get();\n    }\n    set baseline(baseline: 'auto' | 'text-bottom' | 'alphabetic' | 'ideographic' | 'middle' | 'central' | 'mathematical' | 'hanging' | 'text-top') {\n        if (typeof baseline === 'string') {\n            switch (baseline) {\n                case 'alphabetic':\n                case 'auto':\n                case 'central':\n                case 'hanging':\n                case 'ideographic':\n                case 'mathematical':\n                case 'middle':\n                case 'text-bottom':\n                case 'text-top': {\n                    this.#baseline.set(baseline);\n                }\n            }\n        }\n    }\n    get dashes() {\n        return this.#dashes;\n    }\n    set dashes(v) {\n        if (typeof get_dashes_offset(v) !== 'number') {\n            set_dashes_offset(v, (this.dashes && get_dashes_offset(this.#dashes)) || 0);\n        }\n        this.#dashes = v;\n    }\n    get decoration(): TextDecoration[] {\n        return this.#decoration.get();\n    }\n    set decoration(v: TextDecoration[]) {\n        this.#decoration.set(v);\n    }\n    get direction(): 'ltr' | 'rtl' {\n        return this.#direction.get();\n    }\n    set direction(direction: 'ltr' | 'rtl') {\n        if (typeof direction === 'string') {\n            if (direction === 'ltr' || direction === 'rtl') {\n                if (this.direction !== direction) {\n                    this.#direction.set(direction);\n                }\n            }\n        }\n    }\n    get dx(): number | string {\n        return this.#dx.get();\n    }\n    set dx(dx: number | string) {\n        if (typeof dx === 'number' || typeof dx === 'string') {\n            if (this.dx !== dx) {\n                this.#dx.set(dx);\n            }\n        }\n    }\n    get dy(): number | string {\n        return this.#dy.get();\n    }\n    set dy(dy: number | string) {\n        if (typeof dy === 'number' || typeof dy === 'string') {\n            if (this.dy !== dy) {\n                this.#dy.set(dy);\n            }\n        }\n    }\n    get fontFamily(): string {\n        return this.#fontFamily.get();\n    }\n    set fontFamily(family: string) {\n        if (typeof family === 'string') {\n            if (this.fontFamily !== family) {\n                this.#fontFamily.set(family);\n            }\n        }\n    }\n    get fill(): Color {\n        return this.#fill.get();\n    }\n    set fill(fill) {\n        if (this.#fill_change) {\n            this.#fill_change.dispose();\n            this.#fill_change = null;\n        }\n        this.#fill.set(fill);\n        this.zzz.flags[Flag.Fill] = true;\n        if (is_color_provider(this.fill)) {\n            this.#fill_change = this.fill.change$.subscribe(() => {\n                this.zzz.flags[Flag.Fill] = true;\n            });\n        }\n    }\n    get strokeWidth(): number {\n        return this.#strokeWidth.get();\n    }\n    set strokeWidth(strokeWidth: number) {\n        if (typeof strokeWidth === 'number') {\n            if (this.strokeWidth !== strokeWidth) {\n                this.#strokeWidth.set(strokeWidth);\n            }\n        }\n    }\n    get fontSize(): number {\n        return this.#fontSize.get();\n    }\n    set fontSize(size: number) {\n        if (typeof size === 'number') {\n            if (this.fontSize !== size) {\n                this.#fontSize.set(size);\n                this.zzz.flags[Flag.Size] = true;\n            }\n        }\n    }\n    get stroke(): Color {\n        return this.#stroke.get();\n    }\n    set stroke(stroke: Color) {\n        if (this.#stroke_change) {\n            this.#stroke_change.dispose();\n            this.#stroke_change = null;\n        }\n        this.#stroke.set(stroke);\n        this.zzz.flags[Flag.Stroke] = true;\n        if (is_color_provider(this.stroke)) {\n            this.#stroke_change = this.stroke.change$.subscribe(() => {\n                this.zzz.flags[Flag.Stroke] = true;\n            });\n        }\n    }\n    get fontStyle(): 'normal' | 'italic' | 'oblique' {\n        return this.#fontStyle.get();\n    }\n    set fontStyle(fontStyle: 'normal' | 'italic' | 'oblique') {\n        if (typeof fontStyle === 'string') {\n            this.#fontStyle.set(fontStyle);\n        }\n    }\n    get value(): string {\n        return this.#textContent.get();\n    }\n    set value(value: string) {\n        if (typeof value === 'string') {\n            if (this.value !== value) {\n                this.#textContent.set(value);\n            }\n        }\n    }\n    get fontWeight() {\n        return this.#fontWeight.get();\n    }\n    set fontWeight(fontWeight) {\n        this.#fontWeight.set(fontWeight);\n    }\n}\n\nfunction shape_attributes_from_text_attributes(attributes: Partial<TextAttributes>): Partial<ShapeAttributes> {\n    const retval: Partial<ShapeAttributes> = {\n        id: attributes.id,\n        compensate: true,\n        position: attributes.position\n    };\n    return retval;\n}\n", "import { root } from './root.js';\n/**\n * In the browser this is simply the Date constructor.\n */\nexport const dateTime = ((root.performance && root.performance.now) ? root.performance : Date);\n", "import { debounceTime, fromEvent, Subscription } from 'rxjs';\nimport { Anchor } from './anchor';\nimport { Constants } from './constants';\nimport { Color } from './effects/ColorProvider';\nimport { Group } from './group';\nimport { IBoard } from './IBoard';\nimport { G20 } from './math/G20';\nimport { Path } from './path';\nimport { Disposable } from './reactive/Disposable';\nimport { variable } from './reactive/variable';\nimport { SVGViewFactory } from './renderers/SVGViewFactory';\nimport { View } from './renderers/View';\nimport { ViewFactory } from './renderers/ViewFactory';\nimport { PositionLike, Shape } from './Shape';\nimport { ArcSegment } from './shapes/ArcSegment';\nimport { Arrow, ArrowAttributes } from './shapes/Arrow';\nimport { Circle, CircleAttributes } from './shapes/Circle';\nimport { Ellipse, EllipseAttributes } from './shapes/Ellipse';\nimport { Line, LineAttributes } from './shapes/Line';\nimport { Polygon, PolygonAttributes } from './shapes/Polygon';\nimport { Rectangle, RectangleAttributes } from './shapes/Rectangle';\nimport { Text, TextAttributes } from './text';\nimport { dateTime } from './utils/performance';\n\nexport interface BoardAttributes {\n    boundingBox?: { left: number, top: number, right: number, bottom: number };\n    resizeTo?: Element;\n    scene?: Group;\n    size?: { width: number; height: number };\n    viewFactory?: ViewFactory;\n}\n\nexport interface PointAttributes {\n    id?: string;\n    fill?: Color;\n    fillOpacity?: number;\n    stroke?: Color;\n    strokeOpacity?: number;\n    strokeWidth?: number;\n    visibility?: 'visible' | 'hidden' | 'collapse';\n}\n\nexport class Board implements IBoard {\n\n    readonly #view: View;\n    #view_resize: Disposable | null = null;\n\n    /**\n     * A wrapper group that is used to transform the scene from user coordinates to pixels.\n     */\n    readonly #viewBox: Group;\n    /**\n     * \n     */\n    readonly #scene: Group;\n\n    /**\n     * The width of the instance's dom element.\n     */\n    width = 0;\n\n    /**\n     * The height of the instance's dom element.\n     */\n    height = 0;\n\n    readonly #size = variable({ width: this.width, height: this.height });\n    readonly size$ = this.#size.asObservable();\n\n    /**\n     * \n     */\n    ratio: number | undefined = void 0;\n\n    /**\n     * A helper to handle sizing.\n     */\n    readonly #fitter: Fitter;\n\n    readonly #frameCount = variable(0);\n    readonly frameCount$ = this.#frameCount.asObservable();\n\n    // Used to compute the elapsed time between frames.\n    #curr_now: number | null = null;\n    #prev_now: number | null = null;\n\n    readonly #boundingBox: { left: number, top: number, right: number, bottom: number } = { left: -5, top: 5, right: 5, bottom: -5 };\n    readonly goofy: boolean;\n\n    constructor(elementOrId: string | HTMLElement, options: BoardAttributes = {}) {\n\n        const container = get_container(elementOrId);\n        const container_id = get_container_id(elementOrId);\n\n        this.#viewBox = new Group(this, [], { id: `${container_id}-viewbox` });\n\n        if (typeof options.boundingBox === 'object') {\n            const left = options.boundingBox.left;\n            const top = options.boundingBox.top;\n            const right = options.boundingBox.right;\n            const bottom = options.boundingBox.bottom;\n            this.#boundingBox.left = left;\n            this.#boundingBox.top = top;\n            this.#boundingBox.right = right;\n            this.#boundingBox.bottom = bottom;\n            this.goofy = bottom > top;\n        }\n        else {\n            this.goofy = false;\n        }\n\n        if (options.scene instanceof Group) {\n            this.#scene = options.scene;\n        }\n        else {\n            this.#scene = new Group(this, [], { id: `${container_id}-scene` });\n        }\n        this.#viewBox.add(this.#scene);\n\n        if (typeof options.viewFactory === 'object') {\n            this.#view = options.viewFactory.createView(this.#viewBox, container_id);\n        }\n        else {\n            this.#view = new SVGViewFactory().createView(this.#viewBox, container_id);\n        }\n\n        const config: BoardConfig = config_from_options(container, options);\n\n        this.#fitter = new Fitter(this, this.#view);\n\n\n        if (container instanceof HTMLElement) {\n            this.#fitter.set_target(container as HTMLElement);\n            this.#fitter.subscribe();\n            this.#fitter.resize();\n        }\n\n        if (container instanceof HTMLElement) {\n            this.appendTo(container);\n        }\n\n        if (config.size) {\n            this.#view.setSize(config.size, this.ratio);\n        }\n\n        // Why do we need to create this subscription to the view?\n        if (typeof this.#view.size$ === 'object') {\n            this.#view_resize = this.#view.size$.subscribe(({ width, height }) => {\n                this.width = width;\n                this.height = height;\n                this.#update_view_box();\n                this.#size.set({ width, height });\n            });\n        }\n        else {\n            throw new Error(\"view.size$ MUST be defined\");\n        }\n    }\n\n    dispose(): void {\n        if (this.#view_resize) {\n            this.#view_resize.dispose();\n            this.#view_resize = null;\n        }\n        this.#fitter.unsubscribe();\n    }\n\n    /**\n     * Here we are actually doing a job that is equvalent to the role of the SVG viewBox except that we are also\n     * introducing a 90 degree rotation if the coordinate system is right-handed (a.k.a regular or not goofy).\n     */\n    #update_view_box(): void {\n        const { left, top, right, bottom } = this.getBoundingBox();\n        const \u0394x = this.width;\n        const \u0394y = this.height;\n        const RL = right - left;\n        const TB = top - bottom;\n        const sx = \u0394x / RL;\n        const sy = \u0394y / TB;\n        const x = -left * \u0394x / RL;\n        const y = -bottom * \u0394y / TB;\n        this.#viewBox.position.set(x, y);\n        if (!this.goofy) {\n            this.#viewBox.attitude.rotorFromAngle(Math.PI / 2);\n        }\n        this.#viewBox.scaleXY.set(sx, sy);\n    }\n\n    get scaleXY(): G20 {\n        return this.#viewBox.scaleXY.clone();\n    }\n\n    get scene(): Group {\n        return this.#scene;\n    }\n\n    appendTo(container: Element) {\n        if (container && typeof container.nodeType === 'number') {\n            if (container.nodeType === Node.ELEMENT_NODE) {\n                const domElement = this.#view.domElement;\n                if (domElement instanceof SVGElement || domElement instanceof HTMLCanvasElement) {\n                    container.appendChild(this.#view.domElement);\n                }\n                else {\n                    throw new Error(\"domElement must be an SVGElement or HTMLCanvasElement\");\n                }\n\n                if (!this.#fitter.is_target_body()) {\n                    this.#fitter.set_target(container);\n                }\n\n                this.update();\n            }\n        }\n\n        return this;\n    }\n\n    getBoundingBox(): { left: number, top: number, right: number, bottom: number } {\n        return this.#boundingBox;\n    }\n\n    /**\n     * A number representing how much time has elapsed since the last frame in milliseconds.\n     */\n    getElapsedTime(fractionalDigits = 3): number | null {\n        if (typeof this.#prev_now === 'number') {\n            return parseFloat((this.#curr_now - this.#prev_now).toFixed(fractionalDigits));\n        }\n        else {\n            return null;\n        }\n    }\n\n    /**\n     * Update positions and calculations in one pass before rendering.\n     */\n    update(): void {\n        this.#prev_now = this.#curr_now;\n        this.#curr_now = dateTime.now();\n\n        if (this.#fitter.has_target() && !this.#fitter.is_bound()) {\n            this.#fitter.subscribe();\n            this.#fitter.resize();\n        }\n\n        const width = this.width;\n        const height = this.height;\n        const renderer = this.#view;\n\n        if (width !== renderer.width || height !== renderer.height) {\n            renderer.setSize({ width, height }, this.ratio);\n        }\n\n        this.#view.render();\n\n        this.#frameCount.set(this.#frameCount.get() + 1);\n    }\n\n    add(...shapes: Shape[]): this {\n        this.#scene.add(...shapes);\n        this.update();\n        return this;\n    }\n\n    remove(...shapes: Shape[]): this {\n        this.#scene.remove(...shapes);\n        this.update();\n        return this;\n    }\n\n    circle(options: CircleAttributes = {}): Circle {\n        const circle = new Circle(this, options);\n        this.add(circle);\n        return circle;\n    }\n\n    ellipse(attributes: EllipseAttributes = {}): Ellipse {\n        const ellipse = new Ellipse(this, attributes);\n        this.add(ellipse);\n        return ellipse;\n    }\n\n    line(point1: PositionLike, point2: PositionLike, attributes: LineAttributes = {}): Line {\n        const line = new Line(this, point1, point2, attributes);\n        this.add(line);\n        return line;\n    }\n\n    path(closed: boolean, ...points: Anchor[]): Path {\n        const path = new Path(this, points, closed);\n        const bbox = path.getBoundingBox();\n        if (typeof bbox.top === 'number' && typeof bbox.left === 'number' &&\n            typeof bbox.right === 'number' && typeof bbox.bottom === 'number') {\n            path.center().position.set((bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2);\n        }\n        this.add(path);\n        return path;\n    }\n\n    point(position: PositionLike, attributes: PointAttributes = {}): Shape {\n        const { left, top, right, bottom } = this.getBoundingBox();\n        const sx = this.width / (top - left);\n        const sy = this.height / (bottom - right);\n        const rx = 4 / sx;\n        const ry = 4 / sy;\n        const ellipse_attribs = ellipse_attribs_from_point_attribs(attributes);\n        ellipse_attribs.position = position;\n        ellipse_attribs.rx = rx;\n        ellipse_attribs.ry = ry;\n        const ellipse = new Ellipse(this, ellipse_attribs);\n        this.add(ellipse);\n        return ellipse;\n    }\n\n    polygon(points: PositionLike[] = [], attributes: Partial<PolygonAttributes> = {}): Polygon {\n        const polygon = new Polygon(this, points, attributes);\n        this.add(polygon);\n        return polygon;\n    }\n\n    rectangle(attributes: RectangleAttributes): Rectangle {\n        const rect = new Rectangle(this, attributes);\n        this.add(rect);\n        return rect;\n    }\n\n    text(message: string, attributes?: Partial<TextAttributes>): Text {\n        const text = new Text(this, message, attributes);\n        this.add(text);\n        return text;\n    }\n\n    arrow(axis: PositionLike, attributes: ArrowAttributes = {}): Arrow {\n        const arrow = new Arrow(this, axis, attributes);\n        this.add(arrow);\n        return arrow;\n    }\n\n    curve(closed: boolean, ...anchors: Anchor[]): Path {\n        const curved = true;\n        const curve = new Path(this, anchors, closed, curved);\n        const bbox = curve.getBoundingBox();\n        curve.center().position.set((bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2);\n        this.add(curve);\n        return curve;\n    }\n\n    arc(x: number, y: number, innerRadius: number, outerRadius: number, startAngle: number, endAngle: number, resolution: number = Constants.Resolution): ArcSegment {\n        const arcSegment = new ArcSegment(this, x, y, innerRadius, outerRadius, startAngle, endAngle, resolution);\n        this.add(arcSegment);\n        return arcSegment;\n    }\n\n    group(...shapes: Shape[]): Group {\n        const group = new Group(this, shapes);\n        this.add(group);\n        return group;\n    }\n\n    // TODO\n    /*\n    interpret(svg: SVGElement, shallow?: boolean, add?: boolean): Group {\n\n        const tag = svg.tagName.toLowerCase() as 'svg';\n\n        add = (typeof add !== 'undefined') ? add : true;\n\n        if (!(tag in read)) {\n            return null;\n        }\n\n        const node = read[tag].call(this, svg);\n\n        if (add) {\n            this.add(shallow && node instanceof Group ? node.children : node);\n        }\n        else if (node.parent) {\n            // Remove `g` tags that have been added to scenegraph / DOM\n            // in order to be compatible with `getById` methods.\n            node.remove();\n        }\n\n        return node;\n\n    }\n    */\n\n    /*\n    load(url: string): Promise<Group> {\n        return new Promise<Group>((resolve, reject) => {\n            const group = new Group(this);\n            // let elem, i, child;\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const attach = (responseText: string) => {\n                // TODO\n                dom.temp.innerHTML = responseText;\n\n                for (i = 0; i < dom.temp.children.length; i++) {\n                    elem = dom.temp.children[i];\n                    child = this.interpret(elem, false, false);\n                    if (child !== null) {\n                        group.add(child);\n                    }\n                }\n\n                if (typeof callback === 'function') {\n                    const svg = dom.temp.children.length <= 1\n                        ? dom.temp.children[0] : dom.temp.children;\n                    callback(group, svg);\n                }\n            };\n\n            if (/\\.svg$/i.test(url)) {\n                try {\n                    xhr(url, attach);\n                    resolve(group);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else {\n                attach(url);\n                resolve(group);\n            }\n        });\n    }\n    */\n}\n\nclass Fitter {\n    readonly #board: Board;\n    readonly #view: View;\n    readonly #domElement: HTMLElement | SVGElement;\n    #target: Element | null = null;\n    #target_resize: Subscription | null = null;\n    constructor(board: Board, view: View) {\n        this.#board = board;\n        this.#view = view;\n        this.#domElement = view.domElement;\n    }\n    dispose(): void {\n        this.unsubscribe();\n    }\n    is_bound(): boolean {\n        return !!this.#target_resize;\n    }\n    /**\n     * Idempotent subscribe to 'resize' events of the target.\n     */\n    subscribe(): void {\n        this.unsubscribe();\n        this.#target_resize = fromEvent(this.#target, 'resize')\n            .pipe(debounceTime(200))\n            .subscribe(() => {\n                this.resize();\n            });\n    }\n    /**\n     * Idempotent unsubscribe from 'resize' events of the target.\n     */\n    unsubscribe(): void {\n        if (this.#target_resize) {\n            this.#target_resize.unsubscribe();\n            this.#target_resize = null;\n        }\n    }\n    has_target(): boolean {\n        return !!this.#target;\n    }\n    set_target(target: Element): this {\n        this.#target = target;\n        if (this.is_target_body()) {\n            // TODO: The controller should take care of this...\n            document.body.style.overflow = 'hidden';\n            document.body.style.margin = '0';\n            document.body.style.padding = '0';\n            document.body.style.top = '0';\n            document.body.style.left = '0';\n            document.body.style.right = '0';\n            document.body.style.bottom = '0';\n            document.body.style.position = 'fixed';\n\n            // TODO: The controller should take care of this...\n            this.#domElement.style.display = 'block';\n            this.#domElement.style.top = '0';\n            this.#domElement.style.left = '0';\n            this.#domElement.style.right = '0';\n            this.#domElement.style.bottom = '0';\n            this.#domElement.style.position = 'fixed';\n        }\n        return this;\n    }\n    is_target_body(): boolean {\n        return this.#target === document.body;\n    }\n    resize(): void {\n        const board = this.#board;\n        const size = this.#target.getBoundingClientRect();\n\n        board.width = size.width;\n        board.height = size.height;\n\n        this.#view.setSize(size, board.ratio);\n    }\n}\n\ninterface BoardConfig {\n    resizeTo?: Element;\n    size?: { width: number; height: number };\n}\n\nfunction config_from_options(container: HTMLElement, options: BoardAttributes): BoardConfig {\n    const config: BoardConfig = {\n        resizeTo: compute_config_resize_to(container, options),\n        size: compute_config_size(container, options)\n    };\n    return config;\n}\n\nfunction compute_config_resize_to(container: HTMLElement, options: BoardAttributes): Element | null {\n    if (options.resizeTo) {\n        return options.resizeTo;\n    }\n    return container;\n}\n\nfunction compute_config_size(container: HTMLElement, options: BoardAttributes): { width: number; height: number } | null {\n    if (typeof options.size === 'object') {\n        return options.size;\n    }\n    else {\n        if (container) {\n            return null;\n        }\n        else {\n            return { width: 640, height: 480 };\n        }\n    }\n}\n\nfunction get_container(elementOrId: string | HTMLElement): HTMLElement {\n    if (typeof elementOrId === 'string') {\n        return document.getElementById(elementOrId);\n    }\n    else {\n        return elementOrId;\n    }\n}\n\nfunction get_container_id(elementOrId: string | HTMLElement): string {\n    if (typeof elementOrId === 'string') {\n        return elementOrId;\n    }\n    else {\n        return elementOrId.id;\n    }\n}\n\nfunction ellipse_attribs_from_point_attribs(attributes: PointAttributes): EllipseAttributes {\n    const retval: EllipseAttributes = {\n        id: attributes.id,\n        fill: attributes.fill,\n        fillOpacity: attributes.fillOpacity,\n        // attitude: attributes.attitude,\n        // position: attributes.position,\n        stroke: attributes.stroke,\n        strokeOpacity: attributes.strokeOpacity,\n        strokeWidth: attributes.strokeWidth,\n        visibility: attributes.visibility\n    };\n    return retval;\n}\n\n", "import { Board, G20, Text } from './index';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    const board = new Board(\"my-board\", {\n        boundingBox: { left: -5, top: 5, right: 5, bottom: -5 },\n    });\n\n    const A = board.point([0.0, 0.0], { id: 'A', visibility: 'visible', fill: 'red', stroke: 'red' });\n    const B = board.point([8.0, 0.0], { id: 'B', visibility: 'hidden' });\n    const C = board.point([8.0, 4.0], { id: 'C', visibility: 'hidden' });\n\n    const AB = B.position.__sub__(A.position);\n    const AC = C.position.__sub__(A.position);\n    const S = AC.normalize();\n    const N = S.__mul__(G20.I);\n\n    const ramp = board.polygon([A, B, C], { id: 'ramp', opacity: 0.8 });\n    ramp.fill = 'rgba(0, 191, 168, 0.33)';\n    ramp.stroke = 'rgb(0, 191, 168)';\n    ramp.strokeWidth = 2;\n    ramp.center();\n\n    const box = board.rectangle({ id: 'box', width: 2, height: 1 });\n    box.attitude.rotorFromDirections(AB, AC);\n    box.fill = 'rgba(255, 128, 0, 0.33)';\n    box.stroke = 'rgb(255, 128, 0)';\n    box.strokeWidth = 2;\n    box.position.copyVector(A.position).add(AC.__mul__(0.25)).add(N.__mul__(box.height / 2));\n\n    const textA = board.text(\"A\", {\n        id: 'text-A',\n        anchor: 'end',\n        baseline: 'middle',\n        dx: -5,\n        fontFamily: 'Lato',\n        fontSize: 20,\n        opacity: 0.4,\n        position: A.X\n    });\n    rescale(textA, board);\n\n    const textB = board.text(\"B\", {\n        id: 'text-B',\n        anchor: 'start',\n        baseline: 'middle',\n        dx: 5,\n        fontFamily: 'Lato',\n        fontSize: 20,\n        opacity: 0.4,\n        position: B.X\n    });\n    rescale(textB, board);\n\n    const textC = board.text(\"C\", {\n        id: 'text-C',\n        anchor: 'start',\n        baseline: 'middle',\n        dx: 5,\n        fontFamily: 'Lato',\n        fontSize: 20,\n        opacity: 0.4,\n        position: C.X\n    });\n    rescale(textC, board);\n\n    const textD = board.text(\"Box\", {\n        id: 'text-D',\n        anchor: 'middle',\n        baseline: 'middle',\n        fontFamily: 'Lato',\n        fontSize: 20,\n        position: box.X\n    });\n    textD.attitude.rotorFromDirections(AB, AC);\n    rescale(textD, board);\n\n    const textE = board.text(\"Ramp\", {\n        id: 'text-E',\n        anchor: 'middle',\n        baseline: 'hanging',\n        fontFamily: 'Lato',\n        fontSize: 20,\n        position: ramp.X\n    });\n    textE.attitude.rotorFromDirections(AB, AC);\n    rescale(textE, board);\n    board.update();\n\n    board.point([box.position.x, box.position.y], { id: 'D', visibility: 'hidden' });\n    board.update();\n\n    box.stroke = \"#FFCC00\";\n    box.strokeWidth = 4;\n    box.strokeOpacity = 0.6;\n    box.fill = \"#FFFF00\";\n    box.fillOpacity = 0.3;\n\n    const Fg = board.arrow(G20.ey.scale(-2), {\n        position: box.X,\n        strokeWidth: 2\n    });\n    Fg.strokeOpacity = 0.4;\n\n    const Fn = board.arrow(N.scale(1.5), {\n        position: box.X,\n        strokeOpacity: 0.4\n    });\n    Fn.strokeWidth = 2;\n\n    const Fs = board.arrow(S.scale(1.5), {\n        position: box.X\n    });\n    Fs.strokeOpacity = 0.4;\n    Fs.strokeWidth = 2;\n\n    const arrow = board.arrow(G20.ex.scale(1), {\n        id: 'arrow',\n        strokeWidth: 4\n    });\n    arrow.axis = G20.ey;\n    arrow.headLength = 0.25;\n    arrow.origin = G20.ey.scale(1 / 2);\n\n    // Now move the box\n    box.position.copyVector(A.position).add(AC.__mul__(0.75)).add(N.__mul__(box.height / 2));\n\n    // board.update()\n\n    window.onunload = function () {\n        board.dispose();\n    };\n\n    /*\n    function animate() {\n        // board.update()\n        window.requestAnimationFrame(animate)\n    }\n\n    window.requestAnimationFrame(animate)\n    */\n});\n\nfunction rescale(text: Text, board: Board): void {\n    text.scaleXY.x = 1 / board.scaleXY.x;\n    text.scaleXY.y = 1 / board.scaleXY.y;\n}\n\n"],
  "mappings": ";;;;AAgBA,MAAI,gBAAgB,SAAS,GAAG,GAAG;AACjC,oBAAgB,OAAO,kBAClB,EAAE,WAAW,CAAC,EAAE,aAAa,SAAS,SAAUA,IAAGC,IAAG;AAAE,MAAAD,GAAE,YAAYC;AAAA,IAAG,KAC1E,SAAUD,IAAGC,IAAG;AAAE,eAAS,KAAKA;AAAG,YAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC;AAAG,UAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,IAAG;AACpG,WAAO,cAAc,GAAG,CAAC;AAAA,EAC3B;AAEO,WAAS,UAAU,GAAG,GAAG;AAC9B,QAAI,OAAO,MAAM,cAAc,MAAM;AACjC,YAAM,IAAI,UAAU,yBAAyB,OAAO,CAAC,IAAI,+BAA+B;AAC5F,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AAAE,WAAK,cAAc;AAAA,IAAG;AACtC,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACpF;AAqFO,WAAS,UAAU,SAAS,YAAY,GAAG,WAAW;AAC3D,aAAS,MAAM,OAAO;AAAE,aAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,gBAAQ,KAAK;AAAA,MAAG,CAAC;AAAA,IAAG;AAC3G,WAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,eAAS,UAAU,OAAO;AAAE,YAAI;AAAE,eAAK,UAAU,KAAK,KAAK,CAAC;AAAA,QAAG,SAAS,GAAG;AAAE,iBAAO,CAAC;AAAA,QAAG;AAAA,MAAE;AAC1F,eAAS,SAAS,OAAO;AAAE,YAAI;AAAE,eAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,QAAG,SAAS,GAAG;AAAE,iBAAO,CAAC;AAAA,QAAG;AAAA,MAAE;AAC7F,eAAS,KAAK,QAAQ;AAAE,eAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,MAAG;AAC7G,YAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,IACxE,CAAC;AAAA,EACH;AAEO,WAAS,YAAY,SAAS,MAAM;AACzC,QAAI,IAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,UAAI,EAAE,CAAC,IAAI;AAAG,cAAM,EAAE,CAAC;AAAG,aAAO,EAAE,CAAC;AAAA,IAAG,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG;AAC/G,WAAO,IAAI,EAAE,MAAM,KAAK,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,UAAU,KAAK,CAAC,EAAE,GAAG,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,aAAO;AAAA,IAAM,IAAI;AACvJ,aAAS,KAAK,GAAG;AAAE,aAAO,SAAU,GAAG;AAAE,eAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,MAAG;AAAA,IAAG;AACjE,aAAS,KAAK,IAAI;AACd,UAAI;AAAG,cAAM,IAAI,UAAU,iCAAiC;AAC5D,aAAO,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,KAAK;AAAG,YAAI;AAC1C,cAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG;AAAM,mBAAO;AAC3J,cAAI,IAAI,GAAG;AAAG,iBAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,kBAAQ,GAAG,CAAC,GAAG;AAAA,YACX,KAAK;AAAA,YAAG,KAAK;AAAG,kBAAI;AAAI;AAAA,YACxB,KAAK;AAAG,gBAAE;AAAS,qBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAM;AAAA,YACtD,KAAK;AAAG,gBAAE;AAAS,kBAAI,GAAG,CAAC;AAAG,mBAAK,CAAC,CAAC;AAAG;AAAA,YACxC,KAAK;AAAG,mBAAK,EAAE,IAAI,IAAI;AAAG,gBAAE,KAAK,IAAI;AAAG;AAAA,YACxC;AACI,kBAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,oBAAI;AAAG;AAAA,cAAU;AAC3G,kBAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,kBAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,cAAO;AACrF,kBAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,kBAAE,QAAQ,EAAE,CAAC;AAAG,oBAAI;AAAI;AAAA,cAAO;AACpE,kBAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,kBAAE,QAAQ,EAAE,CAAC;AAAG,kBAAE,IAAI,KAAK,EAAE;AAAG;AAAA,cAAO;AAClE,kBAAI,EAAE,CAAC;AAAG,kBAAE,IAAI,IAAI;AACpB,gBAAE,KAAK,IAAI;AAAG;AAAA,UACtB;AACA,eAAK,KAAK,KAAK,SAAS,CAAC;AAAA,QAC7B,SAAS,GAAG;AAAE,eAAK,CAAC,GAAG,CAAC;AAAG,cAAI;AAAA,QAAG,UAAE;AAAU,cAAI,IAAI;AAAA,QAAG;AACzD,UAAI,GAAG,CAAC,IAAI;AAAG,cAAM,GAAG,CAAC;AAAG,aAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAK;AAAA,IACnF;AAAA,EACF;AAkBO,WAAS,SAAS,GAAG;AAC1B,QAAI,IAAI,OAAO,WAAW,cAAc,OAAO,UAAU,IAAI,KAAK,EAAE,CAAC,GAAG,IAAI;AAC5E,QAAI;AAAG,aAAO,EAAE,KAAK,CAAC;AACtB,QAAI,KAAK,OAAO,EAAE,WAAW;AAAU,aAAO;AAAA,QAC1C,MAAM,WAAY;AACd,cAAI,KAAK,KAAK,EAAE;AAAQ,gBAAI;AAC5B,iBAAO,EAAE,OAAO,KAAK,EAAE,GAAG,GAAG,MAAM,CAAC,EAAE;AAAA,QAC1C;AAAA,MACJ;AACA,UAAM,IAAI,UAAU,IAAI,4BAA4B,iCAAiC;AAAA,EACvF;AAEO,WAAS,OAAO,GAAG,GAAG;AAC3B,QAAI,IAAI,OAAO,WAAW,cAAc,EAAE,OAAO,QAAQ;AACzD,QAAI,CAAC;AAAG,aAAO;AACf,QAAI,IAAI,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG;AAC/B,QAAI;AACA,cAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG;AAAM,WAAG,KAAK,EAAE,KAAK;AAAA,IAC7E,SACO,OAAO;AAAE,UAAI,EAAE,MAAa;AAAA,IAAG,UACtC;AACI,UAAI;AACA,YAAI,KAAK,CAAC,EAAE,SAAS,IAAI,EAAE,QAAQ;AAAI,YAAE,KAAK,CAAC;AAAA,MACnD,UACA;AAAU,YAAI;AAAG,gBAAM,EAAE;AAAA,MAAO;AAAA,IACpC;AACA,WAAO;AAAA,EACT;AAkBO,WAAS,cAAc,IAAI,MAAM,MAAM;AAC5C,QAAI,QAAQ,UAAU,WAAW;AAAG,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,IAAI,GAAG,KAAK;AACjF,YAAI,MAAM,EAAE,KAAK,OAAO;AACpB,cAAI,CAAC;AAAI,iBAAK,MAAM,UAAU,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,aAAG,CAAC,IAAI,KAAK,CAAC;AAAA,QAClB;AAAA,MACJ;AACA,WAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC;AAAA,EACzD;AAEO,WAAS,QAAQ,GAAG;AACzB,WAAO,gBAAgB,WAAW,KAAK,IAAI,GAAG,QAAQ,IAAI,QAAQ,CAAC;AAAA,EACrE;AAEO,WAAS,iBAAiB,SAAS,YAAY,WAAW;AAC/D,QAAI,CAAC,OAAO;AAAe,YAAM,IAAI,UAAU,sCAAsC;AACrF,QAAI,IAAI,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;AAC5D,WAAO,IAAI,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,QAAQ,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,aAAO;AAAA,IAAM,GAAG;AACpH,aAAS,KAAK,GAAG;AAAE,UAAI,EAAE,CAAC;AAAG,UAAE,CAAC,IAAI,SAAU,GAAG;AAAE,iBAAO,IAAI,QAAQ,SAAU,GAAG,GAAG;AAAE,cAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,KAAK,OAAO,GAAG,CAAC;AAAA,UAAG,CAAC;AAAA,QAAG;AAAA,IAAG;AACzI,aAAS,OAAO,GAAG,GAAG;AAAE,UAAI;AAAE,aAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,MAAG;AAAA,IAAE;AACjF,aAAS,KAAK,GAAG;AAAE,QAAE,iBAAiB,UAAU,QAAQ,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,SAAS,MAAM,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,IAAG;AACvH,aAAS,QAAQ,OAAO;AAAE,aAAO,QAAQ,KAAK;AAAA,IAAG;AACjD,aAAS,OAAO,OAAO;AAAE,aAAO,SAAS,KAAK;AAAA,IAAG;AACjD,aAAS,OAAO,GAAG,GAAG;AAAE,UAAI,EAAE,CAAC,GAAG,EAAE,MAAM,GAAG,EAAE;AAAQ,eAAO,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,IAAG;AAAA,EACnF;AAQO,WAAS,cAAc,GAAG;AAC/B,QAAI,CAAC,OAAO;AAAe,YAAM,IAAI,UAAU,sCAAsC;AACrF,QAAI,IAAI,EAAE,OAAO,aAAa,GAAG;AACjC,WAAO,IAAI,EAAE,KAAK,CAAC,KAAK,IAAI,OAAO,aAAa,aAAa,SAAS,CAAC,IAAI,EAAE,OAAO,QAAQ,EAAE,GAAG,IAAI,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,QAAQ,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,aAAO;AAAA,IAAM,GAAG;AAC9M,aAAS,KAAK,GAAG;AAAE,QAAE,CAAC,IAAI,EAAE,CAAC,KAAK,SAAU,GAAG;AAAE,eAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAAE,cAAI,EAAE,CAAC,EAAE,CAAC,GAAG,OAAO,SAAS,QAAQ,EAAE,MAAM,EAAE,KAAK;AAAA,QAAG,CAAC;AAAA,MAAG;AAAA,IAAG;AAC/J,aAAS,OAAO,SAAS,QAAQ,GAAG,GAAG;AAAE,cAAQ,QAAQ,CAAC,EAAE,KAAK,SAASC,IAAG;AAAE,gBAAQ,EAAE,OAAOA,IAAG,MAAM,EAAE,CAAC;AAAA,MAAG,GAAG,MAAM;AAAA,IAAG;AAAA,EAC7H;;;ACvPM,WAAU,WAAW,OAAU;AACnC,WAAO,OAAO,UAAU;EAC1B;;;ACGM,WAAU,iBAAoB,YAAgC;AAClE,QAAM,SAAS,SAAC,UAAa;AAC3B,YAAM,KAAK,QAAQ;AACnB,eAAS,QAAQ,IAAI,MAAK,EAAG;IAC/B;AAEA,QAAM,WAAW,WAAW,MAAM;AAClC,aAAS,YAAY,OAAO,OAAO,MAAM,SAAS;AAClD,aAAS,UAAU,cAAc;AACjC,WAAO;EACT;;;ACDO,MAAM,sBAA+C,iBAC1D,SAAC,QAAM;AACL,WAAA,SAAS,wBAAmC,QAA0B;AACpE,aAAO,IAAI;AACX,WAAK,UAAU,SACR,OAAO,SAAM,8CACxB,OAAO,IAAI,SAAC,KAAK,GAAC;AAAK,eAAG,IAAI,IAAC,OAAK,IAAI,SAAQ;MAAzB,CAA6B,EAAE,KAAK,MAAM,IACzD;AACJ,WAAK,OAAO;AACZ,WAAK,SAAS;IAChB;EARA,CAQC;;;ACvBC,WAAU,UAAa,KAA6B,MAAO;AAC/D,QAAI,KAAK;AACP,UAAM,QAAQ,IAAI,QAAQ,IAAI;AAC9B,WAAK,SAAS,IAAI,OAAO,OAAO,CAAC;;EAErC;;;ACOA,MAAA,eAAA,WAAA;AAyBE,aAAAC,cAAoB,iBAA4B;AAA5B,WAAA,kBAAA;AAdb,WAAA,SAAS;AAER,WAAA,aAAmD;AAMnD,WAAA,cAAqD;IAMV;AAQnD,IAAAA,cAAA,UAAA,cAAA,WAAA;;AACE,UAAI;AAEJ,UAAI,CAAC,KAAK,QAAQ;AAChB,aAAK,SAAS;AAGN,YAAA,aAAe,KAAI;AAC3B,YAAI,YAAY;AACd,eAAK,aAAa;AAClB,cAAI,MAAM,QAAQ,UAAU,GAAG;;AAC7B,uBAAqB,eAAA,SAAA,UAAU,GAAA,iBAAA,aAAA,KAAA,GAAA,CAAA,eAAA,MAAA,iBAAA,aAAA,KAAA,GAAE;AAA5B,oBAAM,WAAM,eAAA;AACf,yBAAO,OAAO,IAAI;;;;;;;;;;;;;iBAEf;AACL,uBAAW,OAAO,IAAI;;;AAIlB,YAAiB,mBAAqB,KAAI;AAClD,YAAI,WAAW,gBAAgB,GAAG;AAChC,cAAI;AACF,6BAAgB;mBACT,GAAG;AACV,qBAAS,aAAa,sBAAsB,EAAE,SAAS,CAAC,CAAC;;;AAIrD,YAAA,cAAgB,KAAI;AAC5B,YAAI,aAAa;AACf,eAAK,cAAc;;AACnB,qBAAwB,gBAAA,SAAA,WAAW,GAAA,kBAAA,cAAA,KAAA,GAAA,CAAA,gBAAA,MAAA,kBAAA,cAAA,KAAA,GAAE;AAAhC,kBAAM,YAAS,gBAAA;AAClB,kBAAI;AACF,8BAAc,SAAS;uBAChB,KAAK;AACZ,yBAAS,WAAM,QAAN,WAAM,SAAN,SAAU,CAAA;AACnB,oBAAI,eAAe,qBAAqB;AACtC,2BAAM,cAAA,cAAA,CAAA,GAAA,OAAO,MAAM,CAAA,GAAA,OAAK,IAAI,MAAM,CAAA;uBAC7B;AACL,yBAAO,KAAK,GAAG;;;;;;;;;;;;;;;;AAMvB,YAAI,QAAQ;AACV,gBAAM,IAAI,oBAAoB,MAAM;;;IAG1C;AAoBA,IAAAA,cAAA,UAAA,MAAA,SAAI,UAAuB;;AAGzB,UAAI,YAAY,aAAa,MAAM;AACjC,YAAI,KAAK,QAAQ;AAGf,wBAAc,QAAQ;eACjB;AACL,cAAI,oBAAoBA,eAAc;AAGpC,gBAAI,SAAS,UAAU,SAAS,WAAW,IAAI,GAAG;AAChD;;AAEF,qBAAS,WAAW,IAAI;;AAE1B,WAAC,KAAK,eAAc,KAAA,KAAK,iBAAW,QAAA,OAAA,SAAA,KAAI,CAAA,GAAI,KAAK,QAAQ;;;IAG/D;AAOQ,IAAAA,cAAA,UAAA,aAAR,SAAmB,QAAoB;AAC7B,UAAA,aAAe,KAAI;AAC3B,aAAO,eAAe,UAAW,MAAM,QAAQ,UAAU,KAAK,WAAW,SAAS,MAAM;IAC1F;AASQ,IAAAA,cAAA,UAAA,aAAR,SAAmB,QAAoB;AAC7B,UAAA,aAAe,KAAI;AAC3B,WAAK,aAAa,MAAM,QAAQ,UAAU,KAAK,WAAW,KAAK,MAAM,GAAG,cAAc,aAAa,CAAC,YAAY,MAAM,IAAI;IAC5H;AAMQ,IAAAA,cAAA,UAAA,gBAAR,SAAsB,QAAoB;AAChC,UAAA,aAAe,KAAI;AAC3B,UAAI,eAAe,QAAQ;AACzB,aAAK,aAAa;iBACT,MAAM,QAAQ,UAAU,GAAG;AACpC,kBAAU,YAAY,MAAM;;IAEhC;AAgBA,IAAAA,cAAA,UAAA,SAAA,SAAO,UAAsC;AACnC,UAAA,cAAgB,KAAI;AAC5B,qBAAe,UAAU,aAAa,QAAQ;AAE9C,UAAI,oBAAoBA,eAAc;AACpC,iBAAS,cAAc,IAAI;;IAE/B;AAlLc,IAAAA,cAAA,QAAS,WAAA;AACrB,UAAM,QAAQ,IAAIA,cAAY;AAC9B,YAAM,SAAS;AACf,aAAO;IACT,EAAE;AA+KJ,WAAAA;IArLA;AAuLO,MAAM,qBAAqB,aAAa;AAEzC,WAAU,eAAe,OAAU;AACvC,WACE,iBAAiB,gBAChB,SAAS,YAAY,SAAS,WAAW,MAAM,MAAM,KAAK,WAAW,MAAM,GAAG,KAAK,WAAW,MAAM,WAAW;EAEpH;AAEA,WAAS,cAAc,WAAwC;AAC7D,QAAI,WAAW,SAAS,GAAG;AACzB,gBAAS;WACJ;AACL,gBAAU,YAAW;;EAEzB;;;AChNO,MAAM,SAAuB;IAClC,kBAAkB;IAClB,uBAAuB;IACvB,SAAS;IACT,uCAAuC;IACvC,0BAA0B;;;;ACGrB,MAAM,kBAAmC;IAG9C,YAAA,SAAW,SAAqB,SAAgB;AAAE,UAAA,OAAA,CAAA;eAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAO;AAAP,aAAA,KAAA,CAAA,IAAA,UAAA,EAAA;;AACxC,UAAA,WAAa,gBAAe;AACpC,UAAI,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,YAAY;AACxB,eAAO,SAAS,WAAU,MAAnB,UAAQ,cAAA,CAAY,SAAS,OAAO,GAAA,OAAK,IAAI,CAAA,CAAA;;AAEtD,aAAO,WAAU,MAAA,QAAA,cAAA,CAAC,SAAS,OAAO,GAAA,OAAK,IAAI,CAAA,CAAA;IAC7C;IACA,cAAA,SAAa,QAAM;AACT,UAAA,WAAa,gBAAe;AACpC,eAAQ,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,iBAAgB,cAAc,MAAa;IAC/D;IACA,UAAU;;;;ACjBN,WAAU,qBAAqB,KAAQ;AAC3C,oBAAgB,WAAW,WAAA;AACjB,UAAA,mBAAqB,OAAM;AACnC,UAAI,kBAAkB;AAEpB,yBAAiB,GAAG;aACf;AAEL,cAAM;;IAEV,CAAC;EACH;;;ACtBM,WAAU,OAAI;EAAK;;;ACMlB,MAAM,wBAAyB,WAAA;AAAM,WAAA,mBAAmB,KAAK,QAAW,MAAS;EAA5C,EAAsE;AAO5G,WAAU,kBAAkB,OAAU;AAC1C,WAAO,mBAAmB,KAAK,QAAW,KAAK;EACjD;AAOM,WAAU,iBAAoB,OAAQ;AAC1C,WAAO,mBAAmB,KAAK,OAAO,MAAS;EACjD;AAQM,WAAU,mBAAmB,MAAuB,OAAY,OAAU;AAC9E,WAAO;MACL;MACA;MACA;;EAEJ;;;ACrCA,MAAI,UAAuD;AASrD,WAAU,aAAa,IAAc;AACzC,QAAI,OAAO,uCAAuC;AAChD,UAAM,SAAS,CAAC;AAChB,UAAI,QAAQ;AACV,kBAAU,EAAE,aAAa,OAAO,OAAO,KAAI;;AAE7C,SAAE;AACF,UAAI,QAAQ;AACJ,YAAA,KAAyB,SAAvB,cAAW,GAAA,aAAE,QAAK,GAAA;AAC1B,kBAAU;AACV,YAAI,aAAa;AACf,gBAAM;;;WAGL;AAGL,SAAE;;EAEN;AAMM,WAAU,aAAa,KAAQ;AACnC,QAAI,OAAO,yCAAyC,SAAS;AAC3D,cAAQ,cAAc;AACtB,cAAQ,QAAQ;;EAEpB;;;ACrBA,MAAA,aAAA,SAAA,QAAA;AAAmC,cAAAC,aAAA,MAAA;AA6BjC,aAAAA,YAAY,aAA6C;AAAzD,UAAA,QACE,OAAA,KAAA,IAAA,KAAO;AATC,YAAA,YAAqB;AAU7B,UAAI,aAAa;AACf,cAAK,cAAc;AAGnB,YAAI,eAAe,WAAW,GAAG;AAC/B,sBAAY,IAAI,KAAI;;aAEjB;AACL,cAAK,cAAc;;;IAEvB;AAzBO,IAAAA,YAAA,SAAP,SAAiB,MAAwB,OAA2B,UAAqB;AACvF,aAAO,IAAI,eAAe,MAAM,OAAO,QAAQ;IACjD;AAgCA,IAAAA,YAAA,UAAA,OAAA,SAAK,OAAS;AACZ,UAAI,KAAK,WAAW;AAClB,kCAA0B,iBAAiB,KAAK,GAAG,IAAI;aAClD;AACL,aAAK,MAAM,KAAM;;IAErB;AASA,IAAAA,YAAA,UAAA,QAAA,SAAM,KAAS;AACb,UAAI,KAAK,WAAW;AAClB,kCAA0B,kBAAkB,GAAG,GAAG,IAAI;aACjD;AACL,aAAK,YAAY;AACjB,aAAK,OAAO,GAAG;;IAEnB;AAQA,IAAAA,YAAA,UAAA,WAAA,WAAA;AACE,UAAI,KAAK,WAAW;AAClB,kCAA0B,uBAAuB,IAAI;aAChD;AACL,aAAK,YAAY;AACjB,aAAK,UAAS;;IAElB;AAEA,IAAAA,YAAA,UAAA,cAAA,WAAA;AACE,UAAI,CAAC,KAAK,QAAQ;AAChB,aAAK,YAAY;AACjB,eAAA,UAAM,YAAW,KAAA,IAAA;AACjB,aAAK,cAAc;;IAEvB;AAEU,IAAAA,YAAA,UAAA,QAAV,SAAgB,OAAQ;AACtB,WAAK,YAAY,KAAK,KAAK;IAC7B;AAEU,IAAAA,YAAA,UAAA,SAAV,SAAiB,KAAQ;AACvB,UAAI;AACF,aAAK,YAAY,MAAM,GAAG;;AAE1B,aAAK,YAAW;;IAEpB;AAEU,IAAAA,YAAA,UAAA,YAAV,WAAA;AACE,UAAI;AACF,aAAK,YAAY,SAAQ;;AAEzB,aAAK,YAAW;;IAEpB;AACF,WAAAA;EAAA,EApHmC,YAAY;AA2H/C,MAAM,QAAQ,SAAS,UAAU;AAEjC,WAAS,KAAyC,IAAQ,SAAY;AACpE,WAAO,MAAM,KAAK,IAAI,OAAO;EAC/B;AAMA,MAAA,mBAAA,WAAA;AACE,aAAAC,kBAAoB,iBAAqC;AAArC,WAAA,kBAAA;IAAwC;AAE5D,IAAAA,kBAAA,UAAA,OAAA,SAAK,OAAQ;AACH,UAAA,kBAAoB,KAAI;AAChC,UAAI,gBAAgB,MAAM;AACxB,YAAI;AACF,0BAAgB,KAAK,KAAK;iBACnB,OAAO;AACd,+BAAqB,KAAK;;;IAGhC;AAEA,IAAAA,kBAAA,UAAA,QAAA,SAAM,KAAQ;AACJ,UAAA,kBAAoB,KAAI;AAChC,UAAI,gBAAgB,OAAO;AACzB,YAAI;AACF,0BAAgB,MAAM,GAAG;iBAClB,OAAO;AACd,+BAAqB,KAAK;;aAEvB;AACL,6BAAqB,GAAG;;IAE5B;AAEA,IAAAA,kBAAA,UAAA,WAAA,WAAA;AACU,UAAA,kBAAoB,KAAI;AAChC,UAAI,gBAAgB,UAAU;AAC5B,YAAI;AACF,0BAAgB,SAAQ;iBACjB,OAAO;AACd,+BAAqB,KAAK;;;IAGhC;AACF,WAAAA;EAAA,EArCA;AAuCA,MAAA,iBAAA,SAAA,QAAA;AAAuC,cAAAC,iBAAA,MAAA;AACrC,aAAAA,gBACE,gBACA,OACA,UAA8B;AAHhC,UAAA,QAKE,OAAA,KAAA,IAAA,KAAO;AAEP,UAAI;AACJ,UAAI,WAAW,cAAc,KAAK,CAAC,gBAAgB;AAGjD,0BAAkB;UAChB,MAAO,mBAAc,QAAd,mBAAc,SAAd,iBAAkB;UACzB,OAAO,UAAK,QAAL,UAAK,SAAL,QAAS;UAChB,UAAU,aAAQ,QAAR,aAAQ,SAAR,WAAY;;aAEnB;AAEL,YAAI;AACJ,YAAI,SAAQ,OAAO,0BAA0B;AAI3C,sBAAU,OAAO,OAAO,cAAc;AACtC,oBAAQ,cAAc,WAAA;AAAM,mBAAA,MAAK,YAAW;UAAhB;AAC5B,4BAAkB;YAChB,MAAM,eAAe,QAAQ,KAAK,eAAe,MAAM,SAAO;YAC9D,OAAO,eAAe,SAAS,KAAK,eAAe,OAAO,SAAO;YACjE,UAAU,eAAe,YAAY,KAAK,eAAe,UAAU,SAAO;;eAEvE;AAEL,4BAAkB;;;AAMtB,YAAK,cAAc,IAAI,iBAAiB,eAAe;;IACzD;AACF,WAAAA;EAAA,EAzCuC,UAAU;AA2CjD,WAAS,qBAAqB,OAAU;AACtC,QAAI,OAAO,uCAAuC;AAChD,mBAAa,KAAK;WACb;AAGL,2BAAqB,KAAK;;EAE9B;AAQA,WAAS,oBAAoB,KAAQ;AACnC,UAAM;EACR;AAOA,WAAS,0BAA0B,cAA2C,YAA2B;AAC/F,QAAA,wBAA0B,OAAM;AACxC,6BAAyB,gBAAgB,WAAW,WAAA;AAAM,aAAA,sBAAsB,cAAc,UAAU;IAA9C,CAA+C;EAC3G;AAOO,MAAM,iBAA6D;IACxE,QAAQ;IACR,MAAM;IACN,OAAO;IACP,UAAU;;;;AC5QL,MAAM,aAA+B,WAAA;AAAM,WAAC,OAAO,WAAW,cAAc,OAAO,cAAe;EAAvD,EAAsE;;;ACoClH,WAAU,SAAY,GAAI;AAC9B,WAAO;EACT;;;ACsCM,WAAU,cAAoB,KAA+B;AACjE,QAAI,IAAI,WAAW,GAAG;AACpB,aAAO;;AAGT,QAAI,IAAI,WAAW,GAAG;AACpB,aAAO,IAAI,CAAC;;AAGd,WAAO,SAAS,MAAM,OAAQ;AAC5B,aAAO,IAAI,OAAO,SAAC,MAAW,IAAuB;AAAK,eAAA,GAAG,IAAI;MAAP,GAAU,KAAY;IAClF;EACF;;;AC9EA,MAAA,aAAA,WAAA;AAkBE,aAAAC,YAAY,WAA6E;AACvF,UAAI,WAAW;AACb,aAAK,aAAa;;IAEtB;AA4BA,IAAAA,YAAA,UAAA,OAAA,SAAQ,UAAyB;AAC/B,UAAMC,cAAa,IAAID,YAAU;AACjC,MAAAC,YAAW,SAAS;AACpB,MAAAA,YAAW,WAAW;AACtB,aAAOA;IACT;AA6IA,IAAAD,YAAA,UAAA,YAAA,SACE,gBACA,OACA,UAA8B;AAHhC,UAAA,QAAA;AAKE,UAAM,aAAa,aAAa,cAAc,IAAI,iBAAiB,IAAI,eAAe,gBAAgB,OAAO,QAAQ;AAErH,mBAAa,WAAA;AACL,YAAA,KAAuB,OAArB,WAAQ,GAAA,UAAE,SAAM,GAAA;AACxB,mBAAW,IACT,WAGI,SAAS,KAAK,YAAY,MAAM,IAChC,SAIA,MAAK,WAAW,UAAU,IAG1B,MAAK,cAAc,UAAU,CAAC;MAEtC,CAAC;AAED,aAAO;IACT;AAGU,IAAAA,YAAA,UAAA,gBAAV,SAAwB,MAAmB;AACzC,UAAI;AACF,eAAO,KAAK,WAAW,IAAI;eACpB,KAAK;AAIZ,aAAK,MAAM,GAAG;;IAElB;AA6DA,IAAAA,YAAA,UAAA,UAAA,SAAQ,MAA0B,aAAoC;AAAtE,UAAA,QAAA;AACE,oBAAc,eAAe,WAAW;AAExC,aAAO,IAAI,YAAkB,SAAC,SAAS,QAAM;AAC3C,YAAM,aAAa,IAAI,eAAkB;UACvC,MAAM,SAAC,OAAK;AACV,gBAAI;AACF,mBAAK,KAAK;qBACH,KAAK;AACZ,qBAAO,GAAG;AACV,yBAAW,YAAW;;UAE1B;UACA,OAAO;UACP,UAAU;SACX;AACD,cAAK,UAAU,UAAU;MAC3B,CAAC;IACH;AAGU,IAAAA,YAAA,UAAA,aAAV,SAAqB,YAA2B;;AAC9C,cAAO,KAAA,KAAK,YAAM,QAAA,OAAA,SAAA,SAAA,GAAE,UAAU,UAAU;IAC1C;AAOA,IAAAA,YAAA,UAAC,UAAiB,IAAlB,WAAA;AACE,aAAO;IACT;AA4FA,IAAAA,YAAA,UAAA,OAAA,WAAA;AAAK,UAAA,aAAA,CAAA;eAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAA2C;AAA3C,mBAAA,EAAA,IAAA,UAAA,EAAA;;AACH,aAAO,cAAc,UAAU,EAAE,IAAI;IACvC;AA6BA,IAAAA,YAAA,UAAA,YAAA,SAAU,aAAoC;AAA9C,UAAA,QAAA;AACE,oBAAc,eAAe,WAAW;AAExC,aAAO,IAAI,YAAY,SAAC,SAAS,QAAM;AACrC,YAAI;AACJ,cAAK,UACH,SAAC,GAAI;AAAK,iBAAC,QAAQ;QAAT,GACV,SAAC,KAAQ;AAAK,iBAAA,OAAO,GAAG;QAAV,GACd,WAAA;AAAM,iBAAA,QAAQ,KAAK;QAAb,CAAc;MAExB,CAAC;IACH;AA1aO,IAAAA,YAAA,SAAkC,SAAI,WAAwD;AACnG,aAAO,IAAIA,YAAc,SAAS;IACpC;AAyaF,WAAAA;IA9cA;AAudA,WAAS,eAAe,aAA+C;;AACrE,YAAO,KAAA,gBAAW,QAAX,gBAAW,SAAX,cAAe,OAAO,aAAO,QAAA,OAAA,SAAA,KAAI;EAC1C;AAEA,WAAS,WAAc,OAAU;AAC/B,WAAO,SAAS,WAAW,MAAM,IAAI,KAAK,WAAW,MAAM,KAAK,KAAK,WAAW,MAAM,QAAQ;EAChG;AAEA,WAAS,aAAgB,OAAU;AACjC,WAAQ,SAAS,iBAAiB,cAAgB,WAAW,KAAK,KAAK,eAAe,KAAK;EAC7F;;;ACzeM,WAAU,QAAQ,QAAW;AACjC,WAAO,WAAW,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,IAAI;EAChC;AAMM,WAAU,QACd,MAAqF;AAErF,WAAO,SAAC,QAAqB;AAC3B,UAAI,QAAQ,MAAM,GAAG;AACnB,eAAO,OAAO,KAAK,SAA+B,cAA2B;AAC3E,cAAI;AACF,mBAAO,KAAK,cAAc,IAAI;mBACvB,KAAK;AACZ,iBAAK,MAAM,GAAG;;QAElB,CAAC;;AAEH,YAAM,IAAI,UAAU,wCAAwC;IAC9D;EACF;;;ACjBM,WAAU,yBACd,aACA,QACA,YACA,SACA,YAAuB;AAEvB,WAAO,IAAI,mBAAmB,aAAa,QAAQ,YAAY,SAAS,UAAU;EACpF;AAMA,MAAA,qBAAA,SAAA,QAAA;AAA2C,cAAAE,qBAAA,MAAA;AAiBzC,aAAAA,oBACE,aACA,QACA,YACA,SACQ,YACA,mBAAiC;AAN3C,UAAA,QAoBE,OAAA,KAAA,MAAM,WAAW,KAAC;AAfV,YAAA,aAAA;AACA,YAAA,oBAAA;AAeR,YAAK,QAAQ,SACT,SAAuC,OAAQ;AAC7C,YAAI;AACF,iBAAO,KAAK;iBACL,KAAK;AACZ,sBAAY,MAAM,GAAG;;MAEzB,IACA,OAAA,UAAM;AACV,YAAK,SAAS,UACV,SAAuC,KAAQ;AAC7C,YAAI;AACF,kBAAQ,GAAG;iBACJC,MAAK;AAEZ,sBAAY,MAAMA,IAAG;;AAGrB,eAAK,YAAW;;MAEpB,IACA,OAAA,UAAM;AACV,YAAK,YAAY,aACb,WAAA;AACE,YAAI;AACF,qBAAU;iBACH,KAAK;AAEZ,sBAAY,MAAM,GAAG;;AAGrB,eAAK,YAAW;;MAEpB,IACA,OAAA,UAAM;;IACZ;AAEA,IAAAD,oBAAA,UAAA,cAAA,WAAA;;AACE,UAAI,CAAC,KAAK,qBAAqB,KAAK,kBAAiB,GAAI;AAC/C,YAAA,WAAW,KAAI;AACvB,eAAA,UAAM,YAAW,KAAA,IAAA;AAEjB,SAAC,cAAU,KAAA,KAAK,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAA,KAAf,IAAI;;IAEnB;AACF,WAAAA;EAAA,EAnF2C,UAAU;;;ACP9C,MAAM,0BAAuD,iBAClE,SAAC,QAAM;AACL,WAAA,SAAS,8BAA2B;AAClC,aAAO,IAAI;AACX,WAAK,OAAO;AACZ,WAAK,UAAU;IACjB;EAJA,CAIC;;;ACXL,MAAA,UAAA,SAAA,QAAA;AAAgC,cAAAE,UAAA,MAAA;AAwB9B,aAAAA,WAAA;AAAA,UAAA,QAEE,OAAA,KAAA,IAAA,KAAO;AAzBT,YAAA,SAAS;AAED,YAAA,mBAAyC;AAGjD,YAAA,YAA2B,CAAA;AAE3B,YAAA,YAAY;AAEZ,YAAA,WAAW;AAEX,YAAA,cAAmB;;IAenB;AAGA,IAAAA,SAAA,UAAA,OAAA,SAAQ,UAAwB;AAC9B,UAAM,UAAU,IAAI,iBAAiB,MAAM,IAAI;AAC/C,cAAQ,WAAW;AACnB,aAAO;IACT;AAGU,IAAAA,SAAA,UAAA,iBAAV,WAAA;AACE,UAAI,KAAK,QAAQ;AACf,cAAM,IAAI,wBAAuB;;IAErC;AAEA,IAAAA,SAAA,UAAA,OAAA,SAAK,OAAQ;AAAb,UAAA,QAAA;AACE,mBAAa,WAAA;;AACX,cAAK,eAAc;AACnB,YAAI,CAAC,MAAK,WAAW;AACnB,cAAI,CAAC,MAAK,kBAAkB;AAC1B,kBAAK,mBAAmB,MAAM,KAAK,MAAK,SAAS;;;AAEnD,qBAAuB,KAAA,SAAA,MAAK,gBAAgB,GAAA,KAAA,GAAA,KAAA,GAAA,CAAA,GAAA,MAAA,KAAA,GAAA,KAAA,GAAE;AAAzC,kBAAM,WAAQ,GAAA;AACjB,uBAAS,KAAK,KAAK;;;;;;;;;;;;;;MAGzB,CAAC;IACH;AAEA,IAAAA,SAAA,UAAA,QAAA,SAAM,KAAQ;AAAd,UAAA,QAAA;AACE,mBAAa,WAAA;AACX,cAAK,eAAc;AACnB,YAAI,CAAC,MAAK,WAAW;AACnB,gBAAK,WAAW,MAAK,YAAY;AACjC,gBAAK,cAAc;AACX,cAAA,YAAc,MAAI;AAC1B,iBAAO,UAAU,QAAQ;AACvB,sBAAU,MAAK,EAAI,MAAM,GAAG;;;MAGlC,CAAC;IACH;AAEA,IAAAA,SAAA,UAAA,WAAA,WAAA;AAAA,UAAA,QAAA;AACE,mBAAa,WAAA;AACX,cAAK,eAAc;AACnB,YAAI,CAAC,MAAK,WAAW;AACnB,gBAAK,YAAY;AACT,cAAA,YAAc,MAAI;AAC1B,iBAAO,UAAU,QAAQ;AACvB,sBAAU,MAAK,EAAI,SAAQ;;;MAGjC,CAAC;IACH;AAEA,IAAAA,SAAA,UAAA,cAAA,WAAA;AACE,WAAK,YAAY,KAAK,SAAS;AAC/B,WAAK,YAAY,KAAK,mBAAmB;IAC3C;AAEA,WAAA,eAAIA,SAAA,WAAA,YAAQ;WAAZ,WAAA;;AACE,iBAAO,KAAA,KAAK,eAAS,QAAA,OAAA,SAAA,SAAA,GAAE,UAAS;MAClC;;;;AAGU,IAAAA,SAAA,UAAA,gBAAV,SAAwB,YAAyB;AAC/C,WAAK,eAAc;AACnB,aAAO,OAAA,UAAM,cAAa,KAAA,MAAC,UAAU;IACvC;AAGU,IAAAA,SAAA,UAAA,aAAV,SAAqB,YAAyB;AAC5C,WAAK,eAAc;AACnB,WAAK,wBAAwB,UAAU;AACvC,aAAO,KAAK,gBAAgB,UAAU;IACxC;AAGU,IAAAA,SAAA,UAAA,kBAAV,SAA0B,YAA2B;AAArD,UAAA,QAAA;AACQ,UAAA,KAAqC,MAAnC,WAAQ,GAAA,UAAE,YAAS,GAAA,WAAE,YAAS,GAAA;AACtC,UAAI,YAAY,WAAW;AACzB,eAAO;;AAET,WAAK,mBAAmB;AACxB,gBAAU,KAAK,UAAU;AACzB,aAAO,IAAI,aAAa,WAAA;AACtB,cAAK,mBAAmB;AACxB,kBAAU,WAAW,UAAU;MACjC,CAAC;IACH;AAGU,IAAAA,SAAA,UAAA,0BAAV,SAAkC,YAA2B;AACrD,UAAA,KAAuC,MAArC,WAAQ,GAAA,UAAE,cAAW,GAAA,aAAE,YAAS,GAAA;AACxC,UAAI,UAAU;AACZ,mBAAW,MAAM,WAAW;iBACnB,WAAW;AACpB,mBAAW,SAAQ;;IAEvB;AAQA,IAAAA,SAAA,UAAA,eAAA,WAAA;AACE,UAAMC,cAAkB,IAAI,WAAU;AACtC,MAAAA,YAAW,SAAS;AACpB,aAAOA;IACT;AAxHO,IAAAD,SAAA,SAAkC,SAAI,aAA0B,QAAqB;AAC1F,aAAO,IAAI,iBAAoB,aAAa,MAAM;IACpD;AAuHF,WAAAA;IA7IgC,UAAU;AAkJ1C,MAAA,mBAAA,SAAA,QAAA;AAAyC,cAAAE,mBAAA,MAAA;AACvC,aAAAA,kBAES,aACP,QAAsB;AAHxB,UAAA,QAKE,OAAA,KAAA,IAAA,KAAO;AAHA,YAAA,cAAA;AAIP,YAAK,SAAS;;IAChB;AAEA,IAAAA,kBAAA,UAAA,OAAA,SAAK,OAAQ;;AACX,OAAA,MAAA,KAAA,KAAK,iBAAW,QAAA,OAAA,SAAA,SAAA,GAAE,UAAI,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,KAAK;IAChC;AAEA,IAAAA,kBAAA,UAAA,QAAA,SAAM,KAAQ;;AACZ,OAAA,MAAA,KAAA,KAAK,iBAAW,QAAA,OAAA,SAAA,SAAA,GAAE,WAAK,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,GAAG;IAC/B;AAEA,IAAAA,kBAAA,UAAA,WAAA,WAAA;;AACE,OAAA,MAAA,KAAA,KAAK,iBAAW,QAAA,OAAA,SAAA,SAAA,GAAE,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,EAAA;IAC5B;AAGU,IAAAA,kBAAA,UAAA,aAAV,SAAqB,YAAyB;;AAC5C,cAAO,MAAA,KAAA,KAAK,YAAM,QAAA,OAAA,SAAA,SAAA,GAAE,UAAU,UAAU,OAAC,QAAA,OAAA,SAAA,KAAI;IAC/C;AACF,WAAAA;EAAA,EA1ByC,OAAO;;;ACxJhD,MAAA,kBAAA,SAAA,QAAA;AAAwC,cAAAC,kBAAA,MAAA;AACtC,aAAAA,iBAAoB,QAAS;AAA7B,UAAA,QACE,OAAA,KAAA,IAAA,KAAO;AADW,YAAA,SAAA;;IAEpB;AAEA,WAAA,eAAIA,iBAAA,WAAA,SAAK;WAAT,WAAA;AACE,eAAO,KAAK,SAAQ;MACtB;;;;AAGU,IAAAA,iBAAA,UAAA,aAAV,SAAqB,YAAyB;AAC5C,UAAM,eAAe,OAAA,UAAM,WAAU,KAAA,MAAC,UAAU;AAChD,OAAC,aAAa,UAAU,WAAW,KAAK,KAAK,MAAM;AACnD,aAAO;IACT;AAEA,IAAAA,iBAAA,UAAA,WAAA,WAAA;AACQ,UAAA,KAAoC,MAAlC,WAAQ,GAAA,UAAE,cAAW,GAAA,aAAE,SAAM,GAAA;AACrC,UAAI,UAAU;AACZ,cAAM;;AAER,WAAK,eAAc;AACnB,aAAO;IACT;AAEA,IAAAA,iBAAA,UAAA,OAAA,SAAK,OAAQ;AACX,aAAA,UAAM,KAAI,KAAA,MAAE,KAAK,SAAS,KAAM;IAClC;AACF,WAAAA;EAAA,EA5BwC,OAAO;;;ACJxC,MAAM,wBAA+C;IAC1D,KAAG,WAAA;AAGD,cAAQ,sBAAsB,YAAY,MAAM,IAAG;IACrD;IACA,UAAU;;;;ACMZ,MAAA,SAAA,SAAA,QAAA;AAA+B,cAAAC,SAAA,MAAA;AAC7B,aAAAA,QAAY,WAAsB,MAAmD;aACnF,OAAA,KAAA,IAAA,KAAO;IACT;AAWO,IAAAA,QAAA,UAAA,WAAP,SAAgB,OAAW,OAAiB;AAAjB,UAAA,UAAA,QAAA;AAAA,gBAAA;MAAiB;AAC1C,aAAO;IACT;AACF,WAAAA;EAAA,EAjB+B,YAAY;;;ACHpC,MAAM,mBAAqC;IAGhD,aAAA,SAAY,SAAqB,SAAgB;AAAE,UAAA,OAAA,CAAA;eAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAO;AAAP,aAAA,KAAA,CAAA,IAAA,UAAA,EAAA;;AACzC,UAAA,WAAa,iBAAgB;AACrC,UAAI,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,aAAa;AACzB,eAAO,SAAS,YAAW,MAApB,UAAQ,cAAA,CAAa,SAAS,OAAO,GAAA,OAAK,IAAI,CAAA,CAAA;;AAEvD,aAAO,YAAW,MAAA,QAAA,cAAA,CAAC,SAAS,OAAO,GAAA,OAAK,IAAI,CAAA,CAAA;IAC9C;IACA,eAAA,SAAc,QAAM;AACV,UAAA,WAAa,iBAAgB;AACrC,eAAQ,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,kBAAiB,eAAe,MAAa;IACjE;IACA,UAAU;;;;ACrBZ,MAAA,cAAA,SAAA,QAAA;AAAoC,cAAAC,cAAA,MAAA;AAOlC,aAAAA,aAAsB,WAAqC,MAAmD;AAA9G,UAAA,QACE,OAAA,KAAA,MAAM,WAAW,IAAI,KAAC;AADF,YAAA,YAAA;AAAqC,YAAA,OAAA;AAFjD,YAAA,UAAmB;;IAI7B;AAEO,IAAAA,aAAA,UAAA,WAAP,SAAgB,OAAW,OAAiB;;AAAjB,UAAA,UAAA,QAAA;AAAA,gBAAA;MAAiB;AAC1C,UAAI,KAAK,QAAQ;AACf,eAAO;;AAIT,WAAK,QAAQ;AAEb,UAAM,KAAK,KAAK;AAChB,UAAM,YAAY,KAAK;AAuBvB,UAAI,MAAM,MAAM;AACd,aAAK,KAAK,KAAK,eAAe,WAAW,IAAI,KAAK;;AAKpD,WAAK,UAAU;AAEf,WAAK,QAAQ;AAEb,WAAK,MAAK,KAAA,KAAK,QAAE,QAAA,OAAA,SAAA,KAAI,KAAK,eAAe,WAAW,KAAK,IAAI,KAAK;AAElE,aAAO;IACT;AAEU,IAAAA,aAAA,UAAA,iBAAV,SAAyB,WAA2B,KAAmB,OAAiB;AAAjB,UAAA,UAAA,QAAA;AAAA,gBAAA;MAAiB;AACtF,aAAO,iBAAiB,YAAY,UAAU,MAAM,KAAK,WAAW,IAAI,GAAG,KAAK;IAClF;AAEU,IAAAA,aAAA,UAAA,iBAAV,SAAyB,YAA4B,IAAkB,OAAwB;AAAxB,UAAA,UAAA,QAAA;AAAA,gBAAA;MAAwB;AAE7F,UAAI,SAAS,QAAQ,KAAK,UAAU,SAAS,KAAK,YAAY,OAAO;AACnE,eAAO;;AAIT,UAAI,MAAM,MAAM;AACd,yBAAiB,cAAc,EAAE;;AAGnC,aAAO;IACT;AAMO,IAAAA,aAAA,UAAA,UAAP,SAAe,OAAU,OAAa;AACpC,UAAI,KAAK,QAAQ;AACf,eAAO,IAAI,MAAM,8BAA8B;;AAGjD,WAAK,UAAU;AACf,UAAM,QAAQ,KAAK,SAAS,OAAO,KAAK;AACxC,UAAI,OAAO;AACT,eAAO;iBACE,KAAK,YAAY,SAAS,KAAK,MAAM,MAAM;AAcpD,aAAK,KAAK,KAAK,eAAe,KAAK,WAAW,KAAK,IAAI,IAAI;;IAE/D;AAEU,IAAAA,aAAA,UAAA,WAAV,SAAmB,OAAU,QAAc;AACzC,UAAI,UAAmB;AACvB,UAAI;AACJ,UAAI;AACF,aAAK,KAAK,KAAK;eACR,GAAG;AACV,kBAAU;AAIV,qBAAa,IAAI,IAAI,IAAI,MAAM,oCAAoC;;AAErE,UAAI,SAAS;AACX,aAAK,YAAW;AAChB,eAAO;;IAEX;AAEA,IAAAA,aAAA,UAAA,cAAA,WAAA;AACE,UAAI,CAAC,KAAK,QAAQ;AACV,YAAA,KAAoB,MAAlB,KAAE,GAAA,IAAE,YAAS,GAAA;AACb,YAAA,UAAY,UAAS;AAE7B,aAAK,OAAO,KAAK,QAAQ,KAAK,YAAY;AAC1C,aAAK,UAAU;AAEf,kBAAU,SAAS,IAAI;AACvB,YAAI,MAAM,MAAM;AACd,eAAK,KAAK,KAAK,eAAe,WAAW,IAAI,IAAI;;AAGnD,aAAK,QAAQ;AACb,eAAA,UAAM,YAAW,KAAA,IAAA;;IAErB;AACF,WAAAA;EAAA,EA9IoC,MAAM;;;ACgB1C,MAAA,YAAA,WAAA;AAGE,aAAAC,WAAoB,qBAAoC,KAAiC;AAAjC,UAAA,QAAA,QAAA;AAAA,cAAoBA,WAAU;MAAG;AAArE,WAAA,sBAAA;AAClB,WAAK,MAAM;IACb;AA6BO,IAAAA,WAAA,UAAA,WAAP,SAAmB,MAAqD,OAAmB,OAAS;AAA5B,UAAA,UAAA,QAAA;AAAA,gBAAA;MAAiB;AACvF,aAAO,IAAI,KAAK,oBAAuB,MAAM,IAAI,EAAE,SAAS,OAAO,KAAK;IAC1E;AAnCc,IAAAA,WAAA,MAAoB,sBAAsB;AAoC1D,WAAAA;IArCA;;;ACnBA,MAAA,iBAAA,SAAA,QAAA;AAAoC,cAAAC,iBAAA,MAAA;AAkBlC,aAAAA,gBAAY,iBAAgC,KAAiC;AAAjC,UAAA,QAAA,QAAA;AAAA,cAAoB,UAAU;MAAG;AAA7E,UAAA,QACE,OAAA,KAAA,MAAM,iBAAiB,GAAG,KAAC;AAlBtB,YAAA,UAAmC,CAAA;AAOnC,YAAA,UAAmB;;IAY1B;AAEO,IAAAA,gBAAA,UAAA,QAAP,SAAa,QAAwB;AAC3B,UAAA,UAAY,KAAI;AAExB,UAAI,KAAK,SAAS;AAChB,gBAAQ,KAAK,MAAM;AACnB;;AAGF,UAAI;AACJ,WAAK,UAAU;AAEf,SAAG;AACD,YAAK,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,KAAK,GAAI;AACxD;;eAEM,SAAS,QAAQ,MAAK;AAEhC,WAAK,UAAU;AAEf,UAAI,OAAO;AACT,eAAQ,SAAS,QAAQ,MAAK,GAAM;AAClC,iBAAO,YAAW;;AAEpB,cAAM;;IAEV;AACF,WAAAA;EAAA,EAhDoC,SAAS;;;AC6CtC,MAAM,iBAAiB,IAAI,eAAe,WAAW;;;AClDrD,MAAM,cAAe,SAAI,GAAM;AAAwB,WAAA,KAAK,OAAO,EAAE,WAAW,YAAY,OAAO,MAAM;EAAlD;;;ACMxD,WAAU,UAAU,OAAU;AAClC,WAAO,WAAW,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,IAAI;EAC/B;;;ACHM,WAAU,oBAAoB,OAAU;AAC5C,WAAO,WAAW,MAAM,UAAiB,CAAC;EAC5C;;;ACLM,WAAU,gBAAmB,KAAQ;AACzC,WAAO,OAAO,iBAAiB,WAAW,QAAG,QAAH,QAAG,SAAA,SAAH,IAAM,OAAO,aAAa,CAAC;EACvE;;;ACAM,WAAU,iCAAiC,OAAU;AAEzD,WAAO,IAAI,UACT,mBACE,UAAU,QAAQ,OAAO,UAAU,WAAW,sBAAsB,MAAI,QAAK,OAAG,0HACwC;EAE9H;;;ACXM,WAAU,oBAAiB;AAC/B,QAAI,OAAO,WAAW,cAAc,CAAC,OAAO,UAAU;AACpD,aAAO;;AAGT,WAAO,OAAO;EAChB;AAEO,MAAM,WAAW,kBAAiB;;;ACJnC,WAAU,WAAW,OAAU;AACnC,WAAO,WAAW,UAAK,QAAL,UAAK,SAAA,SAAL,MAAQ,QAAe,CAAC;EAC5C;;;ACHM,WAAiB,mCAAsC,gBAAqC;;;;;;AAC1F,qBAAS,eAAe,UAAS;;;;;;;AAE1B,qBAAA,CAAA,GAAA,CAAA;AACe,mBAAA,CAAA,GAAA,QAAM,OAAO,KAAI,CAAE,CAAA;;AAArC,iBAAkB,GAAA,KAAA,GAAhB,QAAK,GAAA,OAAE,OAAI,GAAA;iBACf;AAAA,qBAAA,CAAA,GAAA,CAAA;;;AACF,mBAAA,CAAA,GAAA,GAAA,KAAA,CAAA;;+BAEI,KAAM,CAAA;;AAAZ,mBAAA,CAAA,GAAA,GAAA,KAAA,CAAA;;AAAA,eAAA,KAAA;;;;;AAGF,mBAAO,YAAW;;;;;;;;AAIhB,WAAU,qBAAwB,KAAQ;AAG9C,WAAO,WAAW,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,SAAS;EAClC;;;ACPM,WAAU,UAAa,OAAyB;AACpD,QAAI,iBAAiB,YAAY;AAC/B,aAAO;;AAET,QAAI,SAAS,MAAM;AACjB,UAAI,oBAAoB,KAAK,GAAG;AAC9B,eAAO,sBAAsB,KAAK;;AAEpC,UAAI,YAAY,KAAK,GAAG;AACtB,eAAO,cAAc,KAAK;;AAE5B,UAAI,UAAU,KAAK,GAAG;AACpB,eAAO,YAAY,KAAK;;AAE1B,UAAI,gBAAgB,KAAK,GAAG;AAC1B,eAAO,kBAAkB,KAAK;;AAEhC,UAAI,WAAW,KAAK,GAAG;AACrB,eAAO,aAAa,KAAK;;AAE3B,UAAI,qBAAqB,KAAK,GAAG;AAC/B,eAAO,uBAAuB,KAAK;;;AAIvC,UAAM,iCAAiC,KAAK;EAC9C;AAMM,WAAU,sBAAyB,KAAQ;AAC/C,WAAO,IAAI,WAAW,SAAC,YAAyB;AAC9C,UAAM,MAAM,IAAI,UAAiB,EAAC;AAClC,UAAI,WAAW,IAAI,SAAS,GAAG;AAC7B,eAAO,IAAI,UAAU,UAAU;;AAGjC,YAAM,IAAI,UAAU,gEAAgE;IACtF,CAAC;EACH;AASM,WAAU,cAAiB,OAAmB;AAClD,WAAO,IAAI,WAAW,SAAC,YAAyB;AAU9C,eAAS,IAAI,GAAG,IAAI,MAAM,UAAU,CAAC,WAAW,QAAQ,KAAK;AAC3D,mBAAW,KAAK,MAAM,CAAC,CAAC;;AAE1B,iBAAW,SAAQ;IACrB,CAAC;EACH;AAEM,WAAU,YAAe,SAAuB;AACpD,WAAO,IAAI,WAAW,SAAC,YAAyB;AAC9C,cACG,KACC,SAAC,OAAK;AACJ,YAAI,CAAC,WAAW,QAAQ;AACtB,qBAAW,KAAK,KAAK;AACrB,qBAAW,SAAQ;;MAEvB,GACA,SAAC,KAAQ;AAAK,eAAA,WAAW,MAAM,GAAG;MAApB,CAAqB,EAEpC,KAAK,MAAM,oBAAoB;IACpC,CAAC;EACH;AAEM,WAAU,aAAgB,UAAqB;AACnD,WAAO,IAAI,WAAW,SAAC,YAAyB;;;AAC9C,iBAAoB,aAAA,SAAA,QAAQ,GAAA,eAAA,WAAA,KAAA,GAAA,CAAA,aAAA,MAAA,eAAA,WAAA,KAAA,GAAE;AAAzB,cAAM,QAAK,aAAA;AACd,qBAAW,KAAK,KAAK;AACrB,cAAI,WAAW,QAAQ;AACrB;;;;;;;;;;;;;;AAGJ,iBAAW,SAAQ;IACrB,CAAC;EACH;AAEM,WAAU,kBAAqB,eAA+B;AAClE,WAAO,IAAI,WAAW,SAAC,YAAyB;AAC9C,cAAQ,eAAe,UAAU,EAAE,MAAM,SAAC,KAAG;AAAK,eAAA,WAAW,MAAM,GAAG;MAApB,CAAqB;IACzE,CAAC;EACH;AAEM,WAAU,uBAA0B,gBAAqC;AAC7E,WAAO,kBAAkB,mCAAmC,cAAc,CAAC;EAC7E;AAEA,WAAe,QAAW,eAAiC,YAAyB;;;;;;;;;AACxD,8BAAA,cAAA,aAAa;;;;;;;AAAtB,oBAAK,kBAAA;AACpB,uBAAW,KAAK,KAAK;AAGrB,gBAAI,WAAW,QAAQ;AACrB,qBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGJ,uBAAW,SAAQ;;;;;;;;AChHf,WAAU,gBACd,oBACA,WACA,MACA,OACA,QAAc;AADd,QAAA,UAAA,QAAA;AAAA,cAAA;IAAS;AACT,QAAA,WAAA,QAAA;AAAA,eAAA;IAAc;AAEd,QAAM,uBAAuB,UAAU,SAAS,WAAA;AAC9C,WAAI;AACJ,UAAI,QAAQ;AACV,2BAAmB,IAAI,KAAK,SAAS,MAAM,KAAK,CAAC;aAC5C;AACL,aAAK,YAAW;;IAEpB,GAAG,KAAK;AAER,uBAAmB,IAAI,oBAAoB;AAE3C,QAAI,CAAC,QAAQ;AAKX,aAAO;;EAEX;;;ACIM,WAAU,IAAU,SAAyC,SAAa;AAC9E,WAAO,QAAQ,SAAC,QAAQ,YAAU;AAEhC,UAAI,QAAQ;AAGZ,aAAO,UACL,yBAAyB,YAAY,SAAC,OAAQ;AAG5C,mBAAW,KAAK,QAAQ,KAAK,SAAS,OAAO,OAAO,CAAC;MACvD,CAAC,CAAC;IAEN,CAAC;EACH;;;AC1DQ,MAAA,UAAY,MAAK;AAEzB,WAAS,YAAkB,IAA6B,MAAW;AAC/D,WAAO,QAAQ,IAAI,IAAI,GAAE,MAAA,QAAA,cAAA,CAAA,GAAA,OAAI,IAAI,CAAA,CAAA,IAAI,GAAG,IAAI;EAChD;AAMM,WAAU,iBAAuB,IAA2B;AAC9D,WAAO,IAAI,SAAA,MAAI;AAAI,aAAA,YAAY,IAAI,IAAI;IAApB,CAAqB;EAC5C;;;ACKM,WAAU,eACd,QACA,YACA,SACA,YACA,cACA,QACA,mBACA,qBAAgC;AAGhC,QAAM,SAAc,CAAA;AAEpB,QAAI,SAAS;AAEb,QAAI,QAAQ;AAEZ,QAAI,aAAa;AAKjB,QAAM,gBAAgB,WAAA;AAIpB,UAAI,cAAc,CAAC,OAAO,UAAU,CAAC,QAAQ;AAC3C,mBAAW,SAAQ;;IAEvB;AAGA,QAAM,YAAY,SAAC,OAAQ;AAAK,aAAC,SAAS,aAAa,WAAW,KAAK,IAAI,OAAO,KAAK,KAAK;IAA5D;AAEhC,QAAM,aAAa,SAAC,OAAQ;AAI1B,gBAAU,WAAW,KAAK,KAAY;AAItC;AAKA,UAAI,gBAAgB;AAGpB,gBAAU,QAAQ,OAAO,OAAO,CAAC,EAAE,UACjC,yBACE,YACA,SAAC,YAAU;AAGT,yBAAY,QAAZ,iBAAY,SAAA,SAAZ,aAAe,UAAU;AAEzB,YAAI,QAAQ;AAGV,oBAAU,UAAiB;eACtB;AAEL,qBAAW,KAAK,UAAU;;MAE9B,GACA,WAAA;AAGE,wBAAgB;MAClB,GAEA,QACA,WAAA;AAIE,YAAI,eAAe;AAKjB,cAAI;AAIF;;AAME,kBAAM,gBAAgB,OAAO,MAAK;AAIlC,kBAAI,mBAAmB;AACrB,gCAAgB,YAAY,mBAAmB,WAAA;AAAM,yBAAA,WAAW,aAAa;gBAAxB,CAAyB;qBACzE;AACL,2BAAW,aAAa;;;AAR5B,mBAAO,OAAO,UAAU,SAAS,YAAU;;;AAY3C,0BAAa;mBACN,KAAK;AACZ,uBAAW,MAAM,GAAG;;;MAG1B,CAAC,CACF;IAEL;AAGA,WAAO,UACL,yBAAyB,YAAY,WAAW,WAAA;AAE9C,mBAAa;AACb,oBAAa;IACf,CAAC,CAAC;AAKJ,WAAO,WAAA;AACL,8BAAmB,QAAnB,wBAAmB,SAAA,SAAnB,oBAAmB;IACrB;EACF;;;AClEM,WAAU,SACd,SACA,gBACA,YAA6B;AAA7B,QAAA,eAAA,QAAA;AAAA,mBAAA;IAA6B;AAE7B,QAAI,WAAW,cAAc,GAAG;AAE9B,aAAO,SAAS,SAAC,GAAG,GAAC;AAAK,eAAA,IAAI,SAAC,GAAQ,IAAU;AAAK,iBAAA,eAAe,GAAG,GAAG,GAAG,EAAE;QAA1B,CAA2B,EAAE,UAAU,QAAQ,GAAG,CAAC,CAAC,CAAC;MAAjF,GAAoF,UAAU;eAC/G,OAAO,mBAAmB,UAAU;AAC7C,mBAAa;;AAGf,WAAO,QAAQ,SAAC,QAAQ,YAAU;AAAK,aAAA,eAAe,QAAQ,YAAY,SAAS,UAAU;IAAtD,CAAuD;EAChG;;;ACvFA,MAAM,0BAA0B,CAAC,eAAe,gBAAgB;AAChE,MAAM,qBAAqB,CAAC,oBAAoB,qBAAqB;AACrE,MAAM,gBAAgB,CAAC,MAAM,KAAK;AAkO5B,WAAU,UACd,QACA,WACA,SACA,gBAAsC;AAEtC,QAAI,WAAW,OAAO,GAAG;AACvB,uBAAiB;AACjB,gBAAU;;AAEZ,QAAI,gBAAgB;AAClB,aAAO,UAAa,QAAQ,WAAW,OAA+B,EAAE,KAAK,iBAAiB,cAAc,CAAC;;AAUzG,QAAA,KAAA,OAEJ,cAAc,MAAM,IAChB,mBAAmB,IAAI,SAAC,YAAU;AAAK,aAAA,SAAC,SAAY;AAAK,eAAA,OAAO,UAAU,EAAE,WAAW,SAAS,OAA+B;MAAtE;IAAlB,CAAyF,IAElI,wBAAwB,MAAM,IAC5B,wBAAwB,IAAI,wBAAwB,QAAQ,SAAS,CAAC,IACtE,0BAA0B,MAAM,IAChC,cAAc,IAAI,wBAAwB,QAAQ,SAAS,CAAC,IAC5D,CAAA,GAAE,CAAA,GATD,MAAG,GAAA,CAAA,GAAE,SAAM,GAAA,CAAA;AAgBlB,QAAI,CAAC,KAAK;AACR,UAAI,YAAY,MAAM,GAAG;AACvB,eAAO,SAAS,SAAC,WAAc;AAAK,iBAAA,UAAU,WAAW,WAAW,OAA+B;QAA/D,CAAgE,EAClG,UAAU,MAAM,CAAC;;;AAOvB,QAAI,CAAC,KAAK;AACR,YAAM,IAAI,UAAU,sBAAsB;;AAG5C,WAAO,IAAI,WAAc,SAAC,YAAU;AAIlC,UAAM,UAAU,WAAA;AAAC,YAAA,OAAA,CAAA;iBAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAc;AAAd,eAAA,EAAA,IAAA,UAAA,EAAA;;AAAmB,eAAA,WAAW,KAAK,IAAI,KAAK,SAAS,OAAO,KAAK,CAAC,CAAC;MAAhD;AAEpC,UAAI,OAAO;AAEX,aAAO,WAAA;AAAM,eAAA,OAAQ,OAAO;MAAf;IACf,CAAC;EACH;AASA,WAAS,wBAAwB,QAAa,WAAiB;AAC7D,WAAO,SAAC,YAAkB;AAAK,aAAA,SAAC,SAAY;AAAK,eAAA,OAAO,UAAU,EAAE,WAAW,OAAO;MAArC;IAAlB;EACjC;AAOA,WAAS,wBAAwB,QAAW;AAC1C,WAAO,WAAW,OAAO,WAAW,KAAK,WAAW,OAAO,cAAc;EAC3E;AAOA,WAAS,0BAA0B,QAAW;AAC5C,WAAO,WAAW,OAAO,EAAE,KAAK,WAAW,OAAO,GAAG;EACvD;AAOA,WAAS,cAAc,QAAW;AAChC,WAAO,WAAW,OAAO,gBAAgB,KAAK,WAAW,OAAO,mBAAmB;EACrF;;;AChRM,WAAU,aAAgB,SAAiB,WAAyC;AAAzC,QAAA,cAAA,QAAA;AAAA,kBAAA;IAAyC;AACxF,WAAO,QAAQ,SAAC,QAAQ,YAAU;AAChC,UAAI,aAAkC;AACtC,UAAI,YAAsB;AAC1B,UAAI,WAA0B;AAE9B,UAAM,OAAO,WAAA;AACX,YAAI,YAAY;AAEd,qBAAW,YAAW;AACtB,uBAAa;AACb,cAAM,QAAQ;AACd,sBAAY;AACZ,qBAAW,KAAK,KAAK;;MAEzB;AACA,eAAS,eAAY;AAInB,YAAM,aAAa,WAAY;AAC/B,YAAM,MAAM,UAAU,IAAG;AACzB,YAAI,MAAM,YAAY;AAEpB,uBAAa,KAAK,SAAS,QAAW,aAAa,GAAG;AACtD,qBAAW,IAAI,UAAU;AACzB;;AAGF,aAAI;MACN;AAEA,aAAO,UACL,yBACE,YACA,SAAC,OAAQ;AACP,oBAAY;AACZ,mBAAW,UAAU,IAAG;AAGxB,YAAI,CAAC,YAAY;AACf,uBAAa,UAAU,SAAS,cAAc,OAAO;AACrD,qBAAW,IAAI,UAAU;;MAE7B,GACA,WAAA;AAGE,aAAI;AACJ,mBAAW,SAAQ;MACrB,GAEA,QACA,WAAA;AAEE,oBAAY,aAAa;MAC3B,CAAC,CACF;IAEL,CAAC;EACH;;;ACpHO,MAAM,uBAAN,MAAuD;AAAA,IAC1D;AAAA,IACA,YAAY,MAAyB;AACjC,WAAK,QAAQ;AAAA,IACjB;AAAA,IACA,UAAU,UAA0C;AAChD,YAAM,eAAe,KAAK,MAAM,UAAU,QAAQ;AAClD,YAAM,aAAyB;AAAA,QAC3B,UAAgB;AACZ,uBAAa,YAAY;AAAA,QAC7B;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,EACJ;;;ACbO,MAAM,WAAN,MAAsC;AAAA,IAChC;AAAA;AAAA;AAAA,IAGT,YAAY,IAAwB,aAAoC,CAAC,GAAG;AACxE,WAAK,MAAM;AAAA,IAEf;AAAA,IACA,MAAS;AACL,aAAO,KAAK,IAAI,SAAS;AAAA,IAC7B;AAAA,IACA,IAAI,UAAmB;AAEnB,WAAK,IAAI,KAAK,QAAQ;AAAA,IAiB1B;AAAA,IACA,eAA8B;AAC1B,aAAO,IAAI,qBAAqB,KAAK,IAAI,aAAa,CAAC;AAAA,IAC3D;AAAA,EACJ;AAGO,WAAS,SAAY,cAAiB,aAAoC,CAAC,GAAgB;AAC9F,UAAM,KAAK,IAAI,gBAAgB,YAAY;AAC3C,WAAO,IAAI,SAAS,IAAI,UAAU;AAAA,EACtC;;;AChDA,MAAM,MAAM,KAAK;AAQjB,WAAS,iBAAiB,GAAW,GAAqB;AACtD,UAAM,IAAc,CAAC;AACrB,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,QAAE,KAAK,CAAC;AAAA,IACZ;AACA,WAAO;AAAA,EACX;AAKA,WAAS,uBAAuB,GAAe,QAAgB,GAAmB;AAC9E,QAAI,UAAU,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC;AACnC,QAAI,SAAS;AACb,aAAS,MAAM,SAAS,GAAG,MAAM,GAAG,OAAO;AACvC,UAAI,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,IAAI,SAAS;AAC/B,kBAAU,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC;AAC5B,iBAAS;AAAA,MACb;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAKA,WAAS,SAAS,GAAe,GAAW,GAAW,GAAW;AAC9D,UAAM,YAAY,IAAI;AACtB,aAAS,SAAS,GAAG,SAAS,WAAW,UAAU;AAC/C,YAAM,OAAO,EAAE,CAAC,EAAE,MAAM;AACxB,QAAE,CAAC,EAAE,MAAM,IAAI,EAAE,CAAC,EAAE,MAAM;AAC1B,QAAE,CAAC,EAAE,MAAM,IAAI;AAAA,IACnB;AAAA,EACJ;AAQA,WAAS,cAAc,GAAe,GAAW,GAAiB;AAC9D,aAAS,MAAM,IAAI,GAAG,MAAM,GAAG,OAAO;AAClC,YAAM,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;AAC7B,eAAS,SAAS,GAAG,SAAS,IAAI,GAAG,UAAU;AAC3C,YAAI,MAAM,QAAQ;AACd,YAAE,GAAG,EAAE,MAAM,IAAI;AAAA,QACrB,OACK;AACD,YAAE,GAAG,EAAE,MAAM,KAAK,IAAI,EAAE,CAAC,EAAE,MAAM;AAAA,QACrC;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAQA,WAAS,MAAM,GAAe,GAAW;AACrC,UAAM,IAAI,iBAAiB,GAAG,CAAC;AAC/B,aAAS,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK;AAC7B,QAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;AACvB,eAAS,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK;AAC7B,UAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;AAAA,MAC5B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAYO,WAAS,MAAM,GAAe,GAAuB;AAExD,UAAM,IAAI,EAAE;AAEZ,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAM,KAAK,EAAE,CAAC;AACd,YAAM,KAAK,EAAE,CAAC;AACd,SAAG,KAAK,EAAE;AAAA,IACd;AAEA,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,eAAS,GAAG,GAAG,uBAAuB,GAAG,GAAG,CAAC,GAAG,CAAC;AACjD,oBAAc,GAAG,GAAG,CAAC;AAAA,IACzB;AAEA,WAAO,MAAM,GAAG,CAAC;AAAA,EACrB;;;ACvGA,MAAM,OAAO,KAAK;AAWX,WAAS,oBAAoB,GAAqB,GAAqB,GAAc;AACxF,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,KAAK,KAAK,KAAK;AAC1B,UAAM,OAAO,KAAK,EAAE;AACpB,UAAM,KAAK,KAAK,KAAK,KAAK;AAC1B,UAAM,OAAO,KAAK,EAAE;AACpB,UAAM,KAAK,OAAO;AAClB,UAAM,QAAQ,KAAK,KAAK,KAAK;AAC7B,UAAM,QAAQ,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM;AAC7C,QAAI,UAAU,GAAG;AACb,YAAM,IAAI,KAAK,KAAK,KAAK;AACzB,QAAE,IAAI,GAAG,IAAI,KAAK,SAAS,OAAO,IAAI,KAAK;AAAA,IAC/C,OACK;AAAA,IAKL;AAAA,EACJ;;;ACxBA,WAAS,eAAe,GAAoB;AACxC,WAAO,EAAE,MAAM,KAAK,EAAE,MAAM;AAAA,EAChC;AAEA,WAAS,iBAAiB,GAAsB;AAC5C,WAAO,EAAE,MAAM;AAAA,EACnB;AAEA,WAAS,oBAAoB,GAAuB;AAChD,WAAO,eAAe,CAAC,KAAK,iBAAiB,CAAC,KAAK,EAAE,MAAM,KAAK,EAAE,MAAM;AAAA,EAC5E;AAOA,MAAM,WAAW,KAAK,KAAK,OAAO;AAQlC,WAAS,KAAK,GAAa;AACvB,MAAE,KAAK;AACP,WAAO;AAAA,EACX;AAKA,WAAS,SAAS,GAAiB;AAC/B,WAAO,EAAE,MAAM,KAAK,EAAE,MAAM,KAAK,EAAE,MAAM;AAAA,EAC7C;AAOA,MAAM,UAAU;AAChB,MAAM,UAAU;AAChB,MAAM,UAAU;AAChB,MAAM,UAAU;AAKT,MAAM,MAAN,MAAM,KAAI;AAAA,IAEJ;AAAA,IAET,QAAQ;AAAA,IAEC,UAAU,SAAS,IAAI;AAAA,IACvB,UAAU,KAAK,QAAQ,aAAa;AAAA,IAE7C,YAAY,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AACpC,WAAK,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,IAC9B;AAAA,IAEA,OAAO,OAAO,GAAgB;AAC1B,aAAO,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC7B;AAAA,IAEA,OAAO,SAAS,GAAgB;AAC5B,aAAO,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC7B;AAAA,IAEA,OAAO,OAAO,GAAW,GAAgB;AACrC,aAAO,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC7B;AAAA,IAEA,OAAO,OAAO,GAAW,GAAgB;AACrC,aAAO,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,WAAoB;AAChB,aAAO,KAAK,UAAU;AAAA,IAC1B;AAAA,IAEA,YAAqB;AACjB,aAAO,KAAK,UAAU;AAAA,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,OAAe;AACX,UAAI,KAAK,UAAU,UAAU;AACzB,cAAM,IAAI,MAAM,gBAAgB;AAAA,MACpC,OACK;AACD,aAAK,QAAQ,KAAK,OAAO;AACzB,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,OAAO,OAAqB;AACxB,UAAI,KAAK,UAAU,UAAU;AACzB,cAAM,IAAI,MAAM,YAAY;AAAA,MAChC,WACS,KAAK,UAAU,OAAO;AAC3B,aAAK,QAAQ;AACb,eAAO;AAAA,MACX,OACK;AACD,cAAM,IAAI,MAAM,eAAe;AAAA,MACnC;AAAA,IACJ;AAAA,IAEA,IAAI,IAAY;AACZ,aAAO,KAAK,QAAQ,OAAO;AAAA,IAC/B;AAAA,IAEA,IAAI,EAAE,GAAW;AACb,UAAI,OAAO,MAAM,UAAU;AACvB,YAAI,KAAK,MAAM,GAAG;AACd,eAAK,QAAQ,OAAO,IAAI;AACxB,eAAK,QAAQ,IAAI,IAAI;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,IAAI,IAAY;AACZ,aAAO,KAAK,QAAQ,OAAO;AAAA,IAC/B;AAAA,IAEA,IAAI,EAAE,GAAW;AACb,UAAI,OAAO,MAAM,UAAU;AACvB,YAAI,KAAK,MAAM,GAAG;AACd,eAAK,QAAQ,OAAO,IAAI;AACxB,eAAK,QAAQ,IAAI,IAAI;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,IAAI,IAAY;AACZ,aAAO,KAAK,QAAQ,OAAO;AAAA,IAC/B;AAAA,IAEA,IAAI,EAAE,GAAW;AACb,UAAI,OAAO,MAAM,UAAU;AACvB,YAAI,KAAK,MAAM,GAAG;AACd,eAAK,QAAQ,OAAO,IAAI;AACxB,eAAK,QAAQ,IAAI,IAAI;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,IAAI,IAAY;AACZ,aAAO,KAAK,QAAQ,OAAO;AAAA,IAC/B;AAAA,IAEA,IAAI,EAAE,GAAW;AACb,UAAI,OAAO,MAAM,UAAU;AACvB,YAAI,KAAK,MAAM,GAAG;AACd,eAAK,QAAQ,OAAO,IAAI;AACxB,eAAK,QAAQ,IAAI,IAAI;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,OAAgB,MAAM,KAAK,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IAC9C,OAAgB,OAAO,KAAK,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IAC/C,OAAgB,KAAK,KAAK,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IAC7C,OAAgB,KAAK,KAAK,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IAC7C,OAAgB,IAAI,KAAK,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IAE5C,OAAO,IAAI,IAAmB,IAAwB;AAClD,YAAM,IAAI,GAAG,IAAI,GAAG;AACpB,YAAM,IAAI,GAAG,IAAI,GAAG;AACpB,YAAM,IAAI,GAAG,IAAI,GAAG;AACpB,YAAM,IAAI,GAAG,IAAI,GAAG;AACpB,aAAO,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC7B;AAAA,IAEA,OAAO,KAAK,IAAwB;AAChC,aAAO,IAAI,KAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,IACzC;AAAA,IAEA,OAAO,aAAa,GAA4B;AAC5C,aAAO,KAAI,SAAS,EAAE,CAAC;AAAA,IAC3B;AAAA,IAEA,OAAO,WAAW,OAA8B;AAC5C,aAAO,KAAI,OAAO,MAAM,CAAC;AAAA,IAC7B;AAAA,IAEA,OAAO,WAAW,GAA0B;AACxC,aAAO,KAAI,OAAO,EAAE,GAAG,EAAE,CAAC;AAAA,IAC9B;AAAA,IAEA,OAAO,WAAW,GAA0B;AACxC,aAAO,KAAI,OAAO,EAAE,GAAG,EAAE,CAAC;AAAA,IAC9B;AAAA,IAEA,OAAO,oBAAoB,GAAW,GAAgB;AAClD,aAAO,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC,EAAE,oBAAoB,GAAG,CAAC;AAAA,IACvD;AAAA,IAEA,OAAO,wBAAwB,GAAW,GAAgB;AACtD,aAAO,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC,EAAE,wBAAwB,GAAG,CAAC;AAAA,IAC3D;AAAA,IAEA,OAAO,IAAI,IAAS,IAAc;AAC9B,YAAM,IAAI,GAAG,IAAI,GAAG;AACpB,YAAM,IAAI,GAAG,IAAI,GAAG;AACpB,YAAM,IAAI,GAAG,IAAI,GAAG;AACpB,YAAM,IAAI,GAAG,IAAI,GAAG;AACpB,aAAO,IAAI,KAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC7B;AAAA,IAEA,OAAO,SAAS,IAAS,IAAc;AACnC,aAAO,KAAI,IAAI,IAAI,EAAE;AAAA,IACzB;AAAA,IAEA,OAAO,aAAa,IAAmB,IAA2B;AAC9D,cAAQ,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,UAAU,IAAI,GAAG,UAAU;AAAA,IACxE;AAAA,IAEA,OAAO,aAAa,IAAsB,IAA8B;AACpE,YAAM,KAAK,GAAG,IAAI,GAAG;AACrB,YAAM,KAAK,GAAG,IAAI,GAAG;AACrB,aAAO,KAAK,MAAM,IAAI,EAAE;AAAA,IAC5B;AAAA,IAEA,OAAO,gBAAgB,IAAsB,IAA8B;AAEvE,aAAO,KAAK,KAAK,KAAI,uBAAuB,IAAI,EAAE,CAAC;AAAA,IAEvD;AAAA,IAEA,OAAO,uBAAuB,IAAsB,IAA8B;AAC9E,YAAM,KAAK,GAAG,IAAI,GAAG;AACrB,YAAM,KAAK,GAAG,IAAI,GAAG;AACrB,aAAO,KAAK,KAAK,KAAK;AAAA,IAC1B;AAAA;AAAA;AAAA;AAAA,IAIA,KAAK,GAAkB,GAAuB;AAC1C,UAAI,oBAAoB,CAAC,GAAG;AACxB,eAAO,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAAA,MACtC,WACS,oBAAoB,CAAC,GAAG;AAC7B,eAAO,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAAA,MACtC,OACK;AACD,eAAO,KAAK,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;AAAA,MAC9D;AAAA,IACJ;AAAA,IAEA,UAAU,QAAgB;AACtB,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,UAAU,MAAC,CAAC;AAAA,MACzC,OACK;AACD,YAAI,WAAM,GAAG;AACT,iBAAO;AAAA,QACX,OACK;AACD,iBAAO,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,MAAC;AAAA,QACtD;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,UAAU,GAAW,SAAI,GAAQ;AAC7B,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,UAAU,GAAG,MAAC,CAAC;AAAA,MAC5C,OACK;AACD,YAAI,KAAK,OAAO,GAAG;AACf,eAAK,IAAI,IAAI;AACb,iBAAO;AAAA,QACX,WACS,MAAM,KAAK,WAAM,GAAG;AACzB,iBAAO;AAAA,QACX,OACK;AACD,eAAK,KAAK,IAAI;AACd,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,OAAY;AACR,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,KAAK,CAAC;AAAA,MACnC,OACK;AACD,eAAO,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC;AAAA,MACrD;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,KAAK,IAAyB;AAC1B,aAAO,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,IAC1C;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,WAAW,QAAgC;AACvC,aAAO,KAAK,IAAI,GAAG,GAAG,OAAO,GAAG,OAAO,CAAC;AAAA,IAC5C;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,WAAWC,SAAgC;AACvC,aAAO,KAAK,IAAIA,QAAO,GAAGA,QAAO,GAAG,GAAG,CAAC;AAAA,IAC5C;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,QAAc;AACV,aAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC9B;AAAA,IAEA,QAAa;AACT,aAAO,IAAI,KAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,IACjD;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,KAAe;AACf,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,MACrC,OACK;AACD,YAAI,SAAS,GAAG,GAAG;AACf,iBAAO,KAAK,MAAM,IAAI,IAAI,CAAC;AAAA,QAC/B,OACK;AACD,iBAAO,KAAK,IAAI,KAAI,KAAK,GAAG,EAAE,IAAI,CAAC;AAAA,QACvC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,IAAI,GAAa;AACb,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,CAAC,CAAC;AAAA,MACnC,OACK;AACD,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,EAAE;AACb,cAAM,KAAK,EAAE;AACb,cAAM,KAAK,EAAE;AACb,cAAM,KAAK,EAAE;AACb,cAAM,IAAI,KAAK;AACf,cAAM,IAAI,KAAK,KAAK,KAAK;AACzB,cAAM,IAAI,KAAK,KAAK,KAAK;AACzB,cAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC7C,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAW;AACP,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,CAAC;AAAA,MAClC,OACK;AACD,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,KAAK;AAEhB,cAAM,IAAI;AAAA,UACN,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAAA,UACnB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAAA,UACnB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAAA,UACnB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAAA,QACvB;AAEA,cAAM,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AAErB,cAAM,IAAI,MAAM,GAAG,CAAC;AAEpB,cAAM,IAAI,EAAE,CAAC;AACb,cAAM,IAAI,EAAE,CAAC;AACb,cAAM,IAAI,EAAE,CAAC;AACb,cAAM,IAAI,EAAE,CAAC;AAEb,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B;AAAA,IACJ;AAAA,IAEA,IAAI,KAAe;AACf,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,MACrC,OACK;AACD,eAAO,KAAK,MAAM,MAAM,GAAG;AAAA,MAC/B;AAAA,IACJ;AAAA,IAEA,MAAM,KAAU,KAAgB;AAC5B,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC7C,YAAM,IAAI,KAAK,KAAK,KAAK;AACzB,YAAM,IAAI,KAAK,KAAK,KAAK;AACzB,YAAM,IAAI,KAAK;AACf,aAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC9B;AAAA,IAEA,IAAI,KAAe;AACf,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,MACrC,OACK;AACD,cAAM,IAAI,KAAK,IAAI,IAAI;AACvB,cAAM,IAAI,KAAK,IAAI,IAAI;AACvB,cAAM,IAAI,KAAK,IAAI,IAAI;AACvB,cAAM,IAAI,KAAK,IAAI,IAAI;AACvB,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B;AAAA,IACJ;AAAA,IAEA,IAAI,KAAe;AACf,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,MACrC,OACK;AACD,cAAM,IAAI,KAAK,IAAI,IAAI;AACvB,cAAM,IAAI,KAAK,IAAI,IAAI;AACvB,cAAM,IAAI,KAAK,IAAI,IAAI;AACvB,cAAM,IAAI,KAAK,IAAI,IAAI;AACvB,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,IAAI,KAAe;AACf,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,MACrC,OACK;AACD,eAAO,KAAK,MAAM,MAAM,GAAG;AAAA,MAC/B;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,KAAU,KAAgB;AAC5B,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC7C,YAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC7C,YAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC7C,YAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC7C,aAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC9B;AAAA,IAEA,MAAW;AACP,aAAO,KAAK,MAAM,EAAE;AAAA,IACxB;AAAA,IAEA,IAAI,GAAgB;AAChB,aAAO,KAAK,IAAI,EAAE,IAAI,KAAK,IAAI,EAAE;AAAA,IACrC;AAAA,IAEA,MAAW;AACP,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,CAAC;AAAA,MAClC,OACK;AACD,cAAM,IAAI,KAAK;AACf,cAAM,IAAI,KAAK;AACf,cAAM,OAAO,KAAK,IAAI,CAAC;AAGvB,cAAM,SAAI,KAAK,KAAK,IAAI,CAAC;AACzB,cAAM,IAAI,QAAQ,WAAM,IAAI,KAAK,IAAI,MAAC,IAAI,SAAI;AAC9C,cAAM,IAAI,OAAO,KAAK,IAAI,MAAC;AAC3B,cAAM,IAAI,IAAI;AACd,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B;AAAA,IACJ;AAAA,IAEA,YAAoB;AAChB,aAAO,KAAK,KAAK,KAAK,UAAU,CAAC;AAAA,IACrC;AAAA,IAEA,YAAoB;AAChB,YAAM,IAAI,KAAK;AACf,YAAM,IAAI,KAAK;AACf,YAAM,IAAI,KAAK;AACf,YAAM,IAAI,KAAK;AACf,aAAO,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAAA,IACvC;AAAA,IAEA,YAAiB;AACb,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,UAAU,CAAC;AAAA,MACxC,OACK;AACD,eAAO,KAAK,MAAM,IAAI,KAAK,UAAU,CAAC;AAAA,MAC1C;AAAA,IACJ;AAAA,IAEA,WAAW,GAAgB;AACvB,aAAO,KAAK,KAAK,KAAK,kBAAkB,CAAC,CAAC;AAAA,IAC9C;AAAA,IAEA,kBAAkB,GAAgB;AAC9B,YAAM,KAAK,KAAK,IAAI,EAAE;AACtB,YAAM,KAAK,KAAK,IAAI,EAAE;AACtB,aAAO,KAAK,KAAK,KAAK;AAAA,IAC1B;AAAA,IAEA,IAAI,GAAa;AACb,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,CAAC,CAAC;AAAA,MACnC,OACK;AACD,eAAO,KAAK,MAAM,MAAM,CAAC;AAAA,MAC7B;AAAA,IACJ;AAAA,IAEA,MAAM,KAAU,KAAgB;AAC5B,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC7C,YAAM,IAAI,KAAK,KAAK,KAAK;AACzB,YAAM,IAAI,KAAK,KAAK,KAAK;AACzB,YAAM,IAAI,KAAK;AACf,aAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAuBA,QAAQ,GAA0B;AAC9B,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,QAAQ,CAAC,CAAC;AAAA,MACvC,OACK;AACD,cAAM,KAAK,EAAE;AACb,cAAM,KAAK,EAAE;AACb,cAAM,IAAI,KAAK;AACf,cAAM,IAAI,KAAK;AACf,cAAM,IAAI,KAAK;AACf,cAAM,IAAI,KAAK;AAEf,cAAM,MAAM,KAAK;AACjB,cAAM,MAAM,KAAK;AACjB,cAAM,SAAI,MAAM;AAChB,cAAM,SAAI,KAAK,KAAK;AACpB,cAAM,SAAI,MAAM;AAGhB,cAAM,IAAI,CAAC,SAAI;AACf,cAAM,IAAI,SAAI,IAAI,SAAI;AACtB,cAAM,IAAI,SAAI,IAAI,SAAI;AAEtB,cAAM,IAAI,SAAI;AAEd,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAaA,oBAAoB,GAAqB,GAA0B;AAC/D,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,oBAAoB,GAAG,CAAC,CAAC;AAAA,MACtD,OACK;AACD,4BAAoB,GAAG,GAAG,IAAI;AAC9B,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,eAAe,QAAgB;AAC3B,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,eAAe,MAAC,CAAC;AAAA,MAC9C,OACK;AACD,cAAM,SAAI,SAAI;AACd,eAAO,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,MAAC,GAAG,CAAC,KAAK,IAAI,MAAC,CAAC;AAAA,MACnD;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,wBAAwB,GAAqB,GAA0B;AACnE,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,wBAAwB,GAAG,CAAC,CAAC;AAAA,MAC1D,OACK;AACD,cAAM,KAAK,EAAE;AACb,cAAM,KAAK,EAAE;AACb,cAAM,KAAK,EAAE;AACb,cAAM,KAAK,EAAE;AACb,cAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE;AACxC,cAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE;AACxC,cAAM,KAAK,OAAO;AAClB,cAAM,QAAQ,KAAK,KAAK,KAAK;AAI7B,cAAM,IAAI,KAAK,KAAK,KAAK;AACzB,cAAM,QAAQ,KAAK,KAAK,IAAI,MAAM,KAAK,MAAM;AAC7C,cAAM,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI;AAE/C,cAAM,IAAI,KAAK,KAAK;AACpB,cAAM,IAAI,IAAI;AAEd,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B;AAAA,IACJ;AAAA,IAEA,MAAM,QAAgB;AAClB,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,MAAM,MAAC,CAAC;AAAA,MACrC,OACK;AACD,cAAM,IAAI,KAAK,IAAI;AACnB,cAAM,IAAI,KAAK,IAAI;AACnB,cAAM,IAAI,KAAK,IAAI;AACnB,cAAM,IAAI,KAAK,IAAI;AACnB,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,IAAI,GAAa;AACb,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,CAAC,CAAC;AAAA,MACnC,OACK;AACD,eAAO,KAAK,MAAM,MAAM,CAAC;AAAA,MAC7B;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,KAAU,KAAgB;AAC5B,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AAEf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AAEf,YAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC7C,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AAEV,aAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,IAAI,GAAW,GAAW,IAAI,GAAG,IAAI,GAAS;AAC1C,UAAI,KAAK,UAAU,GAAG;AAElB,cAAM,UAAW,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK;AAC3E,YAAI,SAAS;AACT,gBAAM,SAAS,KAAK;AACpB,iBAAO,OAAO,IAAI;AAClB,iBAAO,OAAO,IAAI;AAClB,iBAAO,OAAO,IAAI;AAClB,iBAAO,OAAO,IAAI;AAClB,eAAK,QAAQ,IAAI,IAAI;AAAA,QACzB;AACA,eAAO;AAAA,MACX,OACK;AACD,cAAM,IAAI,MAAM;AAAA,MACpB;AAAA,IACJ;AAAA,IAEA,OAAO,GAAQ,KAAuB;AAClC,YAAO,OAAO,QAAQ,cAAe,OAAS;AAC9C,aAAQ,KAAK,WAAW,CAAC,IAAI;AAAA,IACjC;AAAA,IAEA,KAAK,GAAQ,GAAgB;AACzB,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC;AAAA,MACvC,OACK;AACD,cAAM,KAAK,EAAE,IAAI,KAAK,KAAK,IAAI,KAAK;AACpC,cAAM,KAAK,EAAE,IAAI,KAAK,KAAK,IAAI,KAAK;AACpC,cAAM,KAAK,EAAE,IAAI,KAAK,KAAK,IAAI,KAAK;AACpC,cAAM,KAAK,EAAE,IAAI,KAAK,KAAK,IAAI,KAAK;AACpC,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,OAAO,KAAuB;AAC1B,UAAI,OAAO,QAAQ,UAAU;AACzB,eAAO,KAAK,IAAI,KAAK,CAAC,IAAI,OAAO,KAAK,IAAI,KAAK,CAAC,IAAI,OAAO,KAAK,IAAI,KAAK,CAAC,IAAI,OAAO,KAAK,IAAI,KAAK,CAAC,IAAI;AAAA,MAC5G,OACK;AACD,eAAO,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,KAAK,MAAM;AAAA,MACtE;AAAA,IACJ;AAAA,IAEA,WAAmB;AACf,aAAO,KAAK,UAAU,EAAE,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG,GAAG,KAAK,EAAE,CAAC;AAAA,IACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAW;AACP,UAAI,KAAK,UAAU,GAAG;AAElB,cAAM,IAAI,CAAC,KAAK;AAChB,cAAM,IAAI,CAAC,KAAK;AAChB,cAAM,IAAI,CAAC,KAAK;AAChB,cAAM,IAAI,CAAC,KAAK;AAEhB,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B,OACK;AACD,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,CAAC;AAAA,MAClC;AAAA,IACJ;AAAA,IAEA,OAAO,SAAsB;AACzB,UAAI,KAAK,UAAU,GAAG;AAClB,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,KAAK;AAChB,cAAMC,OAAM,KAAK,IAAI,OAAO;AAC5B,cAAMC,OAAM,KAAK,IAAI,OAAO;AAC5B,cAAM,IAAI,KAAKD,OAAM,KAAKC;AAC1B,cAAM,IAAI,KAAKA,OAAM,KAAKD;AAC1B,eAAO,KAAK,IAAI,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,MACxC,OACK;AACD,eAAO,KAAK,KAAK,MAAM,EAAE,OAAO,OAAO,CAAC;AAAA,MAC5C;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,UAAU,GAAW,SAAI,GAAQ;AAC7B,UAAI,KAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,MAAM,EAAE,UAAU,GAAG,MAAC,CAAC;AAAA,MAC5C,OACK;AACD,YAAI,KAAK,OAAO,GAAG;AACf,eAAK,IAAI,CAAE,IAAI;AACf,iBAAO;AAAA,QACX,WACS,MAAM,KAAK,WAAM,GAAG;AACzB,iBAAO;AAAA,QACX,OACK;AACD,eAAK,KAAK,IAAI;AACd,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,OAAO,GAAW,GAAgB;AAC9B,UAAI,KAAK,UAAU,GAAG;AAClB,cAAM,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAC9B,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAC9B,eAAO,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9B,OACK;AACD,cAAM,IAAI,MAAM;AAAA,MACpB;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,QAAQ,KAAwB;AAC5B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,MACrC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAK,MAAM,EAAE,MAAM,IAAI,GAAG,CAAC;AAAA,MAC3C,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,SAAS,KAAwB;AAC7B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAI,OAAO,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACzC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,SAAS,KAAwB;AAC7B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,IAAI,EAAE,IAAI,GAAG,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAI,KAAK,IAAI,EAAE,IAAI,KAAI,OAAO,GAAG,CAAC,CAAC;AAAA,MACnD,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU,KAAwB;AAC9B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAI,OAAO,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACzC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU,KAAwB;AAC9B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,IAAI,EAAE,IAAI,GAAG,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAE9B,eAAO,KAAK,KAAI,KAAK,IAAI,EAAE,MAAM,GAAG,CAAC;AAAA,MACzC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,WAAW,KAAwB;AAC/B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAE9B,eAAO,KAAK,KAAI,KAAK,IAAI,EAAE,MAAM,GAAG,CAAC;AAAA,MACzC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,WAAW,KAAwB;AAC/B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,IAAI,EAAE,IAAI,GAAG,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAI,KAAK,IAAI,EAAE,IAAI,KAAI,OAAO,GAAG,CAAC,CAAC;AAAA,MACnD,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,YAAY,KAAwB;AAChC,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAI,OAAO,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACzC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,WAAW,KAAwB;AAC/B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,IAAI,EAAE,IAAI,GAAG,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAI,KAAK,IAAI,EAAE,IAAI,KAAI,OAAO,GAAG,CAAC,CAAC;AAAA,MACnD,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,YAAY,KAAwB;AAChC,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAI,OAAO,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACzC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,WAAgB;AACZ,aAAO,KAAK,KAAI,KAAK,IAAI,EAAE,IAAI,CAAC;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA,IAKA,OAAO,KAA4B;AAC/B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,OAAO,GAAG;AAAA,MAC1B,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,OAAO,KAAI,OAAO,GAAG,CAAC;AAAA,MACtC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,OAAO,KAA4B;AAC/B,UAAI,eAAe,MAAK;AACpB,eAAO,CAAC,KAAK,OAAO,GAAG;AAAA,MAC3B,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,CAAC,KAAK,OAAO,KAAI,OAAO,GAAG,CAAC;AAAA,MACvC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,YAAiB;AACb,aAAO,KAAK,KAAI,KAAK,IAAI,EAAE,IAAI,CAAC;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA,IAKA,QAAQ,KAAwB;AAC5B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,MACrC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAK,MAAM,EAAE,UAAU,KAAK,CAAC,CAAC;AAAA,MAC9C,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,SAAS,KAAwB;AAC7B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAI,OAAO,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACzC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,QAAQ,KAAwB;AAC5B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,MACrC,WACS,OAAO,QAAQ,UAAU;AAE9B,eAAO,KAAK,KAAK,MAAM,EAAE,UAAU,KAAK,CAAC,CAAC;AAAA,MAC9C,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,SAAS,KAAwB;AAC7B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAI,OAAO,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACzC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,UAAe;AACX,aAAO,KAAK,KAAI,KAAK,IAAI,CAAC;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA,IAKA,UAAe;AACX,aAAO,KAAK,KAAI,KAAK,IAAI,EAAE,IAAI,CAAC;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA,IAKA,QAAQ,KAAwB;AAC5B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,MACrC,WACS,OAAO,QAAQ,UAAU;AAC9B,eAAO,KAAK,KAAK,MAAM,EAAE,MAAM,GAAG,CAAC;AAAA,MACvC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,SAAS,KAAwB;AAC7B,UAAI,eAAe,MAAK;AACpB,eAAO,KAAK,KAAI,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC;AAAA,MACvC,WACS,OAAO,QAAQ,UAAU;AAE9B,eAAO,KAAK,KAAI,KAAK,IAAI,EAAE,MAAM,GAAG,CAAC;AAAA,MACzC,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;;;AC3rCO,MAAM,WAAW;AAAA,IACpB,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,EACX;;;ACAO,MAAM,SAAN,MAAa;AAAA;AAAA;AAAA;AAAA,IAIP;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MAChB,GAAG,IAAI,IAAI;AAAA,MACX,GAAG,IAAI,IAAI;AAAA,IACf;AAAA,IACS;AAAA,IACA;AAAA,IAET;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAES,UAAU,SAAS,IAAI;AAAA,IACvB,UAA4B,KAAK,QAAQ,aAAa;AAAA,IAE/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,YAAY,QAAa,UAAuC,SAAS,MAAM,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;AAE3G,WAAK,SAAS;AACd,WAAK,SAAS,EAAE,IAAI,IAAI,EAAE;AAC1B,WAAK,SAAS,EAAE,IAAI,IAAI,EAAE;AAE1B,WAAK,WAAW;AAChB,WAAK,YAAY;AACjB,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK,iBAAiB;AACtB,WAAK,gBAAgB;AACrB,WAAK,aAAa;AAElB,WAAK,KAAK;AAEV,WAAK,iBAAiB,KAAK,OAAO,QAAQ,UAAU,MAAM;AACtD,aAAK,QAAQ,IAAI,IAAI;AAAA,MACzB,CAAC;AACD,WAAK,YAAY,KAAK,SAAS,EAAE,QAAQ,UAAU,MAAM;AACrD,aAAK,QAAQ,IAAI,IAAI;AAAA,MACzB,CAAC;AACD,WAAK,YAAY,KAAK,SAAS,EAAE,QAAQ,UAAU,MAAM;AACrD,aAAK,QAAQ,IAAI,IAAI;AAAA,MACzB,CAAC;AAAA,IACL;AAAA,IAEA,UAAgB;AACZ,UAAI,KAAK,gBAAgB;AACrB,aAAK,eAAe,QAAQ;AAAA,MAChC;AACA,UAAI,KAAK,WAAW;AAChB,aAAK,UAAU,QAAQ;AAAA,MAC3B;AACA,UAAI,KAAK,WAAW;AAChB,aAAK,UAAU,QAAQ;AAAA,MAC3B;AAAA,IACJ;AAAA,IAEA,IAAI,IAAI;AACJ,aAAO,KAAK,OAAO;AAAA,IACvB;AAAA,IAEA,IAAI,EAAE,GAAW;AACb,WAAK,OAAO,IAAI;AAAA,IACpB;AAAA,IAEA,IAAI,IAAI;AACJ,aAAO,KAAK,OAAO;AAAA,IACvB;AAAA,IAEA,IAAI,EAAE,GAAW;AACb,WAAK,OAAO,IAAI;AAAA,IACpB;AAAA,IAEA,IAAI,IAAY;AACZ,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,EAAE,GAAW;AACb,UAAI,KAAK,MAAM,GAAG;AACd,aAAK,KAAK;AAAA,MACd;AAAA,IACJ;AAAA,IAEA,KAAK,GAAiB;AAClB,WAAK,OAAO,WAAW,EAAE,MAAM;AAC/B,WAAK,UAAU,EAAE;AACjB,WAAK,SAAS,EAAE,WAAW,EAAE,SAAS,CAAC;AACvC,WAAK,SAAS,EAAE,WAAW,EAAE,SAAS,CAAC;AACvC,WAAK,WAAW,EAAE;AAClB,WAAK,KAAK,EAAE;AACZ,WAAK,KAAK,EAAE;AACZ,WAAK,gBAAgB,EAAE;AACvB,WAAK,eAAe,EAAE;AACtB,WAAK,YAAY,EAAE;AACnB,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA,IAKA,SAAe;AACX,YAAM,IAAI,MAAM,uBAAuB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA,IAKA,SAAe;AAAA,IAGf;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,UAAuC;AACvC,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,QAAQ,SAAsC;AAC9C,UAAI,KAAK,YAAY,SAAS;AAC1B,aAAK,WAAW;AAAA,MACpB;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,IAAI,WAAoB;AACpB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,SAAS,UAAmB;AAC5B,UAAI,KAAK,aAAa,CAAC,CAAC,UAAU;AAC9B,aAAK,YAAY;AAAA,MACrB;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,IAAI,KAAa;AACb,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,GAAG,IAAY;AACf,UAAI,KAAK,OAAO,IAAI;AAChB,aAAK,MAAM;AAAA,MACf;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,IAAI,KAAa;AACb,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,GAAG,IAAY;AACf,UAAI,KAAK,OAAO,IAAI;AAChB,aAAK,MAAM;AAAA,MACf;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,IAAI,gBAAwB;AACxB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,cAAc,eAAuB;AACrC,UAAI,KAAK,kBAAkB,eAAe;AACtC,aAAK,iBAAiB;AAAA,MAC1B;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,IAAI,eAAuB;AACvB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,aAAa,cAAc;AAC3B,UAAI,KAAK,iBAAiB,cAAc;AACpC,aAAK,gBAAgB;AAAA,MACzB;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,IAAI,YAAoB;AACpB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,UAAU,WAAW;AACrB,UAAI,KAAK,cAAc,WAAW;AAC9B,aAAK,aAAa;AAAA,MACtB;AAAA,IACJ;AAAA,EACJ;;;AClNA,MAAI,iBAAiB;AAEd,MAAM,YAAY;AAAA,IAErB,YAAY;AAAA;AAAA;AAAA;AAAA,IAKZ,YAAY;AAAA,IAEZ,UAAU,WAAoB;AAC1B,aAAO;AAAA,IACX;AAAA,EACJ;;;ACTO,MAAM,aAAN,MAAoB;AAAA,IAEd;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IAET;AAAA,IAEA,YAAY,OAAY;AAEpB,WAAK,SAAS;AAEd,WAAK,UAAU,IAAI,QAAQ;AAC3B,WAAK,UAAU,IAAI,qBAAqB,KAAK,QAAQ,aAAa,CAAC;AAEnE,WAAK,UAAU,IAAI,QAAQ;AAC3B,WAAK,UAAU,IAAI,qBAAqB,KAAK,QAAQ,aAAa,CAAC;AAEnE,WAAK,SAAS,IAAI,QAAQ;AAC1B,WAAK,SAAS,IAAI,qBAAqB,KAAK,OAAO,aAAa,CAAC;AAAA,IACrE;AAAA,IAEA,QAAQ,YAA2D,SAAyB;AACxF,WAAK,OAAO,QAAQ,YAAY,OAAO;AAAA,IAC3C;AAAA,IAEA,IAAI,SAAiB;AACjB,aAAO,KAAK,OAAO;AAAA,IACvB;AAAA,IAEA,MAAM,OAAkB;AACpB,aAAO,KAAK,OAAO,KAAK;AAAA,IAC5B;AAAA,IAEA,MAAW;AACP,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,OAAa;AACT,WAAK,QAAQ,KAAK,KAAK,MAAM;AAAA,IACjC;AAAA,IAEA,MAAS;AACL,YAAM,IAAI,KAAK,OAAO,IAAI;AAC1B,WAAK,QAAQ,KAAK,CAAC,CAAC,CAAC;AACrB,aAAO;AAAA,IACX;AAAA,IAEA,QAAW;AACP,YAAM,IAAI,KAAK,OAAO,MAAM;AAC5B,WAAK,QAAQ,KAAK,CAAC,CAAC,CAAC;AACrB,aAAO;AAAA,IACX;AAAA,IAEA,QAAQ,OAAoB;AACxB,YAAM,aAAa,KAAK,OAAO,KAAK,GAAG,KAAK;AAC5C,WAAK,QAAQ,KAAK,KAAK;AACvB,aAAO;AAAA,IACX;AAAA,IAEA,WAAW,OAAoB;AAC3B,YAAM,aAAa,KAAK,OAAO,QAAQ;AACvC,WAAK,QAAQ,KAAK,KAAK;AACvB,aAAO;AAAA,IACX;AAAA,IAEA,OAAO,OAAe,gBAAyB,MAAgB;AAE3D,UAAI,OAAO,gBAAgB,UAAU;AACjC,cAAM,KAAK,KAAK,OAAO,OAAO,OAAO,aAAa,GAAG,IAAI;AACzD,aAAK,QAAQ,KAAK,EAAE;AACpB,eAAO;AAAA,MACX,OACK;AACD,cAAM,KAAK,KAAK,OAAO,OAAO,KAAK;AACnC,aAAK,QAAQ,KAAK,EAAE;AACpB,eAAO;AAAA,MACX;AAAA,IAWJ;AAAA,IAEA,KAAK,WAAyC;AAC1C,WAAK,OAAO,KAAK,SAAS;AAC1B,WAAK,OAAO,KAAK;AACjB,aAAO;AAAA,IACX;AAAA,IAEA,UAAgB;AACZ,WAAK,OAAO,QAAQ;AACpB,WAAK,OAAO,KAAK;AACjB,aAAO;AAAA,IACX;AAAA,IAEA,QAAQ,eAAkB,WAA4B;AAClD,aAAO,KAAK,OAAO,QAAQ,eAAe,SAAS;AAAA,IACvD;AAAA;AAAA,IAGA,IAAO,YAAwD,SAAoB;AAC/E,aAAO,KAAK,OAAO,IAAI,YAAY,OAAO;AAAA,IAC9C;AAAA,EACJ;;;AC/GO,MAAM,WAAN,cAAwC,WAAc;AAAA,IAEhD,MAA2B,CAAC;AAAA,IAE5B;AAAA,IACA;AAAA,IAET,YAAY,UAAe;AACvB,YAAM,QAAQ;AAEd,WAAK,QAAQ,QAAQ;AAErB,WAAK,uBAAuB,KAAK,QAAQ,UAAU,CAAC,OAAY;AAC5D,aAAK,QAAQ,EAAE;AAAA,MACnB,CAAC;AAED,WAAK,uBAAuB,KAAK,QAAQ,UAAU,CAAC,OAAY;AAC5D,aAAK,QAAQ,EAAE;AAAA,MACnB,CAAC;AAAA,IACL;AAAA,IAEA,UAAgB;AACZ,WAAK,qBAAqB,QAAQ;AAClC,WAAK,qBAAqB,QAAQ;AAAA,IACtC;AAAA,IAEA,QAAQ,UAAqB;AACzB,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,cAAM,QAAQ,SAAS,CAAC;AACxB,YAAI,SAAS,MAAM,IAAI;AACnB,eAAK,IAAI,MAAM,EAAE,IAAI;AAAA,QACzB;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IAEA,QAAQ,UAAqB;AACzB,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,cAAM,QAAQ,SAAS,CAAC;AACxB,eAAO,KAAK,IAAI,MAAM,EAAE;AAAA,MAC5B;AACA,aAAO;AAAA,IACX;AAAA,EACJ;;;ACxCO,WAAS,QAA8B,aAAwB;AAKlE,UAAM,SAAS,YAAY;AAC3B,aAAS,IAAI,SAAS,GAAG,KAAK,GAAG,KAAK;AAClC,kBAAY,CAAC,EAAE,QAAQ;AAAA,IAC3B;AACA,gBAAY,SAAS;AAAA,EACzB;;;ACtBA,MAAI;AAEJ,MAAI,OAAO,WAAW,aAAa;AAC/B,WAAO;AAAA,EACX,WACS,OAAO,WAAW,aAAa;AACpC,WAAO;AAAA,EACX,WACS,OAAO,SAAS,aAAa;AAClC,WAAO;AAAA,EACX;;;ACTO,MAAM,SAAS,KAAK,KAAK;AACzB,MAAM,UAAU,KAAK,KAAK;AAS1B,WAAS,KAAK,GAAW,GAAW,GAAmB;AAC1D,WAAO,KAAK,IAAI,KAAK;AAAA,EACzB;AAgBO,WAAS,IAAI,GAAW,GAAmB;AAC9C,WAAO,IAAI,GAAG;AACV,WAAK;AAAA,IACT;AACA,WAAO,IAAI;AAAA,EACf;AAEO,MAAM,WAAW,KAAK,gBAAgB;AAC7C,MAAM,QAAQ,KAAK;AAQZ,WAAS,QAAQ,GAAmB;AACvC,WAAO,MAAM,IAAI,GAAO,IAAI;AAAA,EAChC;;;ACnCO,WAAS,qBAAqBE,MAAiC;AAClE,UAAM,WAAWA,KAAI;AACrB,UAAM,IAAI,SAAS;AACnB,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAM,QAAQ,SAAS,KAAK,CAAC;AAC7B,UAAI,iBAAiB,gBAAgB;AACjC,eAAO;AAAA,MACX;AAAA,IACJ;AACA,UAAM,IAAI,MAAM;AAAA,EACpB;AAKO,WAAS,oBAAoB,MAAsB,WAA0B;AAEhF,IAAC,KAAa,cAAc;AAAA,EAChC;AAKA,WAAS,oBAAoB,MAA+B;AAExD,WAAQ,KAAa;AAAA,EACzB;AA6HO,MAAM,MAAM;AAAA,IACf,IAAI;AAAA,IAEJ,OAAO;AAAA;AAAA,IAGP,eAAe,SAAU,eAAuB,QAAuB,CAAC,GAAG;AACvE,YAAM,OAAO,SAAS,gBAAgB,IAAI,IAAI,aAAa;AAC3D,UAAI,SAAS,OAAO,KAAK,KAAK,EAAE,SAAS,GAAG;AACxC,YAAI,cAAc,MAAM,KAAK;AAAA,MACjC;AACA,aAAO;AAAA,IACX;AAAA;AAAA,IAGA,eAAe,SAAU,MAAe,OAAsB;AAE1D,YAAM,SAAS;AACf,YAAM,OAAO,OAAO,KAAK,KAAK;AAC9B,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,cAAM,gBAAgB,KAAK,CAAC;AAC5B,cAAM,QAAQ,OAAO,aAAa;AAClC,YAAI,OAAO,KAAK,KAAK,CAAC,CAAC,GAAG;AACtB,eAAK,eAAe,IAAI,OAAO,eAAe,KAAK;AAAA,QACvD,OACK;AACD,eAAK,aAAa,eAAe,KAAK;AAAA,QAC1C;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA;AAAA,IAGA,kBAAkB,SAAU,MAAe,OAAsB;AAC7D,iBAAW,OAAO,OAAO;AACrB,aAAK,gBAAgB,GAAG;AAAA,MAC5B;AACA,aAAO;AAAA,IACX;AAAA,IAEA,mBAAmB,SAAU,OAAe,UAAe,UAAe,SAAmB,QAAyB;AAKlH,YAAM,CAAC,SAAS,OAAO,IAAI,iBAAiB,KAAK;AAEjD,YAAM,IAAI,QAAQ;AAClB,YAAM,OAAO,IAAI;AACjB,UAAI;AACJ,UAAI,SAAS;AAEb,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,cAAM,IAAI,QAAQ,CAAC;AAEnB,cAAM,OAAO,SAAS,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC;AACvD,cAAM,IAAI,QAAQ,IAAI;AAEtB,YAAI;AACJ,YAAI;AAAG;AACP,YAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAChC,YAAI,IAAI,IAAI,eAAe,cAAc;AAEzC,YAAI,IAAI,QAAQ,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;AACjC,YAAI,IAAI,QAAQ,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;AAEjC,gBAAQ,EAAE,SAAS;AAAA,UAEf,KAAK,SAAS;AACV,sBAAU,SAAS;AACnB;AAAA,UAEJ,KAAK,SAAS;AAEV,iBAAK,EAAE;AACP,iBAAK,EAAE;AACP,4BAAgB,EAAE;AAClB,2BAAe,EAAE;AACjB,wBAAY,EAAE;AAEd,sBAAU,SAAS,MAAM,MAAM,KAAK,MAAM,KAAK,MACzC,gBAAgB,MAAM,eAAe,MAAM,YAAY,MACvD,IAAI,MAAM;AAChB;AAAA,UAEJ,KAAK,SAAS;AAEV,iBAAM,EAAE,YAAY,EAAE,SAAS,KAAM,IAAI;AACzC,iBAAM,EAAE,YAAY,EAAE,SAAS,KAAM,IAAI;AAEzC,gBAAI,EAAE,UAAU;AACZ,mBAAK,QAAQ,QAAQ,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;AAC5C,mBAAK,QAAQ,QAAQ,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;AAAA,YAChD,OACK;AACD,mBAAK,QAAQ,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;AAChC,mBAAK,QAAQ,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,YACpC;AAEA,gBAAI,EAAE,UAAU;AACZ,mBAAK,QAAQ,QAAQ,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;AAC5C,mBAAK,QAAQ,QAAQ,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;AAAA,YAChD,OACK;AACD,mBAAK,QAAQ,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;AAChC,mBAAK,QAAQ,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,YACpC;AAEA,uBAAY,MAAM,IAAK,SAAS,OAAO,SAAS,SAC5C,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,IAAI,MAAM;AAChE;AAAA,UAEJ,KAAK,SAAS,MAAM;AAChB,gBAAI;AACJ,sBAAU,SAAS,OAAO,MAAM,IAAI,MAAM;AAC1C;AAAA,UACJ;AAAA,UACA,SAAS;AACL,sBAAU,EAAE,UAAU,MAAM,IAAI,MAAM;AAAA,UAC1C;AAAA,QACJ;AAIA,YAAI,KAAK,QAAQ,QAAQ;AAErB,cAAI,EAAE,YAAY,SAAS,OAAO;AAG9B,gBAAI;AAEJ,iBAAM,EAAE,YAAY,EAAE,SAAS,KAAM;AACrC,iBAAM,EAAE,YAAY,EAAE,SAAS,KAAM;AAErC,gBAAI,EAAE,UAAU;AACZ,mBAAK,QAAQ,QAAQ,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;AAC5C,mBAAK,QAAQ,QAAQ,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;AAAA,YAChD,OACK;AACD,mBAAK,QAAQ,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;AAChC,mBAAK,QAAQ,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,YACpC;AAEA,gBAAI,EAAE,UAAU;AACZ,mBAAK,QAAQ,QAAQ,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;AAC5C,mBAAK,QAAQ,QAAQ,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;AAAA,YAChD,OACK;AACD,mBAAK,QAAQ,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;AAChC,mBAAK,QAAQ,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,YACpC;AAEA,gBAAI,QAAQ,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,gBAAI,QAAQ,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;AAE7B,uBAAW,QAAQ,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,IAAI,MAAM;AAAA,UAC7E;AAEA,cAAI,EAAE,YAAY,SAAS,OAAO;AAC9B,uBAAW;AAAA,UACf;AAAA,QACJ;AACA,kBAAU,UAAU;AAAA,MACxB;AAEA,aAAO;AAAA,IAEX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,SAAS,SAAU,OAAc,YAA4C;AACzE,UAAI,WAAW,MAAM,IAAI;AACzB,UAAI,CAAC,UAAU;AACX,mBAAW,MAAM,IAAI,WAAW,IAAI,cAAc,YAAY,EAAE,aAAa,UAAU,CAAC;AAAA,MAC5F;AACA,UAAI,SAAS,eAAe,MAAM;AAC9B,6BAAqB,UAAU,EAAE,YAAY,QAAQ;AAAA,MACzD;AACA,aAAO;AAAA,IACX;AAAA,IAEA,MAAM;AAAA,MACF,QAAQ,SAAU,YAAwB,MAAsB;AAC5D,YAAI,oBAAoB,IAAI,GAAG;AAC3B,gBAAM,WAAW,MAAM,UAAU,MAAM,KAAK,KAAK,UAAU,CAAC;AAC5D,mBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,kBAAM,QAAQ,SAAS,CAAC;AACxB,kBAAM,KAAK,MAAM;AACjB,kBAAM,WAAW,eAAe,EAAE,qBAAqB,EAAE,wBAAwB,EAAE;AACnF,kBAAM,SAAS,WAAW,cAAc,QAAQ;AAChD,gBAAI,CAAC,QAAQ;AACT,mBAAK,YAAY,KAAK;AAAA,YAC1B;AAAA,UACJ;AACA,8BAAoB,MAAM,KAAK;AAAA,QACnC;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAMO,MAAM,UAAN,MAA8B;AAAA;AAAA;AAAA;AAAA,IAIxB;AAAA,IACA;AAAA,IACA;AAAA,IAET;AAAA,IACA;AAAA,IAES,QAAQ,SAAS,EAAE,OAAO,GAAG,QAAQ,EAAE,CAAC;AAAA,IACxC,QAAQ,KAAK,MAAM,aAAa;AAAA,IAEzC,YAAY,SAAgB,aAAqB,SAAwB,CAAC,GAAG;AACzE,UAAI,mBAAmB,OAAO;AAC1B,aAAK,UAAU;AACf,aAAK,QAAQ,SAAS;AAAA,MAC1B,OACK;AACD,cAAM,IAAI,MAAM,yBAAyB;AAAA,MAC7C;AACA,UAAI,OAAO,YAAY;AACnB,aAAK,aAAa,OAAO;AAAA,MAC7B,OACK;AACD,aAAK,aAAa,IAAI,cAAc,OAAO,EAAE,IAAI,GAAG,WAAW,OAAO,CAAC;AAAA,MAC3E;AAEA,WAAK,OAAO,IAAI,cAAc,MAAM;AACpC,0BAAoB,KAAK,MAAM,KAAK;AACpC,WAAK,WAAW,YAAY,KAAK,IAAI;AACrC,WAAK,WAAW,MAAM,WAAW;AAAA,IACrC;AAAA;AAAA,IAGA,QAAQ,MAAyC,OAAqB;AAClE,WAAK,QAAQ,KAAK;AAClB,WAAK,SAAS,KAAK;AACnB,UAAI,cAAc,KAAK,YAAY,EAAE,OAAO,GAAG,KAAK,KAAK,MAAM,QAAQ,GAAG,KAAK,MAAM,KAAK,CAAC;AAC3F,WAAK,MAAM,IAAI,IAAI;AACnB,aAAO;AAAA,IACX;AAAA,IAEA,SAAe;AACX,YAAM,aAAa,KAAK;AACxB,WAAK,QAAQ,OAAO,KAAK,YAAY,UAAU;AAC/C,UAAI,KAAK,OAAO,YAAY,KAAK,IAAI;AACrC,aAAO;AAAA,IACX;AAAA,EACJ;AAWO,WAAS,0BAA0B,GAAmB;AACzD,UAAM,IAAI,EAAE;AACZ,UAAM,IAAI,EAAE;AACZ,UAAM,IAAI,EAAE;AACZ,UAAM,IAAI,EAAE;AACZ,UAAM,IAAI,EAAE;AACZ,UAAM,IAAI,EAAE;AACZ,WAAO,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,OAAO,EAAE,KAAK,GAAG,CAAC;AAAA,EAC9D;AAMA,WAAS,iBAAiB,OAAe;AACrC,QAAI,MAAM,OAAO;AAEb,aAAO,CAAC,CAAC,GAAW,MAAsB,GAAG,CAAC,GAAW,MAAsB,CAAC;AAAA,IACpF,OACK;AAED,aAAO,CAAC,CAAC,GAAW,MAAsB,GAAG,CAAC,GAAW,MAAsB,CAAC;AAAA,IACpF;AAAA,EACJ;;;AC9bO,MAAM,MAAN,MAAgC;AAAA;AAAA;AAAA;AAAA,IAI1B,cAA4B,CAAC;AAAA;AAAA;AAAA;AAAA,IAI7B,QAAqC,CAAC;AAAA,IAE/C;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAKS,QAAQ,SAAS,KAAK;AAAA,IACtB,QAAQ,KAAK,MAAM,aAAa;AAAA,IACzC;AAAA,IAEA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IAEA,UAAgB;AACZ,cAAQ,KAAK,WAAW;AAAA,IAC5B;AAAA,IACA,IAAI,OAAgB;AAChB,aAAO,KAAK,MAAM,IAAI;AAAA,IAC1B;AAAA,IACA,IAAI,KAAK,MAAe;AACpB,WAAK,MAAM,IAAI,IAAI;AACnB,WAAK,sBAAmB,IAAI;AAAA,IAChC;AAAA,EACJ;;;AClFO,MAAe,cAAf,MAA2D;AAAA;AAAA;AAAA;AAAA,IAI9D;AAAA;AAAA;AAAA;AAAA,IAKS,MAAW,IAAI,IAAI;AAAA,IAEnB;AAAA,IAET,aAAa;AAAA,IAEb,YAAsB,CAAC;AAAA,IAEvB,YAAY,IAAY;AACpB,WAAK,MAAM;AACX,WAAK,UAAU,KAAK;AAAA,IACxB;AAAA,IAEA,UAAgB;AACZ,WAAK,IAAI,QAAQ;AAAA,IACrB;AAAA,IAEA,UAAU,YAAY,OAAa;AAC/B,WAAK,IAAI,uBAAoB,IAAI;AACjC,aAAO;AAAA,IACX;AAAA,IACA,IAAI,KAAa;AACb,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,YAAoB;AACpB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,UAAU,WAAmB;AAC7B,UAAI,KAAK,cAAc,WAAW;AAC9B,aAAK,IAAI,uBAAoB,IAAI;AACjC,aAAK,YAAY,UAAU,MAAM,MAAM;AACvC,aAAK,aAAa;AAAA,MACtB;AAAA,IACJ;AAAA,EACJ;;;ACjDO,WAAS,yBAAyB,GAAW,GAAW,IAAY,IAAY,YAAc,YAAe,OAAe,OAAe,QAAsB;AAKpK,UAAM,aAAQ,aAAQ,aAAQ,aAAQ;AACtC,UAAM,aAAQ,IAAI,aAAQ;AAC1B,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,IAAI,KAAK,IAAI,KAAK;AACxB,UAAM,IAAI,KAAK,IAAI,KAAK;AACxB,UAAM,IAAI;AACV,UAAM,IAAI;AACV,UAAM,KAAK,IAAI;AACf,UAAM,KAAK,IAAI;AACf,UAAM,MAAM,KAAK;AACjB,UAAM,KAAK,IAAI;AACf,UAAM,MAAM,KAAK;AACjB,UAAM,MAAM,KAAK;AACjB,UAAM,KAAK,IAAI;AACf,UAAM,KAAK,IAAI;AACf,UAAM,KAAK,IAAI;AAEf,UAAM,MAAM,KAAK,MAAM,MAAM,KAAK;AAClC,UAAM,MAAM,CAAC,KAAK;AAClB,UAAM,MAAM,IAAI;AAChB,UAAM,MAAM,MAAM;AAClB,UAAM,MAAM;AACZ,UAAM,MAAM;AACZ,WAAO,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,CAAC;AAAA,EACpD;;;AC7BA,MAAM,MAAM,KAAK;AACjB,MAAM,MAAM,KAAK;AACjB,MAAM,MAAM,KAAK;AAKV,MAAM,SAAN,MAAM,QAAO;AAAA,IAEP,UAAU,SAAS,IAAI;AAAA,IACvB,UAAU,KAAK,QAAQ,aAAa;AAAA;AAAA;AAAA;AAAA,IAK7C,YAAY,IAAI,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA,IAK1B,SAAS;AAAA,IAET,WAAW;AAAA,IAEX,YAAY,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG;AACzF,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AAAA,IACxB;AAAA,IACA,IAAI,IAAY;AACZ,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,IAAY;AACZ,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,IAAY;AACZ,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,IAAY;AACZ,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,IAAY;AACZ,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,IAAY;AACZ,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,MAAc;AACd,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,MAAc;AACd,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,MAAc;AACd,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,MAAc;AACd,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,MAAc;AACd,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,MAAc;AACd,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,MAAc;AACd,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,MAAc;AACd,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IACA,IAAI,MAAc;AACd,aAAO,KAAK,UAAU,CAAC;AAAA,IAC3B;AAAA,IAEA,IAAI,KAAa,KAAa,KAAa,KAAa,KAAa,KAAa,KAAa,KAAa,KAAmB;AAE3H,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AAEpB,aAAO,KAAK,WAAW;AAAA,IAC3B;AAAA,IAEA,gBAAgB,GAAiB;AAE7B,WAAK,UAAU,CAAC,IAAI,EAAE;AACtB,WAAK,UAAU,CAAC,IAAI,EAAE;AACtB,WAAK,UAAU,CAAC,IAAI,EAAE;AACtB,WAAK,UAAU,CAAC,IAAI,EAAE;AACtB,WAAK,UAAU,CAAC,IAAI,EAAE;AACtB,WAAK,UAAU,CAAC,IAAI,EAAE;AACtB,WAAK,UAAU,CAAC,IAAI,EAAE;AACtB,WAAK,UAAU,CAAC,IAAI,EAAE;AACtB,WAAK,UAAU,CAAC,IAAI,EAAE;AAEtB,aAAO,KAAK,WAAW;AAAA,IAC3B;AAAA;AAAA;AAAA;AAAA,IAKA,KAAK,GAAiB;AAElB,WAAK,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;AACjC,WAAK,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;AACjC,WAAK,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;AACjC,WAAK,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;AACjC,WAAK,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;AACjC,WAAK,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;AACjC,WAAK,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;AACjC,WAAK,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;AACjC,WAAK,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC;AAEjC,WAAK,SAAS,EAAE;AAEhB,aAAO,KAAK,WAAW;AAAA,IAC3B;AAAA;AAAA;AAAA;AAAA,IAKA,WAAiB;AAEb,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AACpB,WAAK,UAAU,CAAC,IAAI;AAEpB,aAAO,KAAK,WAAW;AAAA,IAC3B;AAAA,IAEA,SAAS,KAAa,KAAa,KAAa,KAAa,KAAa,KAAa,KAAa,KAAa,KAAmB;AAEhI,YAAM,IAAI,KAAK;AAEf,YAAM,MAAM,EAAE,CAAC;AACf,YAAM,MAAM,EAAE,CAAC;AACf,YAAM,MAAM,EAAE,CAAC;AACf,YAAM,MAAM,EAAE,CAAC;AACf,YAAM,MAAM,EAAE,CAAC;AACf,YAAM,MAAM,EAAE,CAAC;AACf,YAAM,MAAM,EAAE,CAAC;AACf,YAAM,MAAM,EAAE,CAAC;AACf,YAAM,MAAM,EAAE,CAAC;AAEf,WAAK,UAAU,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAClD,WAAK,UAAU,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAClD,WAAK,UAAU,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAElD,WAAK,UAAU,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAClD,WAAK,UAAU,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAClD,WAAK,UAAU,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAElD,WAAK,UAAU,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAClD,WAAK,UAAU,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAClD,WAAK,UAAU,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAElD,aAAO,KAAK,WAAW;AAAA,IAC3B;AAAA,IAEA,gBAAgB,IAAY,GAAG,IAAY,GAAG,IAAY,GAA6B;AAEnF,YAAM,KAAK,KAAK,MAAM,IAAI,KAAK,MAAM,IAAI,KAAK,MAAM;AACpD,YAAM,KAAK,KAAK,MAAM,IAAI,KAAK,MAAM,IAAI,KAAK,MAAM;AACpD,YAAM,KAAK,KAAK,MAAM,IAAI,KAAK,MAAM,IAAI,KAAK,MAAM;AAEpD,aAAO,CAAC,IAAI,IAAI,EAAE;AAAA,IACtB;AAAA,IAEA,mBAAmB,GAAiB;AAChC,WAAK,UAAU,CAAC,KAAK;AACrB,WAAK,UAAU,CAAC,KAAK;AACrB,WAAK,UAAU,CAAC,KAAK;AACrB,WAAK,UAAU,CAAC,KAAK;AACrB,WAAK,UAAU,CAAC,KAAK;AACrB,WAAK,UAAU,CAAC,KAAK;AACrB,WAAK,UAAU,CAAC,KAAK;AACrB,WAAK,UAAU,CAAC,KAAK;AACrB,WAAK,UAAU,CAAC,KAAK;AACrB,aAAO,KAAK,WAAW;AAAA,IAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,QAAQ,KAAsB;AAE1B,YAAM,IAAI,KAAK;AACf,YAAM,OAAO,IAAI,QAAO;AAExB,YAAM,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC;AACvC,YAAM,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC;AACvC,YAAM,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC;AAEvC,YAAM,MAAM,MAAM,MAAM,MAAM;AAC9B,YAAM,MAAM,CAAC,MAAM,MAAM,MAAM;AAC/B,YAAM,MAAM,MAAM,MAAM,MAAM;AAG9B,UAAI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM;AAExC,UAAI,CAAC,KAAK;AACN,eAAO;AAAA,MACX;AAEA,YAAM,IAAM;AAEZ,UAAI,UAAU,CAAC,IAAI,MAAM;AACzB,UAAI,UAAU,CAAC,KAAK,CAAC,MAAM,MAAM,MAAM,OAAO;AAC9C,UAAI,UAAU,CAAC,KAAK,MAAM,MAAM,MAAM,OAAO;AAC7C,UAAI,UAAU,CAAC,IAAI,MAAM;AACzB,UAAI,UAAU,CAAC,KAAK,MAAM,MAAM,MAAM,OAAO;AAC7C,UAAI,UAAU,CAAC,KAAK,CAAC,MAAM,MAAM,MAAM,OAAO;AAC9C,UAAI,UAAU,CAAC,IAAI,MAAM;AACzB,UAAI,UAAU,CAAC,KAAK,CAAC,MAAM,MAAM,MAAM,OAAO;AAC9C,UAAI,UAAU,CAAC,KAAK,MAAM,MAAM,MAAM,OAAO;AAE7C,aAAO;AAAA,IACX;AAAA,IAEA,MAAM,IAAY,IAAkB;AAChC,UAAI,OAAO,KAAK,OAAO,GAAG;AACtB,eAAO;AAAA,MACX,OACK;AAED,eAAO,KAAK,SAAS,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MACpD;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,OAAO,OAAqB;AACxB,YAAM,IAAI,IAAI,KAAK;AACnB,YAAM,IAAI,IAAI,KAAK;AACnB,UAAI,MAAM,KAAK,MAAM,GAAG;AACpB,eAAO;AAAA,MACX,OACK;AAED,eAAO,KAAK,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MACnD;AAAA,IACJ;AAAA,IAEA,UAAU,aAA6C;AACnD,UAAI,YAAY,MAAM,KAAK,YAAY,MAAM,GAAG;AAC5C,eAAO;AAAA,MACX,OACK;AAED,eAAO,KAAK,SAAS,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,CAAC;AAAA,MAC1E;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,OAAqB;AACvB,UAAI,UAAU,GAAG;AACb,eAAO;AAAA,MACX,OACK;AACD,cAAM,IAAI,IAAI,KAAK;AAEnB,eAAO,KAAK,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAClD;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,OAAqB;AACvB,UAAI,UAAU,GAAG;AACb,eAAO;AAAA,MACX,OACK;AACD,cAAM,IAAI,IAAI,KAAK;AAEnB,eAAO,KAAK,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAClD;AAAA,IAEJ;AAAA,IAEA,UAAgB;AACZ,WAAK,WAAW;AAChB,aAAO;AAAA,IACX;AAAA,IAEA,aAAmB;AACf,UAAI,KAAK,UAAU;AACf,aAAK,QAAQ,IAAI,IAAI;AAAA,MACzB;AACA,aAAO;AAAA,IACX;AAAA,IAEA,QAAc;AACV,WAAK,WAAW;AAChB,aAAO,KAAK,WAAW;AAAA,IAC3B;AAAA,EACJ;;;ACnUO,WAAS,sBAAsB,OAAc,QAAsB;AAEtE,aAAU,UAAU,OAAO,SAAS,KAAM,IAAI,OAAO;AACrD,QAAI,SAAwB;AAC5B,UAAM,WAAqB,CAAC;AAE5B,WAAO,UAAU,OAAO,QAAQ;AAC5B,eAAS,KAAK,OAAO,MAAM;AAG3B,eAAS,OAAO;AAAA,IACpB;AAEA,aAAS,QAAQ;AAEjB,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,YAAM,IAAI,SAAS,CAAC;AACpB,aAAO,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG;AAAA,IACjF;AAAA,EACJ;;;ACPA,WAAS,eAAe,IAAc;AAClC,QAAI,GAAG,UAAU,GAAG;AAChB,aAAO;AAAA,IACX,OACK;AACD,aAAO,GAAG,MAAM;AAAA,IACpB;AAAA,EACJ;AAEO,WAAS,mBAAmB,MAAgC;AAC/D,QAAI,gBAAgB,OAAO;AACvB,aAAO,eAAe,KAAK,QAAQ;AAAA,IACvC;AACA,QAAI,gBAAgB,KAAK;AACrB,aAAO,eAAe,IAAI;AAAA,IAC9B,WACS,gBAAgB,QAAQ;AAC7B,aAAO,eAAe,KAAK,MAAM;AAAA,IACrC,WACS,MAAM,QAAQ,IAAI,GAAG;AAC1B,aAAO,IAAI,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,IACtC,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AA+BA,WAAS,kBAAkB,YAA8C;AACrE,QAAI,OAAO,WAAW,OAAO,UAAU;AACnC,aAAO,WAAW;AAAA,IACtB,OACK;AACD,aAAO,GAAG,UAAU,UAAU,GAAG,UAAU,SAAS,CAAC;AAAA,IACzD;AAAA,EACJ;AAEO,MAAe,QAAf,MAAe,eAAc,YAAiE;AAAA,IA2DjG,YAAqB,OAAe,aAAuC,CAAC,GAAG;AAE3E,YAAM,kBAAkB,UAAU,CAAC;AAFlB;AAIjB,WAAK,IAAI,WAAW,KAAK,SAAS,aAAa;AAC/C,WAAK,IAAI,cAAc,KAAK,YAAY,aAAa;AAErD,WAAK,UAAU,IAAI;AAKnB,WAAK,SAAS,IAAI,OAAO;AAKzB,WAAK,cAAc,IAAI,OAAO;AAE9B,UAAI,WAAW,UAAU;AACrB,aAAK,YAAY,mBAAmB,WAAW,QAAQ;AAAA,MAC3D,OACK;AACD,aAAK,YAAY,IAAI,IAAI,GAAG,CAAC;AAAA,MACjC;AAEA,UAAI,WAAW,UAAU;AACrB,aAAK,YAAY,WAAW;AAAA,MAChC,OACK;AACD,aAAK,YAAY,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,MACvC;AAEA,UAAI,WAAW,YAAY;AACvB,aAAK,cAAc,WAAW;AAAA,MAClC,OACK;AACD,aAAK,cAAc;AAAA,MACvB;AAEA,UAAI,OAAO,WAAW,YAAY,UAAU;AACxC,aAAK,SAAS,IAAI,WAAW,OAAO;AAAA,MACxC;AAEA,UAAI,WAAW,YAAY;AACvB,aAAK,YAAY,IAAI,WAAW,UAAU;AAAA,MAC9C;AAKA,WAAK,QAAQ;AAKb,WAAK,QAAQ;AAKb,WAAK,QAAQ;AAGb,WAAK,mBAAmB,KAAK,sBAAsB;AACnD,WAAK,mBAAmB,KAAK,sBAAsB;AAAA,IACvD;AAAA;AAAA;AAAA;AAAA,IAxHA,UAAkB;AAAA;AAAA;AAAA;AAAA,IAKlB,eAAuB;AAAA,IAEvB;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOS,SAAc,IAAI,IAAI,GAAG,CAAC;AAAA,IAC1B,gBAAgB,KAAK,OAAO,QAAQ,UAAU,MAAM;AACzD,WAAK,IAAI,qBAAiB,IAAI;AAAA,IAClC,CAAC;AAAA,IAGQ,SAAS,SAAS,CAAC;AAAA,IAEnB,SAAS,SAAS,CAAC;AAAA,IAEnB,WAAW,SAAS,CAAC;AAAA,IACrB,cAAc,SAAS,SAA8C;AAAA,IAErE;AAAA,IAET,YAA0B;AAAA,IAyFjB,UAAgB;AACrB,WAAK,cAAc,QAAQ;AAC3B,WAAK,wBAAwB;AAC7B,WAAK,wBAAwB;AAC7B,YAAM,QAAQ;AAAA,IAClB;AAAA,IAEA,eAAe,YAA2B;AAGtC,YAAM,WAAW,KAAK;AACtB,YAAM,IAAI,SAAS;AACnB,YAAM,IAAI,SAAS;AACnB,YAAM,WAAW,KAAK;AACtB,YAAM,QAAQ,KAAK;AACnB,YAAM,KAAK,MAAM;AACjB,YAAM,KAAK,MAAM;AACjB,UAAI,KAAK,MAAM,OAAO;AAClB,cAAM,aAAQ,SAAS;AACvB,cAAM,aAAQ,SAAS;AACvB,iCAAyB,GAAG,GAAG,IAAI,IAAI,YAAO,YAAO,KAAK,OAAO,KAAK,OAAO,KAAK,MAAM;AAAA,MAC5F,OACK;AACD,YAAI,YAAY;AAKZ,gBAAM,IAAI,SAAS;AACnB,gBAAM,IAAI,SAAS;AACnB,gBAAM,cAAS,IAAI,KAAK,KAAK;AAC7B,gBAAM,cAAS,IAAI,KAAK,KAAK;AAC7B,mCAAyB,GAAG,GAAG,IAAI,IAAI,YAAO,YAAO,KAAK,OAAO,KAAK,OAAO,KAAK,MAAM;AAAA,QAC5F,OACK;AACD,gBAAM,aAAQ,SAAS;AACvB,gBAAM,aAAQ,SAAS;AACvB,mCAAyB,GAAG,GAAG,IAAI,IAAI,YAAO,YAAO,KAAK,OAAO,KAAK,OAAO,KAAK,MAAM;AAAA,QAC5F;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,SAAe;AACX,UAAI,CAAC,KAAK,OAAO,UAAU,KAAK,IAAI,qBAAiB,GAAG;AACpD,aAAK,eAAe,KAAK,WAAW;AAAA,MACxC;AAGA,aAAO;AAAA,IACX;AAAA,IAEA,UAAU,YAAY,OAAa;AAC/B,WAAK,IAAI,uBAAmB,IAAI;AAChC,WAAK,IAAI,qBAAiB,IAAI;AAC9B,WAAK,IAAI,oBAAgB,IAAI;AAC7B,YAAM,UAAU,SAAS;AACzB,aAAO;AAAA,IACX;AAAA,IACA,YAAY,UAAqB;AAC7B,WAAK,wBAAwB;AAC7B,WAAK,YAAY;AACjB,WAAK,mBAAmB,KAAK,sBAAsB;AAAA,IACvD;AAAA,IACA,wBAAoC;AAChC,aAAO,KAAK,UAAU,QAAQ,UAAU,MAAM;AAC1C,aAAK,eAAe,KAAK,WAAW;AACpC,aAAK,IAAI,qBAAiB,IAAI;AAAA,MAClC,CAAC;AAAA,IACL;AAAA,IACA,0BAAgC;AAC5B,UAAI,KAAK,kBAAkB;AACvB,aAAK,iBAAiB,QAAQ;AAC9B,aAAK,mBAAmB;AAAA,MAC5B;AAAA,IACJ;AAAA,IACA,YAAY,UAAqB;AAC7B,WAAK,wBAAwB;AAC7B,WAAK,YAAY;AACjB,WAAK,mBAAmB,KAAK,sBAAsB;AAAA,IACvD;AAAA,IACA,wBAAoC;AAChC,aAAO,KAAK,UAAU,QAAQ,UAAU,MAAM;AAC1C,aAAK,eAAe,KAAK,WAAW;AACpC,aAAK,IAAI,qBAAiB,IAAI;AAAA,MAClC,CAAC;AAAA,IACL;AAAA,IACA,0BAAgC;AAC5B,UAAI,KAAK,kBAAkB;AACvB,aAAK,iBAAiB,QAAQ;AAC9B,aAAK,mBAAmB;AAAA,MAC5B;AAAA,IACJ;AAAA,IACA,IAAI,IAAS;AACT,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,EAAE,KAAU;AACZ,UAAI,eAAe,KAAK;AACpB,aAAK,UAAU,WAAW,GAAG;AAAA,MACjC;AAAA,IACJ;AAAA,IACA,IAAI,WAAgB;AAChB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,SAAS,UAAe;AACxB,UAAI,oBAAoB,KAAK;AACzB,aAAK,UAAU,WAAW,QAAQ;AAAA,MACtC;AAAA,IACJ;AAAA,IACA,IAAI,IAAS;AACT,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,EAAE,UAAe;AACjB,UAAI,oBAAoB,KAAK;AACzB,aAAK,UAAU,WAAW,QAAQ;AAAA,MACtC;AAAA,IACJ;AAAA,IACA,IAAI,WAAgB;AAChB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,SAAS,UAAe;AACxB,UAAI,oBAAoB,KAAK;AACzB,aAAK,UAAU,WAAW,QAAQ;AAAA,MACtC;AAAA,IACJ;AAAA,IACA,IAAI,QAAgB;AAChB,UAAI,KAAK,OAAO,MAAM,KAAK,OAAO,GAAG;AACjC,eAAO,KAAK,OAAO;AAAA,MACvB,OACK;AAED,cAAM,IAAI,MAAM;AAAA,MACpB;AAAA,IACJ;AAAA,IACA,IAAI,MAAM,OAAe;AACrB,WAAK,OAAO,IAAI;AAChB,WAAK,OAAO,IAAI;AAChB,WAAK,eAAe,KAAK,WAAW;AACpC,WAAK,IAAI,qBAAiB,IAAI;AAC9B,WAAK,IAAI,oBAAgB,IAAI;AAAA,IACjC;AAAA,IACA,IAAI,UAAe;AACf,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,QAAQ,OAAY;AACpB,WAAK,OAAO,IAAI,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;AACtC,WAAK,IAAI,qBAAiB,IAAI;AAC9B,WAAK,IAAI,oBAAgB,IAAI;AAAA,IACjC;AAAA,IACA,IAAI,QAAgB;AAChB,aAAO,KAAK,OAAO,IAAI;AAAA,IAC3B;AAAA,IACA,IAAI,MAAM,OAAe;AACrB,WAAK,OAAO,IAAI,KAAK;AACrB,WAAK,IAAI,qBAAiB,IAAI;AAAA,IAClC;AAAA,IACA,IAAI,QAAgB;AAChB,aAAO,KAAK,OAAO,IAAI;AAAA,IAC3B;AAAA,IACA,IAAI,MAAM,OAAe;AACrB,WAAK,OAAO,IAAI,KAAK;AACrB,WAAK,IAAI,qBAAiB,IAAI;AAAA,IAClC;AAAA,IACA,IAAI,WAAyB;AACzB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,SAAS,UAAwB;AACjC,WAAK,YAAY;AACjB,WAAK,IAAI,sBAAmB,IAAI;AAChC,UAAI,oBAAoB,UAAS,CAAC,SAAS,IAAI,MAAM;AACjD,iBAAS,IAAI,OAAO;AAAA,MACxB;AAAA,IACJ;AAAA,IACA,IAAI,SAAiB;AACjB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,OAAO,QAAgB;AACvB,WAAK,UAAU;AACf,WAAK,IAAI,qBAAiB,IAAI;AAAA,IAClC;AAAA,IACA,IAAI,UAAkB;AAClB,aAAO,KAAK,SAAS,IAAI;AAAA,IAC7B;AAAA,IACA,IAAI,QAAQ,SAAiB;AACzB,UAAI,OAAO,YAAY,UAAU;AAC7B,YAAI,WAAW,KAAK,WAAW,GAAG;AAC9B,cAAI,KAAK,YAAY,SAAS;AAC1B,iBAAK,SAAS,IAAI,OAAO;AAAA,UAC7B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,aAAgD;AAChD,aAAO,KAAK,YAAY,IAAI;AAAA,IAChC;AAAA,IACA,IAAI,WAAW,SAA4C;AACvD,UAAI,OAAO,YAAY,UAAU;AAC7B,YAAI,KAAK,eAAe,SAAS;AAC7B,eAAK,YAAY,IAAI,OAAO;AAAA,QAChC;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,OAAa;AACT,WAAK,aAAa;AAClB,aAAO;AAAA,IACX;AAAA,IACA,OAAa;AACT,WAAK,aAAa;AAClB,aAAO;AAAA,IACX;AAAA,IACA,WAAiB;AACb,WAAK,aAAa;AAClB,aAAO;AAAA,IACX;AAAA,IACA,IAAI,cAAc;AAEd,4BAAsB,MAAM,KAAK,YAAY;AAC7C,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,YAAY,aAAqB;AACjC,WAAK,eAAe;AAAA,IACxB;AAAA,EACJ;;;AC5ZO,MAAM,QAAN,MAAM,eAAc,MAAM;AAAA,IAE7B,eAAe;AAAA,IACf,OAAoC;AAAA,IACpC,QAA6D;AAAA,IAC7D,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,IAKV,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAMb,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAMb,UAAU;AAAA,IAEV,UAAU;AAAA,IAEV;AAAA,IACA,iBAAoC;AAAA,IACpC,iBAAoC;AAAA,IACpC,gBAAmC;AAAA;AAAA;AAAA;AAAA,IAK1B,YAAqB,CAAC;AAAA;AAAA;AAAA;AAAA,IAItB,eAAwB,CAAC;AAAA,IAElC,YAAY,OAAe,SAAkB,CAAC,GAAG,aAAuC,CAAC,GAAG;AAExF,YAAM,OAAO,iBAAiB,UAAU,CAAC;AAEzC,WAAK,UAAU,IAAI;AACnB,WAAK,IAAI,uBAAoB,IAAI;AACjC,WAAK,IAAI,2BAAuB,IAAI;AACpC,WAAK,IAAI,uBAAoB,IAAI;AACjC,WAAK,IAAI,oBAAiB,IAAI;AAC9B,WAAK,IAAI,qBAAiB,IAAI;AAC9B,WAAK,IAAI,oBAAgB,IAAI;AAC7B,WAAK,IAAI,sBAAmB,IAAI;AAEhC,WAAK,UAAU,IAAI,SAAS,MAAM;AAElC,WAAK,qBAAqB;AAAA,IAC9B;AAAA,IAES,UAAU;AACf,WAAK,yBAAyB;AAC9B,WAAK,QAAQ,QAAQ;AACrB,YAAM,QAAQ;AAAA,IAClB;AAAA,IAEA,iBAA0B;AACtB,aAAO;AAAA,IACX;AAAA,IAEA,OAAO,YAAsC,YAA8B;AAEvE,WAAK,OAAO;AAEZ,UAAI,KAAK,IAAI,MAAM;AAAA,MAEnB,OACK;AACD,aAAK,IAAI,OAAO,IAAI,cAAc,KAAK,EAAE,IAAI,KAAK,GAAG,CAAC;AACtD,mBAAW,YAAY,KAAK,IAAI,IAAI;AACpC,aAAK,IAAI,YAAY,KAAK,KAAK,OAAO,QAAQ,UAAU,MAAM;AAC1D,eAAK,IAAI,KAAK,aAAa,aAAa,0BAA0B,KAAK,MAAM,CAAC;AAAA,QAClF,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,SAAS,UAAU,CAAC,YAAY;AAC/D,gBAAM,SAAwB,EAAE,SAAS,GAAG,OAAO,GAAG;AACtD,cAAI,YAAY,GAAG;AACf,gBAAI,iBAAiB,KAAK,IAAI,MAAM,MAAM;AAAA,UAC9C,OACK;AACD,gBAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AAAA,UAC3C;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,YAAY,UAAU,CAAC,eAAe;AACrE,kBAAQ,YAAY;AAAA,YAChB,KAAK,WAAW;AACZ,oBAAM,SAAwB,EAAE,WAAW;AAC3C,kBAAI,iBAAiB,KAAK,IAAI,MAAM,MAAM;AAC1C;AAAA,YACJ;AAAA,YACA,SAAS;AACL,oBAAM,SAAwB,EAAE,WAAW;AAC3C,kBAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AACvC;AAAA,YACJ;AAAA,UACJ;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAAA,MACN;AAGA,YAAM,aAAa,KAAK,OAAO,UAAU,KAAK,IAAI,qBAAiB;AACnE,YAAM,cAA0B;AAAA,QAC5B;AAAA,QACA,MAAM,KAAK,IAAI;AAAA,MACnB;AAEA,UAAI,YAAY;AACZ,aAAK,IAAI,KAAK,aAAa,aAAa,0BAA0B,KAAK,MAAM,CAAC;AAAA,MAClF;AAEA,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,OAAO,KAAK,IAAI;AACtB,cAAM,OAAO,MAAM,UAAU;AAAA,MACjC;AAEA,UAAI,KAAK,IAAI,uBAAoB,GAAG;AAChC,aAAK,IAAI,KAAK,aAAa,SAAS,KAAK,UAAU,KAAK,GAAG,CAAC;AAAA,MAChE;AAEA,UAAI,KAAK,IAAI,uBAAoB,GAAG;AAChC,aAAK,UAAU,QAAQ,CAAC,UAAU;AAC9B,gBAAM,YAAY,MAAM,IAAI;AAC5B,cAAI,CAAC,WAAW;AACZ;AAAA,UACJ;AACA,gBAAM,MAAM,UAAU;AACtB,cAAI,CAAC,OAAO,2BAA2B,KAAK,GAAG,KAAK,MAAM,IAAI,MAAM;AAChE;AAAA,UACJ;AACA,sBAAY,KAAK,YAAY,SAAS;AAAA,QAC1C,CAAC;AAAA,MACL;AAEA,UAAI,KAAK,IAAI,2BAAuB,GAAG;AACnC,aAAK,aAAa,QAAQ,CAAC,UAAU;AACjC,gBAAM,YAAY,MAAM,IAAI;AAC5B,cAAI,CAAC,aAAa,UAAU,cAAc,YAAY,MAAM;AACxD;AAAA,UACJ;AACA,gBAAM,MAAM,UAAU;AACtB,cAAI,CAAC,KAAK;AACN;AAAA,UACJ;AAEA,cAAI,MAAM,IAAI,MAAM;AAChB;AAAA,UACJ;AACA,kBAAQ,MAAM,IAAI,WAAW;AAC7B,sBAAY,KAAK,YAAY,SAAS;AAAA,QAC1C,CAAC;AAAA,MACL;AAEA,UAAI,KAAK,IAAI,oBAAgB,GAAG;AAC5B,aAAK,SAAS,QAAQ,CAAC,UAAU;AAC7B,sBAAY,KAAK,YAAY,MAAM,IAAI,IAAI;AAAA,QAC/C,CAAC;AAAA,MACL,OAgBK;AAQD,YAAI,KAAK,IAAI,sBAAmB,GAAG;AAC/B,cAAI,KAAK,UAAU;AACf,iBAAK,SAAS,OAAO,YAAY,UAAU;AAC3C,iBAAK,IAAI,KAAK,aAAa,aAAa,UAAU,KAAK,SAAS,KAAK,GAAG;AAAA,UAC5E,OACK;AACD,iBAAK,IAAI,KAAK,gBAAgB,WAAW;AAAA,UAC7C;AAAA,QACJ;AAEA,aAAK,UAAU;AAAA,MACnB;AAAA,IACJ;AAAA,IAEA,uBAA6B;AACzB,WAAK,iBAAiB,KAAK,QAAQ,QAAQ,UAAU,CAAC,YAAqB;AACvE,mBAAW,SAAS,SAAS;AACzB,6BAAmB,OAAO,IAAI;AAAA,QAClC;AAAA,MACJ,CAAC;AAED,WAAK,iBAAiB,KAAK,QAAQ,QAAQ,UAAU,CAAC,YAAqB;AACvE,mBAAW,SAAS,SAAS;AACzB,6BAAmB,OAAO,IAAI;AAAA,QAClC;AAAA,MACJ,CAAC;AAED,WAAK,gBAAgB,KAAK,QAAQ,OAAO,UAAU,MAAM;AACrD,aAAK,IAAI,oBAAgB,IAAI;AAAA,MACjC,CAAC;AAAA,IACL;AAAA,IAEA,2BAAiC;AAC7B,UAAI,KAAK,gBAAgB;AACrB,aAAK,eAAe,QAAQ;AAC5B,aAAK,iBAAiB;AAAA,MAC1B;AACA,UAAI,KAAK,gBAAgB;AACrB,aAAK,eAAe,QAAQ;AAC5B,aAAK,iBAAiB;AAAA,MAC1B;AACA,UAAI,KAAK,eAAe;AACpB,aAAK,cAAc,QAAQ;AAC3B,aAAK,gBAAgB;AAAA,MACzB;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,SAAe;AACX,YAAM,OAAO,KAAK,eAAe,IAAI;AAErC,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,SAAS,KAAK,KAAK;AACzB,cAAM,SAAS,KAAK,KAAK;AAAA,MAC7B;AAEA,UAAI,KAAK,UAAU;AACf,aAAK,SAAS,SAAS,KAAK,KAAK;AACjC,aAAK,SAAS,SAAS,KAAK,KAAK;AAAA,MACrC;AAEA,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA,IAKA,SAAe;AACX,YAAM,OAAO,KAAK,eAAe,IAAI;AACrC,YAAM,MAAM,KAAK,OAAO,KAAK,SAAS,IAAI,KAAK,SAAS;AACxD,YAAM,MAAM,KAAK,MAAM,KAAK,UAAU,IAAI,KAAK,SAAS;AACxD,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,SAAS,KAAK;AACpB,cAAM,SAAS,KAAK;AAAA,MACxB;AACA,UAAI,KAAK,UAAU;AACf,aAAK,SAAS,SAAS,KAAK;AAC5B,aAAK,SAAS,SAAS,KAAK;AAAA,MAChC;AACA,aAAO;AAAA,IACX;AAAA,IAEA,QAAQ,IAA6B;AACjC,UAAI,QAAQ;AACZ,eAAS,OAAO,MAAwC;AACpD,YAAI,KAAK,OAAO,IAAI;AAChB,iBAAO;AAAA,QACX,WACS,gBAAgB,UAAS,KAAK,UAAU;AAC7C,mBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,oBAAQ,OAAO,KAAK,SAAS,MAAM,CAAC,CAAC;AACrC,gBAAI,OAAO;AACP,qBAAO;AAAA,YACX;AAAA,UACJ;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AACA,aAAO,OAAO,IAAI;AAAA,IACtB;AAAA,IAEA,eAAe,WAAsC;AACjD,YAAM,QAA2B,CAAC;AAClC,eAAS,OAAO,MAAuB;AACnC,YAAI,MAAM,UAAU,QAAQ,KAAK,KAAK,WAAW,SAAS,KAAK,GAAG;AAC9D,gBAAM,KAAK,IAAI;AAAA,QACnB;AACA,YAAI,gBAAgB,UAAS,KAAK,UAAU;AACxC,mBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,kBAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,mBAAO,KAAK;AAAA,UAChB;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AACA,aAAO,OAAO,IAAI;AAAA,IACtB;AAAA;AAAA,IAGA,UAAU,MAA8B;AACpC,YAAM,QAA2B,CAAC;AAClC,eAAS,OAAO,MAAuB;AACnC,YAAI,gBAAgB,MAAM;AACtB,gBAAM,KAAK,IAAI;AAAA,QACnB;AACA,YAAI,gBAAgB,UAAS,KAAK,UAAU;AACxC,mBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,kBAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,mBAAO,KAAK;AAAA,UAChB;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AACA,aAAO,OAAO,IAAI;AAAA,IACtB;AAAA,IAEA,OAAO,QAAiB;AACpB,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,cAAM,QAAQ,OAAO,CAAC;AACtB,YAAI,EAAE,SAAS,MAAM,KAAK;AACtB;AAAA,QACJ;AACA,cAAM,QAAQ,KAAK,SAAS,QAAQ,KAAK;AACzC,YAAI,SAAS,GAAG;AACZ,eAAK,SAAS,OAAO,OAAO,CAAC;AAAA,QACjC;AACA,aAAK,SAAS,KAAK,KAAK;AAAA,MAC5B;AACA,aAAO;AAAA,IACX;AAAA,IAEA,UAAU,QAAiB;AACvB,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,cAAM,QAAQ,OAAO,CAAC;AACtB,cAAM,QAAQ;AACd,cAAM,QAAQ,KAAK,SAAS,QAAQ,KAAK;AACzC,YAAI,SAAS,GAAG;AACZ,eAAK,SAAS,OAAO,OAAO,CAAC;AAAA,QACjC;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IAEA,eAAe,UAAU,OAAsE;AAE3F,WAAK,OAAO;AAGZ,UAAI,OAAO,UAAU,QAAQ,WACzB,MAAM,UAAU,SAAS;AAE7B,YAAM,SAAS,UAAU,KAAK,SAAS,KAAK;AAE5C,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAE3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AAEnC,YAAI,EAAE,MAAM,eAAe,cAAc,MAAM,eAAe,GAAG;AAC7D;AAAA,QACJ;AAEA,cAAM,OAAO,MAAM,eAAe,OAAO;AAEzC,cAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,KAAK,GAAG;AAChF,cAAM,KAAK,OAAO,KAAK,SAAS,YAAY,MAAM,KAAK,IAAI,KAAK,CAAC,SAAS,KAAK,IAAI;AACnF,cAAM,KAAK,OAAO,KAAK,UAAU,YAAY,MAAM,KAAK,KAAK,KAAK,CAAC,SAAS,KAAK,KAAK;AACtF,cAAM,KAAK,OAAO,KAAK,WAAW,YAAY,MAAM,KAAK,MAAM,KAAK,CAAC,SAAS,KAAK,MAAM;AAEzF,YAAI,MAAM,MAAM,MAAM,IAAI;AACtB;AAAA,QACJ;AAEA,YAAI,SAAS;AACT,gBAAM,CAAC,IAAI,EAAE,IAAI,OAAO,gBAAgB,KAAK,MAAM,KAAK,GAAG;AAC3D,gBAAM,CAAC,IAAI,EAAE,IAAI,OAAO,gBAAgB,KAAK,OAAO,KAAK,GAAG;AAC5D,gBAAM,CAAC,IAAI,EAAE,IAAI,OAAO,gBAAgB,KAAK,MAAM,KAAK,MAAM;AAC9D,gBAAM,CAAC,IAAI,EAAE,IAAI,OAAO,gBAAgB,KAAK,OAAO,KAAK,MAAM;AAE/D,gBAAM,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAC7B,iBAAO,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAC9B,kBAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/B,mBAAS,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QACpC,OACK;AACD,gBAAM,KAAK,IAAI,KAAK,KAAK,GAAG;AAC5B,iBAAO,KAAK,IAAI,KAAK,MAAM,IAAI;AAC/B,kBAAQ,KAAK,IAAI,KAAK,OAAO,KAAK;AAClC,mBAAS,KAAK,IAAI,KAAK,QAAQ,MAAM;AAAA,QACzC;AAAA,MACJ;AAEA,aAAO,EAAE,KAAK,MAAM,OAAO,OAAO;AAAA,IACtC;AAAA;AAAA;AAAA;AAAA,IAKA,SAAS;AACL,WAAK,SAAS,QAAQ,SAAU,OAAO;AACnC,cAAM,OAAO;AAAA,MACjB,CAAC;AACD,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA,IAKA,WAAW;AACP,WAAK,SAAS,QAAQ,SAAU,OAAO;AACnC,cAAM,SAAS;AAAA,MACnB,CAAC;AACD,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU,OAAe;AACrB,WAAK,SAAS,QAAQ,SAAU,OAAO;AACnC,cAAM,UAAU,KAAK;AAAA,MACzB,CAAC;AACD,aAAO;AAAA,IACX;AAAA,IAEA,SAAe;AACX,UAAI,KAAK,IAAI,uBAAoB,KAAK,KAAK,IAAI,oBAAiB,GAAG;AAE/D,cAAM,YAAY,KAAK,IAAI,KAAK,WAAW,KAAK,MAAM;AACtD,cAAM,SAAS,KAAK,IAAI,KAAK,WAAW,KAAK,MAAM;AACnD,cAAM,SAAS,KAAK;AACpB,YAAI,MAAM;AAEV,cAAM,KAAK,YAAY;AACvB,cAAM,KAAK,SAAS;AAEpB,iBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,gBAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,gBAAM,IAAI,MAAM;AAEhB,cAAI,KAAK,MAAM,GAAG;AACd,kBAAM,YAAY;AAClB,kBAAM,SAAS;AAAA,UACnB,WACS,KAAK,KAAK;AACf,kBAAM,YAAY;AAClB,kBAAM,SAAS;AAAA,UACnB,WACS,KAAK,OAAO,KAAK,MAAM,GAAG;AAC/B,kBAAM,aAAa,KAAK,OAAO;AAC/B,kBAAM,SAAS;AAAA,UACnB,WACS,KAAK,OAAO,KAAK,MAAM,GAAG;AAC/B,kBAAM,YAAY;AAClB,kBAAM,UAAU,KAAK,OAAO;AAAA,UAChC,OACK;AACD,kBAAM,YAAY;AAClB,kBAAM,SAAS;AAAA,UACnB;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO,MAAM,OAAO;AAAA,IACxB;AAAA,IAES,UAAU,YAAY,OAAO;AAClC,UAAI,KAAK,IAAI,uBAAoB,GAAG;AAChC,aAAK,UAAU,SAAS;AACxB,aAAK,IAAI,uBAAoB,IAAI;AAAA,MACrC;AAEA,UAAI,KAAK,IAAI,2BAAuB,GAAG;AACnC,aAAK,aAAa,SAAS;AAC3B,aAAK,IAAI,2BAAuB,IAAI;AAAA,MACxC;AAEA,WAAK,IAAI,oBAAgB,IAAI;AAC7B,WAAK,IAAI,sBAAmB,IAAI;AAEhC,WAAK,IAAI,uBAAoB,IAAI;AACjC,WAAK,IAAI,oBAAiB,IAAI;AAE9B,YAAM,UAAU,SAAS;AAEzB,aAAO;AAAA,IAEX;AAAA,IACA,IAAI,YAAqB;AACrB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,UAAU,WAAoB;AAC9B,WAAK,aAAa;AAClB,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,YAAY;AAAA,MACtB;AAAA,IACJ;AAAA,IACA,IAAI,YAAoB;AACpB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,UAAU,WAAmB;AAC7B,UAAI,OAAO,cAAc,UAAU;AAC/B,YAAI,KAAK,cAAc,WAAW;AAC9B,eAAK,aAAa;AAClB,eAAK,IAAI,uBAAoB,IAAI;AAAA,QACrC;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,MAAmC;AACnC,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,IAAI,KAAkC;AACtC,WAAK,OAAO;AACZ,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,MAAM;AAAA,MAChB;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,IAAI,WAA4B;AAC5B,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,SAAS,UAAU;AAEnB,WAAK,yBAAyB;AAC9B,WAAK,QAAQ,QAAQ;AAErB,WAAK,UAAU;AACf,WAAK,qBAAqB;AAE1B,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,cAAM,QAAQ,SAAS,MAAM,CAAC;AAC9B,2BAAmB,OAAO,IAAI;AAAA,MAClC;AAAA,IACJ;AAAA,IACA,IAAI,SAAkB;AAClB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,OAAO,GAAY;AACnB,WAAK,UAAU;AACf,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,SAAS;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,IAAI,SAAkB;AAClB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,OAAO,GAAY;AACnB,WAAK,UAAU;AACf,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,SAAS;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,IAAI,SAAiB;AACjB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,OAAO,QAAgB;AACvB,UAAI,OAAO,WAAW,UAAU;AAC5B,YAAI,KAAK,WAAW,QAAQ;AACxB,eAAK,UAAU;AACf,eAAK,IAAI,oBAAiB,IAAI;AAAA,QAClC;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,OAAc;AACd,YAAM,IAAI,MAAM;AAAA,IACpB;AAAA,IACA,IAAI,KAAK,MAAa;AAClB,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,OAAO;AAAA,MACjB;AAAA,IACJ;AAAA,IACA,IAAI,OAA4D;AAC5D,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,KAAK,GAAwD;AAC7D,WAAK,QAAQ;AACb,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,OAAO;AAAA,MACjB;AAAA,IACJ;AAAA,IACA,IAAI,SAAiB;AACjB,UAAI,KAAK,IAAI,qBAAiB,KAAK,KAAK,WAAW,GAAG;AAClD,aAAK,UAAU;AACf,YAAI,CAAC,KAAK,UAAU;AAChB,iBAAO,KAAK;AAAA,QAChB;AACA,iBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,gBAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,eAAK,WAAW,MAAM;AAAA,QAC1B;AAAA,MACJ;AACA,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,cAAsB;AACtB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,YAAY,aAAqB;AACjC,WAAK,eAAe;AACpB,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,cAAc;AAAA,MACxB;AAAA,IACJ;AAAA,IACA,IAAI,QAAgB;AAChB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,MAAM,GAAW;AACjB,WAAK,SAAS;AACd,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,QAAQ;AAAA,MAClB;AAAA,IACJ;AAAA,IACA,IAAI,SAAgB;AAChB,YAAM,IAAI,MAAM;AAAA,IACpB;AAAA,IACA,IAAI,OAAO,QAAe;AACtB,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,QAAQ,KAAK,SAAS,MAAM,CAAC;AACnC,cAAM,SAAS;AAAA,MACnB;AAAA,IACJ;AAAA,EACJ;AAEO,WAAS,mBAAmB,OAAc,QAAgB;AAE7D,UAAM,kBAAkB,MAAM;AAE9B,QAAI,oBAAoB,QAAQ;AAC5B,UAAI;AACJ;AAAA,IACJ;AAEA,QAAI,mBAAmB,2BAA2B,SAAS,gBAAgB,SAAS,IAAI,MAAM,EAAE,GAAG;AAC/F,YAAM,QAAQ,MAAM,UAAU,QAAQ,KAAK,gBAAgB,UAAU,KAAK;AAC1E,sBAAgB,SAAS,OAAO,OAAO,CAAC;AACxC,aAAO;AAAA,IACX;AAEA,QAAI,QAAQ;AACR,UAAI;AACJ;AAAA,IACJ;AAEA,WAAO;AAEP,QAAI,mBAAmB,2BAA2B,OAAO;AACrD,UAAI,gBAAgB,IAAI,uBAAoB,KAAK,gBAAgB,UAAU,WAAW,GAAG;AACrF,wBAAgB,IAAI,uBAAoB,IAAI;AAAA,MAChD;AACA,UAAI,gBAAgB,IAAI,2BAAuB,KAAK,gBAAgB,aAAa,WAAW,GAAG;AAC3F,wBAAgB,IAAI,2BAAuB,IAAI;AAAA,MACnD;AAAA,IACJ;AAEA,WAAO,MAAM;AAEb,aAAS,MAAM;AAEX,UAAI,OAAO,aAAa,SAAS,GAAG;AAChC,cAAM,QAAQ,MAAM,UAAU,QAAQ,KAAK,OAAO,cAAc,KAAK;AACrE,YAAI,SAAS,GAAG;AACZ,iBAAO,aAAa,OAAO,OAAO,CAAC;AAAA,QACvC;AAAA,MACJ;AAEA,UAAI,OAAO,UAAU,SAAS,GAAG;AAC7B,cAAM,QAAQ,MAAM,UAAU,QAAQ,KAAK,OAAO,WAAW,KAAK;AAClE,YAAI,SAAS,GAAG;AACZ,iBAAO,UAAU,OAAO,OAAO,CAAC;AAAA,QACpC;AAAA,MACJ;AAEA,YAAM,SAAS;AACf,aAAO,UAAU,KAAK,KAAK;AAC3B,aAAO,IAAI,uBAAoB,IAAI;AAAA,IACvC;AAEA,aAAS,SAAS;AAEd,UAAI,mBAAmB,2BAA2B,OAAO;AACrD,cAAM,WAAW,gBAAgB,UAAU,QAAQ,KAAK;AACxD,YAAI,YAAY,GAAG;AACf,0BAAgB,UAAU,OAAO,UAAU,CAAC;AAAA,QAChD;AAEA,cAAM,WAAW,gBAAgB,aAAa,QAAQ,KAAK;AAC3D,YAAI,WAAW,GAAG;AACd,0BAAgB,aAAa,KAAK,KAAK;AACvC,0BAAgB,IAAI,2BAAuB,IAAI;AAAA,QACnD;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,iBAAiB,YAAgE;AACtF,UAAM,SAAmC;AAAA,MACrC,IAAI,WAAW;AAAA,IACnB;AACA,WAAO;AAAA,EACX;;;ACluBO,WAAS,kBAAkB,GAA8B;AAC5D,QAAI,OAAO,MAAM,UAAU;AACvB,aAAO;AAAA,IACX,WACS,OAAO,MAAM,UAAU;AAC5B,aAAO;AAAA,IACX,OACK;AACD,YAAM,IAAI,MAAM;AAAA,IACpB;AAAA,EACJ;AAEO,WAAS,gBAAgB,GAAkB;AAC9C,QAAI,kBAAkB,CAAC,GAAG;AACtB,aAAO,QAAQ,EAAE,EAAE;AAAA,IACvB,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ;;;ACtBO,WAAS,wBAAwB,GAAgC;AAEpE,UAAM,IAAI,EAAE;AACZ,UAAM,IAAI,EAAE;AACZ,UAAM,IAAI,EAAE;AAEZ,UAAM,IAAI,EAAE;AACZ,UAAM,IAAI,EAAE;AACZ,UAAM,IAAI,EAAE;AAsCZ,WAAO;AAAA,MACH,UAAU,EAAE,GAAG,EAAE;AAAA,MACjB,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,QAAQ,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC;AAAA;AAAA,MAC/B,QAAQ,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA,MAG/B,UAAU,KAAK,MAAM,GAAG,CAAC;AAAA,IAC7B;AAAA,EAEJ;;;ACxDO,MAAM,QAAQ;AAAA,IAEjB,qBAAqB,KAAK,IAAI,IAAI,GAAG;AAAA,IAErC,gBAAgB;AAAA,IAEhB,WAAW;AAAA,IAEX,WAAW;AAAA,MACP,UAAU;AAAA,MACV,OAAO;AAAA,MACP,SAAS,OAAO;AAAA,IACpB;AAAA;AAAA;AAAA;AAAA,IAKA,WAAW;AAAA,MACP,CAAC,kBAA2B;AAAA,MAC5B,CAAC,GAAG,kBAA2B;AAAA,MAC/B,CAAC,qBAA6B,kBAA2B;AAAA,MACzD,CAAC,GAAG,oBAA6B,iBAA2B;AAAA,MAC5D,CAAC,oBAA6B,oBAA6B,iBAA2B;AAAA,MACtF,CAAC,GAAG,oBAA6B,oBAA6B,kBAA2B;AAAA,MACzF,CAAC,oBAA6B,mBAA6B,oBAA6B,kBAA2B;AAAA,MACnH,CAAC,GAAG,oBAA6B,oBAA6B,oBAA6B,kBAA2B;AAAA,MACtH,CAAC,qBAA6B,oBAA6B,oBAA6B,oBAA6B,kBAA2B;AAAA,MAChJ,CAAC,GAAG,qBAA6B,oBAA6B,oBAA6B,oBAA6B,iBAA2B;AAAA,MACnJ,CAAC,oBAA6B,oBAA6B,oBAA6B,oBAA6B,oBAA6B,kBAA2B;AAAA,MAC7K,CAAC,GAAG,oBAA6B,qBAA6B,oBAA6B,oBAA6B,oBAA6B,kBAA2B;AAAA,MAChL,CAAC,qBAA6B,qBAA6B,oBAA6B,oBAA6B,mBAA6B,oBAA6B,kBAA2B;AAAA,MAC1M,CAAC,GAAG,qBAA6B,oBAA6B,oBAA6B,oBAA6B,oBAA6B,mBAA6B,kBAA2B;AAAA,MAC7M,CAAC,qBAA6B,oBAA6B,qBAA6B,oBAA6B,mBAA6B,oBAA6B,oBAA6B,kBAA2B;AAAA,IAC3O;AAAA,IAEA,SAAS;AAAA,MACL,CAAC,CAAC;AAAA,MACF,CAAC,oBAA6B,kBAA2B;AAAA,MACzD,CAAC,oBAA6B,mBAA2B;AAAA,MACzD,CAAC,oBAA6B,qBAA6B,mBAA2B;AAAA,MACtF,CAAC,qBAA6B,oBAA6B,mBAA2B;AAAA,MACtF,CAAC,oBAA6B,oBAA6B,qBAA6B,kBAA2B;AAAA,MACnH,CAAC,mBAA6B,qBAA6B,qBAA6B,mBAA2B;AAAA,MACnH,CAAC,oBAA6B,qBAA6B,qBAA6B,oBAA6B,mBAA2B;AAAA,MAChJ,CAAC,qBAA6B,qBAA6B,qBAA6B,oBAA6B,mBAA2B;AAAA,MAChJ,CAAC,oBAA6B,qBAA6B,qBAA6B,qBAA6B,oBAA6B,mBAA2B;AAAA,MAC7K,CAAC,qBAA6B,oBAA6B,qBAA6B,qBAA6B,qBAA6B,mBAA2B;AAAA,MAC7K,CAAC,oBAA6B,qBAA6B,oBAA6B,qBAA6B,qBAA6B,qBAA6B,mBAA2B;AAAA,MAC1M,CAAC,oBAA6B,oBAA6B,qBAA6B,qBAA6B,qBAA6B,qBAA6B,mBAA2B;AAAA,MAC1M,CAAC,oBAA6B,qBAA6B,oBAA6B,qBAA6B,qBAA6B,qBAA6B,qBAA6B,mBAA2B;AAAA,MACvO,CAAC,oBAA6B,qBAA6B,qBAA6B,qBAA6B,qBAA6B,qBAA6B,sBAA6B,oBAA2B;AAAA,IAC3O;AAAA,EAEJ;AAUO,WAAS,0BAA0B,GAAW,GAAW,GAAW,GAAW,GAAmB;AACrG,UAAM,IAAI,IAAI;AACd,WAAQ,IAAI,IAAI,IAAI,IAAM,IAAI,IAAI,IAAI,IAAI,IAAM,IAAI,IAAI,IAAI,IAAI,IAC3D,IAAI,IAAI,IAAI;AAAA,EACrB;AAeO,WAAS,UAAa,SAAsC,IAAY,IAAY,IAAY,IAAY,IAAY,IAAY,IAAY,IAAY,QAAgB,MAAM,gBAAqB;AAE1M,UAAM,SAAS,QAAQ;AAIvB,QAAI,KAAK,IAAI,KAAK,EAAE,IAAI,QAAS,KAAK,IAAI,KAAK,EAAE,IAAI,MAAO;AACxD,aAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;AAAA,IAC3B;AAEA,UAAM,SAAc,CAAC;AAErB,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,YAAM,IAAI,IAAI;AACd,YAAM,IAAI,0BAA0B,GAAG,IAAI,IAAI,IAAI,EAAE;AACrD,YAAM,IAAI,0BAA0B,GAAG,IAAI,IAAI,IAAI,EAAE;AACrD,aAAO,KAAK,QAAQ,GAAG,CAAC,CAAC;AAAA,IAC7B;AAEA,WAAO;AAAA,EACX;AAeO,WAAS,eAAe,IAAY,IAAY,IAAY,IAAY,IAAY,IAAY,IAAY,IAAY,OAAuB;AAIlJ,QAAI,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,IAAI;AAClD,YAAM,KAAK,KAAK;AAChB,YAAM,KAAK,KAAK;AAChB,aAAO,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE;AAAA,IACtC;AAGA,UAAM,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KACjC,KAAK,KAAK,KAAK,MAAM,KAAK,IAC1B,KAAK,KAAK,KAAK,KAEf,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAC/B,KAAK,KAAK,KAAK,MAAM,KAAK,IAC1B,KAAK,KAAK,KAAK;AAEnB,aAAS,UAAU,GAAmB;AAElC,YAAM,MAAM,KAAK,IAAI,MAAM,IAAI,IAC3B,MAAM,KAAK,IAAI,MAAM,IAAI;AAC7B,aAAO,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE;AAAA,IACtC;AAEA,WAAO;AAAA,MACH;AAAA,MAAW;AAAA,MAAG;AAAA,MAAG,SAAS,MAAM;AAAA,IACpC;AAAA,EACJ;AAcO,WAAS,oBAAoB,IAAY,IAAY,IAAY,IAAY,IAAY,IAAY,IAAY,IAA8E;AAElM,UAAM,UAAoB,CAAC;AAC3B,UAAM,SAA+B,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5C,QAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,MAAM;AAE9B,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,UAAI,KAAK,GAAG;AACR,YAAI,IAAI,KAAK,KAAK,KAAK,IAAI;AAC3B,YAAI,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AACpC,YAAI,IAAI,KAAK,IAAI;AAAA,MACrB,OACK;AACD,YAAI,IAAI,KAAK,KAAK,KAAK,IAAI;AAC3B,YAAI,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AACpC,YAAI,IAAI,KAAK,IAAI;AAAA,MACrB;AACA,UAAI,KAAK,IAAI,CAAC,IAAI,OAAO;AACrB,YAAI,KAAK,IAAI,CAAC,IAAI,OAAO;AACrB;AAAA,QACJ;AACA,YAAI,CAAC,IAAI;AACT,YAAI,IAAI,KAAK,IAAI,GAAG;AAChB,kBAAQ,KAAK,CAAC;AAAA,QAClB;AACA;AAAA,MACJ;AACA,aAAO,IAAI,IAAI,IAAI,IAAI;AACvB,iBAAW,KAAK,KAAK,IAAI;AACzB,UAAI,OAAO,GAAG;AACV;AAAA,MACJ;AACA,YAAM,CAAC,IAAI,aAAa,IAAI;AAC5B,UAAI,IAAI,MAAM,KAAK,GAAG;AAClB,gBAAQ,KAAK,EAAE;AAAA,MACnB;AACA,YAAM,CAAC,IAAI,aAAa,IAAI;AAC5B,UAAI,IAAI,MAAM,KAAK,GAAG;AAClB,gBAAQ,KAAK,EAAE;AAAA,MACnB;AAAA,IACJ;AAEA,UAAM,OAAO,QAAQ;AACrB,QAAI,IAAI;AACR,QAAI;AAEJ,WAAO,KAAK;AACR,UAAI,QAAQ,CAAC;AACb,WAAK,IAAI;AACT,aAAO,CAAC,EAAE,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAC5F,aAAO,CAAC,EAAE,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,IAChG;AAEA,WAAO,CAAC,EAAE,IAAI,IAAI;AAClB,WAAO,CAAC,EAAE,IAAI,IAAI;AAClB,WAAO,CAAC,EAAE,OAAO,CAAC,IAAI;AACtB,WAAO,CAAC,EAAE,OAAO,CAAC,IAAI;AACtB,WAAO,CAAC,EAAE,SAAS,OAAO,CAAC,EAAE,SAAS,OAAO;AAE7C,WAAO;AAAA,MACH,KAAK,EAAE,GAAG,KAAK,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,GAAG,GAAG,KAAK,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,EAAE;AAAA,MACxE,KAAK,EAAE,GAAG,KAAK,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,GAAG,GAAG,KAAK,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,EAAE;AAAA,IAC5E;AAAA,EAEJ;AAKO,WAAS,UAAU,GAA0B,GAAW,GAAW,GAAW;AACjF,UAAM,IAAI,MAAM,UAAU,IAAI,CAAC;AAC/B,UAAM,IAAI,MAAM,QAAQ,IAAI,CAAC;AAC7B,UAAM,IAAI,OAAO,IAAI;AACrB,UAAM,IAAI,IAAI;AACd,QAAI,IAAI;AACR,UAAM,IAAK,IAAI,KAAM;AACrB,QAAI,MAAM,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,IAAI;AAClC,WAAO,IAAI,GAAG;AACV,YAAM,KAAK,IAAI,EAAE,CAAC;AAClB,aAAO,EAAE,GAAG,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAAA,IACzC;AACA,WAAO,IAAI;AAAA,EACf;AAKO,WAAS,mBAAmB,QAA4B,QAAuB;AAElF,UAAM,IAAI,OAAO,QAAQ,OAAO,IAAI;AAEpC,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,YAAM,QAAQ,OAAO,MAAM,CAAC;AAE5B,YAAM,OAAO,SAAS,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC;AACvD,YAAM,OAAO,SAAS,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI;AAE1D,YAAM,IAAI,OAAO,MAAM,IAAI;AAC3B,YAAM,IAAI;AACV,YAAM,IAAI,OAAO,MAAM,IAAI;AAC3B,uBAAiB,GAAG,GAAG,CAAC;AAExB,QAAE,UAAU,MAAM,IAAI,SAAS,OAAO,SAAS;AAAA,IACnD;AAAA,EACJ;AAKO,WAAS,iBAAiB,GAAW,GAAW,GAAmB;AAEtE,UAAM,KAAK,IAAI,aAAa,EAAE,QAAQ,EAAE,MAAM;AAC9C,UAAM,KAAK,IAAI,aAAa,EAAE,QAAQ,EAAE,MAAM;AAE9C,QAAI,KAAK,IAAI,gBAAgB,EAAE,QAAQ,EAAE,MAAM;AAC/C,QAAI,KAAK,IAAI,gBAAgB,EAAE,QAAQ,EAAE,MAAM;AAE/C,QAAI,OAAO,KAAK,MAAM;AAGtB,QAAI,KAAK,QAAU,KAAK,MAAQ;AAC5B,UAAI,OAAO,EAAE,aAAa,aAAa,CAAC,EAAE,UAAU;AAChD,UAAE,SAAS,EAAE,WAAW,EAAE,MAAM;AAChC,UAAE,SAAS,EAAE,WAAW,EAAE,MAAM;AAAA,MACpC;AACA,aAAO;AAAA,IACX;AAEA,UAAM;AACN,UAAM;AAEN,QAAI,KAAK,IAAI;AACT,aAAO;AAAA,IACX,OACK;AACD,aAAO;AAAA,IACX;AAEA,MAAE,SAAS,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI;AACjC,MAAE,SAAS,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI;AAEjC,WAAO,KAAK;AAEZ,MAAE,SAAS,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI;AACjC,MAAE,SAAS,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI;AAEjC,QAAI,OAAO,EAAE,aAAa,aAAa,CAAC,EAAE,UAAU;AAChD,QAAE,SAAS,EAAE,KAAK,EAAE;AACpB,QAAE,SAAS,EAAE,KAAK,EAAE;AACpB,QAAE,SAAS,EAAE,KAAK,EAAE;AACpB,QAAE,SAAS,EAAE,KAAK,EAAE;AAAA,IACxB;AAEA,WAAO;AAAA,EAEX;;;AC/TO,WAAS,SAAS,MAAY,GAAoB;AAErD,QAAI,MAAM,KAAK,MAAM,GAAG;AACpB,aAAO;AAAA,IACX;AAEA,UAAM,SAAS,KAAK;AACpB,UAAM,SAAS,SAAS;AACxB,QAAI,UAAU;AAEd,UAAM,UAAU,KAAK;AACrB,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,YAAM,OAAO,QAAQ,CAAC;AACtB,UAAI,WAAW,QAAQ;AACnB,eAAO,SAAS,WAAW;AAAA,MAC/B;AACA,iBAAW;AAAA,IACf;AAEA,WAAO;AAAA,EAEX;AAiBO,WAAS,cAAc,MAAqB,QAAwB;AAEvE,UAAM,QAAQ,KAAK;AAEnB,QAAI,UAAU,GAAG;AACb,aAAO;AAAA,IACX,WACS,UAAU,OAAO;AACtB,aAAO,KAAK,QAAQ,SAAS;AAAA,IACjC;AACA,aAAS,IAAI,GAAG,MAAM,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AACnD,UAAI,MAAM,KAAK,QAAQ,CAAC,KAAK,QAAQ;AACjC,kBAAU;AACV,eAAO,KAAK,IAAI,IAAI,GAAG,CAAC,IAAI,SAAS,KAAK,QAAQ,CAAC;AAAA,MACvD;AACA,aAAO,KAAK,QAAQ,CAAC;AAAA,IACzB;AACA,WAAO;AAAA,EACX;AAEO,WAASC,gBAAe,GAAW,GAAW,OAAuB;AAExE,QAAI,IAAI,IAAI,IAAI;AAEhB,UAAM,QAAQ,EAAE,YAAY,EAAE,SAAS;AACvC,UAAM,OAAO,EAAE,YAAY,EAAE,SAAS;AAEtC,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,EAAE;AACb,UAAM,SAAS,GAAG;AAClB,UAAM,SAAS,GAAG;AAClB,UAAM,QAAQ,GAAG;AACjB,UAAM,QAAQ,GAAG;AACjB,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,EAAE;AAEb,QAAI,SAAS,EAAE,UAAU;AACrB,YAAM,EAAE;AACR,YAAM,EAAE;AAAA,IACZ;AAEA,QAAI,QAAQ,EAAE,UAAU;AACpB,YAAM,EAAE;AACR,YAAM,EAAE;AAAA,IACZ;AAEA,WAAO,eAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK;AAAA,EAEpD;AAEO,WAAS,gBAAgB,GAAW,GAAW,OAAyB;AAE3E,UAAM,KAAK,EAAE,SAAS;AACtB,UAAM,KAAK,EAAE,SAAS;AAEtB,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,EAAE;AACb,QAAI,MAAM,GAAG;AACb,QAAI,MAAM,GAAG;AACb,QAAI,MAAM,GAAG;AACb,QAAI,MAAM,GAAG;AACb,UAAM,KAAK,EAAE;AACb,UAAM,KAAK,EAAE;AAEb,QAAI,EAAE,UAAU;AACZ,aAAO,EAAE;AACT,aAAO,EAAE;AAAA,IACb;AAEA,QAAI,EAAE,UAAU;AACZ,aAAO,EAAE;AACT,aAAO,EAAE;AAAA,IACb;AACA,UAAM,UAAU,CAAC,GAAW,MAAc,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,CAAC;AAErE,WAAO,UAAU,SAAS,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK;AAAA,EACvE;;;ACtGM,WAAU,kBAAkB,QAAgB;AAE9C,WAAQ,OAAe,QAAQ;EACnC;AAEM,WAAU,kBAAkB,QAAkB,QAAc;AAE7D,WAAe,QAAQ,IAAI;EAChC;AAEA,MAAM,MAAM,KAAK;AACjB,MAAM,MAAM,KAAK;AAEjB,MAAM,SAAS,IAAI,IAAG;AAuBhB,MAAO,OAAP,cAAoB,MAAK;IAE3B,UAAU;IAED,WAAqB,CAAA;IAErB,QAAQ,SAAS,MAAe;IACzC,eAAkC;IACzB,eAAe,SAAS,CAAG;IAE3B,UAAU,SAAS,SAAkB;IAC9C,iBAAoC;IAC3B,eAAe,SAAS,CAAC;IACzB,iBAAiB,SAAS,CAAG;IAEtC,gBAAwG;;;;IAK/F,OAAO,SAAS,OAAsC;;;;IAKtD,QAAQ,SAAS,OAA8D;;;;IAK/E,SAAS,SAAS,CAAC;IAE5B,UAAU;IACV,UAAU;IACV,aAAa;IACb,aAAa;IACb,UAAU;IAEV,UAAoB;;;;IAKpB;;IAEA,mBAAsC;IACtC,mBAAsC;;;;;IAK7B,WAAqB,CAAA;IAErB,qBAAqB,oBAAI,IAAG;;;;;;;IAQrC,YAAY,OAAe,WAAqB,CAAA,GAAI,QAAkB,QAAkB,QAAkB,aAAsC,CAAA,GAAE;AAE9I,YAAM,OAAO,UAAU;AAEvB,WAAK,IAAI,QAAQ,KAAK,MAAM,aAAY;AACxC,WAAK,IAAI,eAAe,KAAK,aAAa,aAAY;AACtD,WAAK,IAAI,UAAU,KAAK,QAAQ,aAAY;AAC5C,WAAK,IAAI,iBAAiB,KAAK,eAAe,aAAY;AAC1D,WAAK,IAAI,eAAe,KAAK,aAAa,aAAY;AAEtD,WAAK,UAAU,IAAI;AACnB,WAAK,IAAI,sBAAmB,IAAI;AAChC,WAAK,IAAI,sBAAmB,IAAI;AAEhC,WAAK,IAAI,WAAW,CAAA;AACpB,WAAK,IAAI,mBAAmB,SAAS,CAAC;AACtC,WAAK,IAAI,YAAY,KAAK,IAAI,iBAAiB,aAAY;AAK3D,WAAK,SAAS,CAAC,CAAC;AAKhB,WAAK,SAAS,CAAC,CAAC;AAMhB,WAAK,YAAY;AAKjB,WAAK,SAAS;AAId,UAAI,WAAW,MAAM;AACjB,aAAK,OAAO,WAAW;MAC3B,OACK;AACD,aAAK,OAAO;MAChB;AAEA,UAAI,OAAO,WAAW,gBAAgB,UAAU;AAC5C,aAAK,cAAc,WAAW;MAClC,OACK;AACD,aAAK,cAAc;MACvB;AAEA,UAAI,WAAW,QAAQ;AACnB,aAAK,SAAS,WAAW;MAC7B,OACK;AACD,aAAK,SAAS;MAClB;AAEA,UAAI,OAAO,WAAW,gBAAgB,UAAU;AAC5C,aAAK,cAAc,WAAW;MAClC,OACK;AACD,aAAK,cAAc;MACvB;AAEA,UAAI,OAAO,WAAW,kBAAkB,UAAU;AAC9C,aAAK,gBAAgB,WAAW;MACpC,OACK;AACD,aAAK,gBAAgB;MACzB;AAMA,WAAK,YAAY;AAKjB,WAAK,MAAM;AAKX,WAAK,OAAO;AAKZ,WAAK,QAAQ;AAEb,WAAK,WAAW,IAAI,WAAW,QAAQ;AAEvC,WAAK,YAAY,CAAC;AAOlB,WAAK,SAAS,CAAA;AAEd,wBAAkB,KAAK,QAAQ,CAAC;IACpC;IAEA,OAAO,YAAsC,YAAsB;AAE/D,WAAK,OAAM;AAGX,YAAM,UAAyB,CAAA;AAE/B,YAAM,aAAa,KAAK,OAAO,UAAU,KAAK,IAAI,qBAAiB;AAEnE,UAAI,YAAY;AACZ,gBAAQ,YAAY,0BAA0B,KAAK,MAAM;MAC7D;AAEA,UAAI,KAAK,QAAQ,kBAAkB,KAAK,IAAI,GAAG;AAC3C,aAAK,IAAI,gBAAgB;AACzB,aAAK,KAAK,OAAO,UAAU;MAC/B;AAEA,UAAI,KAAK,IAAI,mBAAe,GAAG;AAC3B,YAAI,KAAK,MAAM;AACX,kBAAQ,OAAO,gBAAgB,KAAK,IAAI;QAC5C;AACA,YAAI,KAAK,IAAI,iBAAiB,OAAO,KAAK,SAAS,UAAU;AACzD,8BAAoB,qBAAqB,UAAU,GAAG,IAAI;AAC1D,iBAAO,KAAK,IAAI;QACpB;MACJ;AAEA,UAAI,KAAK,UAAU,kBAAkB,KAAK,MAAM,GAAG;AAC/C,aAAK,IAAI,kBAAkB;AAC3B,aAAK,OAAO,OAAO,UAAU;MACjC;AAEA,UAAI,KAAK,IAAI,qBAAiB,GAAG;AAC7B,YAAI,KAAK,QAAQ;AACb,kBAAQ,SAAS,gBAAgB,KAAK,MAAM;QAChD;AACA,YAAI,KAAK,IAAI,mBAAmB,OAAO,KAAK,WAAW,UAAU;AAC7D,8BAAoB,qBAAqB,UAAU,GAAG,IAAI;AAC1D,iBAAO,KAAK,IAAI;QACpB;MACJ;AAEA,UAAI,KAAK,IAAI,wBAAoB,GAAG;AAChC,gBAAQ,cAAc,IAAI,GAAG,KAAK,WAAW;MACjD;AAEA,UAAI,KAAK,IAAI,uBAAoB,GAAG;AAChC,gBAAQ,OAAO,IAAI,KAAK,UAAU,KAAK,GAAG;MAC9C;AAEA,UAAI,KAAK,IAAI,2BAAuB,GAAG;AACnC,gBAAQ,eAAe,IAAI,KAAK;MACpC;AAEA,UAAI,KAAK,IAAI,iBAAc,GAAG;AAC1B,gBAAQ,gBAAgB,IAAI,KAAK;MACrC;AAEA,UAAI,KAAK,IAAI,mBAAe,GAAG;AAC3B,gBAAQ,iBAAiB,IAAI,KAAK;MACtC;AAEA,UAAI,KAAK,IAAI,oBAAgB,GAAG;AAC5B,gBAAQ,mBAAmB,IAAI,GAAG,KAAK,KAAK;MAChD;AAEA,UAAI,KAAK,UAAU,KAAK,OAAO,SAAS,GAAG;AACvC,gBAAQ,kBAAkB,IAAI,KAAK,OAAO,KAAK,GAAG;AAClD,gBAAQ,mBAAmB,IAAI,GAAG,kBAAkB,KAAK,MAAM,KAAK,CAAC;MACzE;AAEA,UAAI,KAAK,IAAI,MAAM;AAEf,YAAI,cAAc,KAAK,IAAI,MAAM,OAAO;MAC5C,OACK;AACD,gBAAQ,KAAK,KAAK;AAClB,aAAK,IAAI,OAAO,IAAI,cAAc,QAAQ,OAAO;AACjD,mBAAW,YAAY,KAAK,IAAI,IAAI;AAGpC,aAAK,IAAI,YAAY,KAAK,KAAK,OAAO,QAAQ,UAAU,CAAC,WAAU;AAC/D,gBAAM,SAAwB,CAAA;AAC9B,iBAAO,YAAY,0BAA0B,MAAM;AACnD,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM;QAC3C,CAAC,CAAC;AAEF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,UAAU,UAAU,MAAK;AACxD,gBAAM,SAAwB,CAAA;AAC9B,iBAAO,IAAI,IAAI,kBAAkB,KAAK,OAAO,KAAK,UAAU,KAAK,UAAU,KAAK,IAAI,UAAU,KAAK,MAAM;AACzG,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM;QAC3C,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,MAAM,UAAU,CAAC,SAAQ;AACxD,gBAAM,SAAwB,CAAA;AAC9B,iBAAO,OAAO,gBAAgB,IAAI;AAClC,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AAEvC,cAAI,KAAK,IAAI,iBAAiB,OAAO,SAAS,UAAU;AACpD,gCAAoB,qBAAqB,UAAU,GAAG,IAAI;AAC1D,mBAAO,KAAK,IAAI;UACpB;AAEA,iBAAO,WAAA;UAEP;QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,aAAa,UAAU,CAAC,gBAAe;AACtE,gBAAM,SAAwB,CAAA;AAC9B,iBAAO,cAAc,IAAI,GAAG,WAAW;AACvC,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AACvC,iBAAO,WAAA;UAEP;QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,SAAS,UAAU,CAAC,YAAW;AAC9D,gBAAM,SAAwB,EAAE,SAAS,GAAG,OAAO,GAAE;AACrD,cAAI,YAAY,GAAG;AACf,gBAAI,iBAAiB,KAAK,IAAI,MAAM,MAAM;UAC9C,OACK;AACD,gBAAI,cAAc,KAAK,IAAI,MAAM,MAAM;UAC3C;AACA,iBAAO,WAAA;UAEP;QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,QAAQ,UAAU,CAAC,WAAU;AAC5D,gBAAM,SAAwB,CAAA;AAC9B,iBAAO,SAAS,gBAAgB,MAAM;AACtC,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AAEvC,cAAI,KAAK,IAAI,mBAAmB,OAAO,WAAW,UAAU;AACxD,gCAAoB,qBAAqB,UAAU,GAAG,IAAI;AAC1D,mBAAO,KAAK,IAAI;UACpB;AAEA,iBAAO,WAAA;UAEP;QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,eAAe,UAAU,CAAC,kBAAiB;AAC1E,gBAAM,SAAwB,CAAA;AAC9B,iBAAO,gBAAgB,IAAI,GAAG,aAAa;AAC3C,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AACvC,iBAAO,WAAA;UAEP;QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,aAAa,UAAU,CAAC,gBAAe;AACtE,gBAAM,SAAwB,CAAA;AAC9B,iBAAO,cAAc,IAAI,GAAG,WAAW;AACvC,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AACvC,iBAAO,WAAA;UAEP;QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,YAAY,UAAU,CAAC,eAAc;AACpE,kBAAQ,YAAY;YAChB,KAAK,WAAW;AACZ,oBAAM,SAAwB,EAAE,WAAU;AAC1C,kBAAI,iBAAiB,KAAK,IAAI,MAAM,MAAM;AAC1C;YACJ;YACA,SAAS;AACL,oBAAM,SAAwB,EAAE,WAAU;AAC1C,kBAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AACvC;YACJ;UACJ;AACA,iBAAO,WAAA;UAEP;QACJ,CAAC,CAAC;MACN;AAEA,UAAI,KAAK,IAAI,sBAAmB,GAAG;AAC/B,cAAM,OAAO,IAAI,QAAQ,MAAM,UAAU;AACzC,cAAM,OAAO,KAAK,IAAI;AAEtB,YAAI,KAAK,IAAI,MAAM;AACf,eAAK,gBAAgB,IAAI;AACzB,eAAK,aAAa,MAAM,KAAK,EAAE;AAC/B,eAAK,YAAY,IAAI;QACzB,OACK;AACD,eAAK,gBAAgB,IAAI;AACzB,eAAK,aAAa,MAAM,KAAK,EAAE;AAC/B,cAAI,KAAK,UAAU,KAAK,kBAAkB,aAAa;AACnD,iBAAK,OAAO,IAAI,KAAK,YAAY,IAAI;UACzC;QACJ;MACJ;AAOA,UAAI,KAAK,IAAI,sBAAmB,GAAG;AAC/B,YAAI,KAAK,UAAU;AACf,eAAK,SAAS,OAAO,YAAY,UAAU;AAC3C,eAAK,IAAI,KAAK,aAAa,aAAa,UAAU,KAAK,SAAS,KAAK,GAAG;QAC5E,OACK;AACD,eAAK,IAAI,KAAK,gBAAgB,WAAW;QAC7C;MACJ;AAEA,WAAK,UAAS;IAClB;;;;IAKA,SAAM;AACF,WAAK,OAAO;AACZ,aAAO;IACX;;;;IAKA,WAAQ;AACJ,WAAK,SAAS;AACd,aAAO;IACX;IAEA,SAAM;AACF,YAAM,OAAO,KAAK,eAAe,IAAI;AACrC,YAAM,MAAM,KAAK,QAAQ,KAAK,QAAQ;AACtC,YAAM,MAAM,KAAK,SAAS,KAAK,OAAO;AACtC,YAAM,MAAM,KAAK,OAAO,KAAK,SAAS;AACtC,YAAM,MAAM,KAAK,MAAM,KAAK,UAAU;AAEtC,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,IAAI,KAAK,SAAS,MAAM,CAAC;AAC/B,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;MACX;AAEA,UAAI,KAAK,UAAU;AACf,aAAK,SAAS,SAAS,KAAK;AAC5B,aAAK,SAAS,SAAS,KAAK;AAC5B,aAAK,SAAS,SAAS,KAAK;AAC5B,aAAK,SAAS,SAAS,KAAK;MAChC;AACA,aAAO;IACX;IAEA,SAAM;AACF,YAAM,OAAO,KAAK,eAAe,IAAI;AAErC,YAAM,MAAM,KAAK,OAAO,KAAK,SAAS,IAAI,KAAK,SAAS;AACxD,YAAM,MAAM,KAAK,MAAM,KAAK,UAAU,IAAI,KAAK,SAAS;AAExD,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAM,IAAI,KAAK,SAAS,MAAM,CAAC;AAC/B,UAAE,KAAK;AACP,UAAE,KAAK;MACX;AAEA,UAAI,KAAK,UAAU;AACf,aAAK,SAAS,SAAS,KAAK;AAC5B,aAAK,SAAS,SAAS,KAAK;MAChC;AAEA,aAAO;IAEX;IAEA,eAAe,SAAiB;AAE5B,UAAI,OAAO;AACX,UAAI,QAAQ;AACZ,UAAI,MAAM;AACV,UAAI,SAAS;AAEb,WAAK,OAAM;AAEX,YAAM,IAAI,UAAU,KAAK,SAAS,KAAK;AAEvC,UAAI,UAAU,KAAK,eAAe,KAAK;AACvC,YAAM,IAAI,KAAK,IAAI,SAAS;AAE5B,UAAI,KAAK,cAAc,KAAM,KAAK,UAAU,OAAO,KAAK,WAAW,YAAY,CAAE,sBAAsB,KAAK,KAAK,MAAM,GAAK;AACxH,YAAI,KAAK,OAAO,QAAQ;AACpB,gBAAM,EAAE,QAAQ,OAAM,IAAK,wBAAwB,CAAC;AACpD,mBAAS,IAAI,QAAQ,MAAM,KAAK,KAAK,eAAe,KAAK;QAC7D,OACK;AACD,oBAAU,IAAI,KAAK,QAAQ,GAAG,KAAK,QAAQ,CAAC;QAChD;MACJ;AAEA,UAAI,KAAK,GAAG;AACR,eAAO,CAAA;MACX;AAEA,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,cAAM,KAAK,KAAK,IAAI,SAAS,CAAC;AAG9B,cAAM,KAAK,KAAK,IAAI,UAAU,IAAI,IAAI,KAAK,CAAC;AAE5C,cAAM,CAAC,KAAK,GAAG,IAAI,EAAE,gBAAgB,GAAG,GAAG,GAAG,CAAC;AAC/C,cAAM,CAAC,KAAK,GAAG,IAAI,EAAE,gBAAgB,GAAG,GAAG,GAAG,CAAC;AAE/C,YAAI,GAAG,YAAY,GAAG,UAAU;AAE5B,cAAI,KAAK,GAAG,SAAS,EAAE;AACvB,cAAI,KAAK,GAAG,SAAS,EAAE;AAEvB,cAAI,GAAG,UAAU;AACb,kBAAM,GAAG;AACT,kBAAM,GAAG;UACb;AAEA,gBAAM,CAAC,KAAK,GAAG,IAAI,EAAE,gBAAgB,IAAI,EAAE;AAE3C,cAAI,KAAK,GAAG,SAAS,EAAE;AACvB,cAAI,KAAK,GAAG,SAAS,EAAE;AAEvB,cAAI,GAAG,UAAU;AACb,kBAAM,GAAG;AACT,kBAAM,GAAG;UACb;AAEA,gBAAM,CAAC,KAAK,GAAG,IAAI,EAAE,gBAAgB,IAAI,EAAE;AAE3C,gBAAM,KAAK,oBACP,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,GAAG;AAGZ,gBAAM,IAAI,GAAG,IAAI,IAAI,QAAQ,GAAG;AAChC,iBAAO,IAAI,GAAG,IAAI,IAAI,QAAQ,IAAI;AAClC,kBAAQ,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACpC,mBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,MAAM;QAC1C,OACK;AACD,cAAI,KAAK,GAAG;AACR,kBAAM,IAAI,MAAM,QAAQ,GAAG;AAC3B,mBAAO,IAAI,MAAM,QAAQ,IAAI;AAC7B,oBAAQ,IAAI,MAAM,QAAQ,KAAK;AAC/B,qBAAS,IAAI,MAAM,QAAQ,MAAM;UACrC;AACA,gBAAM,IAAI,MAAM,QAAQ,GAAG;AAC3B,iBAAO,IAAI,MAAM,QAAQ,IAAI;AAC7B,kBAAQ,IAAI,MAAM,QAAQ,KAAK;AAC/B,mBAAS,IAAI,MAAM,QAAQ,MAAM;QACrC;MACJ;AAEA,aAAO,EAAE,KAAK,MAAM,OAAO,OAAM;IACrC;IAEA,iBAAc;AACV,aAAO;IACX;;;;;;;;;;IAWA,WAAW,GAAW,QAAc;AAIhC,YAAM,MAAM;AAKZ,UAAI,SAAS,KAAK,SAAS,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;AAI3C,YAAM,MAAM,KAAK,SAAS;AAC1B,YAAM,OAAO,MAAM;AAEnB,UAAI,IAAmB;AACvB,UAAI,IAAmB;AAKvB,YAAM,OAAO,KAAK,SAAS;AAI3B,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAE3B,YAAI,MAAM,KAAK,SAAS,CAAC,KAAK,QAAQ;AAElC,cAAI;AACJ,cAAI;AACJ,cAAI,KAAK,QAAQ;AACb,iBAAK,IAAI,GAAG,GAAG;AACf,iBAAK,IAAI,IAAI,GAAG,GAAG;AACnB,gBAAI,MAAM,GAAG;AACT,mBAAK;AACL,mBAAK;YACT;UACJ,OACK;AACD,iBAAK;AACL,iBAAK,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI;UAChC;AACA,cAAI,KAAK,SAAS,MAAM,EAAE;AAC1B,cAAI,KAAK,SAAS,MAAM,EAAE;AAK1B,oBAAU;AACV,cAAI,KAAK,SAAS,CAAC,MAAM,GAAG;AACxB,gBAAI,SAAS,KAAK,SAAS,CAAC;UAChC,OACK;AACD,gBAAI;UACR;AACA;QACJ;AACA,eAAO,KAAK,SAAS,CAAC;MAC1B;AAEA,UAAI,MAAM,QAAQ,MAAM,MAAM;AAC1B,eAAO;MACX;AAEA,UAAI,CAAC,GAAG;AACJ,eAAO;MACX,WACS,CAAC,GAAG;AACT,eAAO;MACX;AAEA,YAAM,KAAK,EAAE,YAAY,EAAE,SAAS;AACpC,YAAM,KAAK,EAAE,YAAY,EAAE,SAAS;AAEpC,YAAM,KAAK,EAAE;AACb,YAAM,KAAK,EAAE;AACb,UAAI,MAAM,MAAM,GAAG;AACnB,UAAI,MAAM,MAAM,GAAG;AACnB,UAAI,MAAM,MAAM,GAAG;AACnB,UAAI,MAAM,MAAM,GAAG;AACnB,YAAM,KAAK,EAAE;AACb,YAAM,KAAK,EAAE;AAEb,UAAI,MAAM,EAAE,UAAU;AAClB,cAAM,EAAE;AACR,cAAM,EAAE;MACZ;AAEA,UAAI,MAAM,EAAE,UAAU;AAClB,cAAM,EAAE;AACR,cAAM,EAAE;MACZ;AAEA,YAAM,IAAI,0BAA0B,GAAG,IAAI,IAAI,IAAI,EAAE;AACrD,YAAM,IAAI,0BAA0B,GAAG,IAAI,IAAI,IAAI,EAAE;AAGrD,YAAM,MAAM,KAAK,IAAI,IAAI,CAAC;AAC1B,YAAM,MAAM,KAAK,IAAI,IAAI,CAAC;AAC1B,YAAM,MAAM,KAAK,IAAI,IAAI,CAAC;AAC1B,YAAM,MAAM,KAAK,IAAI,IAAI,CAAC;AAC1B,YAAM,MAAM,KAAK,IAAI,IAAI,CAAC;AAC1B,YAAM,MAAM,KAAK,IAAI,IAAI,CAAC;AAG1B,YAAM,MAAM,KAAK,KAAK,KAAK,CAAC;AAC5B,YAAM,MAAM,KAAK,KAAK,KAAK,CAAC;AAC5B,YAAM,MAAM,KAAK,KAAK,KAAK,CAAC;AAC5B,YAAM,MAAM,KAAK,KAAK,KAAK,CAAC;AAE5B,UAAI,IAAI;AACR,UAAI,IAAI;AAER,UAAI,SAAS,EAAE,IAAI;AACnB,UAAI,SAAS,EAAE,IAAI;AACnB,UAAI,SAAS,EAAE,IAAI;AACnB,UAAI,SAAS,EAAE,IAAI;AAEnB,UAAI,EAAE,OAAO,IAAI,aAAa,cAAc,IAAI,UAAU;AACtD,YAAI,SAAS,EAAE,KAAK;AACpB,YAAI,SAAS,EAAE,KAAK;AACpB,YAAI,SAAS,EAAE,KAAK;AACpB,YAAI,SAAS,EAAE,KAAK;MACxB;AAEA,UAAI,IAAI;AAER,aAAO;IACX;;;;IAKA,OAAI;AACA,UAAI,KAAK,QAAQ;AACb,2BAAmB,KAAK,WAAW,KAAK,MAAM;AAC9C,eAAO;MACX;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC5C,aAAK,UAAU,MAAM,CAAC,EAAE,UAAW,MAAM,IAAK,SAAS,OAAO,SAAS;MAC3E;AACA,aAAO;IACX;;;;;IAMA,UAAU,OAAa;AAEnB,WAAK,OAAM;AAEX,YAAM,OAAO,KAAK,SAAS,SAAS;AACpC,YAAM,SAAS,KAAK,UAAU,KAAK,SAAS,MAAM,IAAI,EAAE,YAAY,SAAS;AAC7E,UAAI,IAAI,KAAK,SAAS,MAAM,IAAI;AAChC,UAAI,SAAmB,CAAA,GAAI;AAE3B,WAAK,SAAS,QAAQ,CAAC,GAAG,MAAK;AAE3B,YAAI,KAAK,KAAK,CAAC,QAAQ;AACnB,cAAI;AACJ;QACJ;AAEA,YAAI,EAAE,YAAY,SAAS,MAAM;AAC7B,iBAAO,KAAK,IAAI,OAAO,IAAI,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5C,cAAI,IAAI,GAAG;AACP,mBAAO,OAAO,SAAS,CAAC,EAAE,UAAU,SAAS;UACjD;AACA,cAAI;AACJ;QACJ;AAEA,gBAAQ,gBAAgB,GAAG,GAAG,KAAK;AACnC,iBAAS,OAAO,OAAO,KAAK;AAG5B,cAAM,QAAQ,SAAU,GAAGC,IAAC;AACxB,cAAIA,MAAK,KAAK,EAAE,YAAY,SAAS,MAAM;AACvC,cAAE,UAAU,SAAS;UACzB,OACK;AACD,cAAE,UAAU,SAAS;UACzB;QACJ,CAAC;AAED,YAAI,KAAK,MAAM;AAGX,cAAI,KAAK,UAAU,KAAK,WAAW;AAE/B,gBAAI;AAEJ,oBAAQ,gBAAgB,GAAG,GAAG,KAAK;AACnC,qBAAS,OAAO,OAAO,KAAK;AAG5B,kBAAM,QAAQ,SAAU,GAAGA,IAAC;AACxB,kBAAIA,MAAK,KAAK,EAAE,YAAY,SAAS,MAAM;AACvC,kBAAE,UAAU,SAAS;cACzB,OACK;AACD,kBAAE,UAAU,SAAS;cACzB;YACJ,CAAC;UAEL,WACS,QAAQ;AACb,mBAAO,KAAK,IAAI,OAAO,IAAI,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;UAChD;AAEA,iBAAO,OAAO,SAAS,CAAC,EAAE,UAAU,SAC9B,SAAS,QAAQ,SAAS;QAEpC;AAEA,YAAI;MACR,CAAC;AAED,WAAK,YAAY;AACjB,WAAK,SAAS;AACd,WAAK,WAAW,IAAI,WAAW,MAAM;AAErC,aAAO;IACX;IAEA,cAAc,OAAgB,SAAS,OAAK;AAExC,UAAI,CAAC,QAAQ;AACT,aAAK,OAAM;MACf;AAEA,YAAM,SAAS,KAAK,SAAS;AAC7B,YAAM,OAAO,SAAS;AACtB,YAAM,SAAS;AAEf,UAAI,IAAI,KAAK,SAAS,MAAM,IAAI;AAChC,UAAI,MAAM;AAEV,WAAK,SAAS,QAAQ,CAAC,GAAW,MAAa;AAE3C,YAAK,KAAK,KAAK,CAAC,UAAW,EAAE,YAAY,SAAS,MAAM;AACpD,cAAI;AACJ,eAAK,SAAS,CAAC,IAAI;AACnB;QACJ;AAEA,aAAK,SAAS,CAAC,IAAIC,gBAAe,GAAG,GAAG,KAAK;AAC7C,eAAO,KAAK,SAAS,CAAC;AAEtB,YAAI,KAAK,QAAQ,QAAQ;AAErB,cAAI,KAAK,SAAS,OAAO,IAAI,KAAK,MAAM;AAExC,eAAK,SAAS,IAAI,CAAC,IAAIA,gBAAe,GAAG,GAAG,KAAK;AACjD,iBAAO,KAAK,SAAS,IAAI,CAAC;QAE9B;AAEA,YAAI;MACR,CAAC;AAED,WAAK,UAAU;AACf,WAAK,IAAI,qBAAiB,IAAI;AAE9B,aAAO;IACX;IAES,SAAM;AACX,UAAI,KAAK,IAAI,uBAAmB,GAAG;AAE/B,YAAI,KAAK,WAAW;AAChB,eAAK,KAAI;QACb;AAEA,YAAI,KAAK,IAAI,qBAAiB,GAAG;AAC7B,eAAK,cAAc,QAAW,IAAI;QACtC;AAEA,cAAM,SAAS,KAAK;AAEpB,cAAM,YAAY,IAAI,KAAK,WAAW,KAAK,MAAM;AACjD,cAAM,SAAS,IAAI,KAAK,WAAW,KAAK,MAAM;AAE9C,cAAM,SAAS,KAAK,KAAK,cAAc,MAAM,YAAY,KAAK,MAAM,CAAC;AACrE,cAAM,SAAS,KAAK,MAAM,cAAc,MAAM,SAAS,KAAK,MAAM,CAAC;AAEnE;AAII,cAAI;AAIJ,cAAI;AAKJ,gBAAM,WAAW,KAAK;AACtB,eAAK,IAAI,SAAS,SAAS;AAC3B;AACI,gBAAI;AACJ,gBAAI;AACJ,kBAAM,IAAI,SAAS;AACnB,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,kBAAI,KAAK,SAAS,UAAU,GAAG;AAE3B,qBAAK,SAAS,KAAK,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;cACnD;AAEA,kBAAI,IAAI,UAAU,CAAC,OAAO;AAEtB,sBAAM,IAAI,KAAK,SAAS,CAAC,EAAE,KAAK,SAAS,MAAM,CAAC,CAAC;AACjD,qBAAK,WAAW,QAAQ,CAAC;AACzB,kBAAE,UAAU,KAAK,SAAS,CAAC,EAAE;AAC7B,qBAAK,IAAI,SAAS,KAAK,CAAC;AAExB,wBAAQ;AACR,uBAAO,SAAS,MAAM,IAAI,CAAC;AAI3B,oBAAI,QAAQ,KAAK,UAAU;AAEvB,sBAAI,EAAE,UAAU;AACZ,sBAAE,SAAS,EAAE,MAAK;kBACtB,OACK;AACD,sBAAE,SAAS,EAAE,WAAW,EAAE,MAAM;kBACpC;AAEA,sBAAI,KAAK,UAAU;AACf,yBAAK,SAAS,IAAI,CAAC,EAAE,SAAS,EACzB,WAAW,KAAK,SAAS,CAAC,EAC1B,KAAK,IAAI,MAAM,IAAI,EAAE,CAAC;kBAC/B,OACK;AACD,yBAAK,SAAS,IAAI,CAAC,EAAE,SAAS,EACzB,WAAW,KAAK,SAAS,CAAC,EAC1B,KAAK,KAAK,QAAQ,IAAI,EAAE,CAAC;kBAClC;gBACJ;cACJ,WACS,KAAK,UAAU,KAAK,QAAQ;AAEjC,sBAAM,IAAI,KAAK,SAAS,CAAC,EAAE,KAAK,SAAS,MAAM,CAAC,CAAC;AACjD,qBAAK,IAAI,SAAS,KAAK,CAAC;AAExB,oBAAI,MAAM,UAAU,SAAS,MAAM,MAAM,GAAG;AACxC,0BAAQ;AACR,sBAAI,CAAC,UAAU,MAAM,UAAU;AAC3B,wBAAI,MAAM,UAAU;AAChB,4BAAM,SAAS,EAAE,MAAK;oBAC1B,OACK;AACD,4BAAM,SAAS,EAAE,WAAW,MAAM,MAAM;oBAC5C;kBACJ;gBACJ,WACS,MAAM,UAAU,SAAS,MAAM,SAAS,GAAG;AAChD,yBAAO;AACP,uBAAK,UAAU,SAAS;AACxB,sBAAI,CAAC,UAAU,KAAK,UAAU;AAC1B,wBAAI,KAAK,UAAU;AACf,2BAAK,SAAS,EAAE,MAAK;oBACzB,OACK;AACD,2BAAK,SAAS,EAAE,WAAW,KAAK,MAAM;oBAC1C;kBACJ;gBACJ;cACJ;YACJ;UACJ;AAGA,cAAI,SAAS,KAAK,CAAC,MAAM;AAErB,kBAAM,IAAI,SAAS;AAEnB,kBAAM,IAAI,KAAK,SAAS,CAAC,EAAE,KAAK,SAAS,MAAM,CAAC,CAAC;AACjD,iBAAK,WAAW,WAAW,CAAC;AAC5B,cAAE,UAAU,SAAS;AACrB,iBAAK,IAAI,SAAS,QAAQ,CAAC;AAE3B,mBAAO,SAAS,MAAM,IAAI,CAAC;AAI3B,gBAAI,QAAQ,KAAK,UAAU;AAEvB,gBAAE,SAAS,EAAE,MAAK;AAElB,kBAAI,KAAK,UAAU;AACf,qBAAK,SAAS,IAAI,CAAC,EAAE,SAAS,EACzB,WAAW,KAAK,SAAS,CAAC,EAC1B,KAAK,IAAI,MAAM,EAAE,CAAC;cAC3B,OACK;AACD,uBAAO,WAAW,KAAK,MAAM;AAC7B,qBAAK,SAAS,IAAI,CAAC,EAAE,SAAS,EACzB,WAAW,KAAK,SAAS,CAAC,EAC1B,KAAK,KAAK,QAAQ,EAAE,CAAC;cAC9B;YACJ;UACJ;QACJ;AACA,aAAK,IAAI,iBAAiB,IAAI,KAAK,IAAI,iBAAiB,IAAG,IAAK,CAAC;MACrE;AACA,YAAM,OAAM;AACZ,aAAO;IACX;IAES,UAAU,YAAY,OAAK;AAEhC,WAAK,IAAI,iBAAc,IAAI;AAC3B,WAAK,IAAI,sBAAmB,IAAI;AAChC,WAAK,IAAI,mBAAe,IAAI;AAC5B,WAAK,IAAI,mBAAe,IAAI;AAC5B,WAAK,IAAI,qBAAiB,IAAI;AAC9B,WAAK,IAAI,wBAAoB,IAAI;AACjC,WAAK,IAAI,sBAAmB,IAAI;AAChC,WAAK,IAAI,oBAAgB,IAAI;AAC7B,WAAK,IAAI,qBAAiB,IAAI;AAC9B,WAAK,IAAI,2BAAuB,IAAI;AACpC,WAAK,IAAI,uBAAmB,IAAI;AAEhC,YAAM,UAAU,SAAS;AAEzB,aAAO;IAEX;IACA,IAAI,YAAS;AACT,aAAO,KAAK;IAChB;IACA,IAAI,UAAU,WAAkB;AAC5B,UAAI,cAAc,KAAK,WAAW;AAC9B;MACJ;AACA,WAAK,aAAa,CAAC,CAAC;AACpB,WAAK,SAAS,QAAQ,SAAU,GAAS;AACrC,YAAI,WAAW;AACX,YAAE,OAAM;QACZ,OACK;AACD,YAAE,OAAM;QACZ;MACJ,CAAC;IACL;IACA,IAAI,YAAS;AACT,aAAO,KAAK;IAChB;IACA,IAAI,UAAU,WAAiB;AAC3B,WAAK,aAAa;AAClB,WAAK,IAAI,uBAAmB,IAAI;IACpC;;;;;IAKA,IAAI,MAAG;AACH,aAAO,KAAK,KAAK,IAAG;IACxB;IACA,IAAI,IAAI,KAAgC;AACpC,WAAK,KAAK,IAAI,GAAG;AACjB,WAAK,IAAI,iBAAc,IAAI;IAC/B;IACA,IAAI,SAAM;AACN,aAAO,KAAK;IAChB;IACA,IAAI,OAAO,QAAe;AACtB,WAAK,UAAU,CAAC,CAAC;AACjB,WAAK,IAAI,uBAAmB,IAAI;IACpC;IACA,IAAI,SAAM;AACN,aAAO,KAAK;IAChB;IACA,IAAI,OAAO,QAAe;AACtB,WAAK,UAAU,CAAC,CAAC;AACjB,WAAK,IAAI,uBAAmB,IAAI;IACpC;IACA,IAAI,SAAM;AACN,aAAO,KAAK;IAChB;IACA,IAAI,OAAO,QAAgB;AACvB,UAAI,OAAO,kBAAkB,MAAM,MAAM,UAAU;AAC/C,0BAAkB,QAAS,KAAK,UAAU,kBAAkB,KAAK,MAAM,KAAM,CAAC;MAClF;AACA,WAAK,UAAU;IACnB;IACA,IAAI,SAAM;AACN,aAAO,KAAK;IAChB;IACA,IAAI,OAAO,QAAc;AACrB,WAAK,UAAU;AACf,WAAK,IAAI,uBAAmB,IAAI;IACpC;IACA,IAAI,OAAI;AACJ,aAAO,KAAK,MAAM,IAAG;IACzB;IACA,IAAI,KAAK,MAAW;AAChB,UAAI,KAAK,cAAc;AACnB,aAAK,aAAa,QAAO;AACzB,aAAK,eAAe;MACxB;AAEA,WAAK,MAAM,IAAI,IAAI;AACnB,WAAK,IAAI,mBAAe,IAAI;AAE5B,UAAI,kBAAkB,IAAI,GAAG;AACzB,aAAK,eAAe,KAAK,QAAQ,UAAU,MAAK;AAC5C,eAAK,IAAI,mBAAe,IAAI;QAChC,CAAC;MACL;IACJ;IACA,IAAI,cAAW;AACX,aAAO,KAAK,aAAa,IAAG;IAChC;IACA,IAAI,YAAY,aAAmB;AAC/B,WAAK,aAAa,IAAI,WAAW;IACrC;IACA,IAAI,OAAI;AACJ,aAAO,KAAK,MAAM,IAAG;IACzB;IACA,IAAI,KAAK,MAAyD;AAC9D,WAAK,MAAM,IAAI,IAAI;AACnB,WAAK,IAAI,mBAAe,IAAI;IAChC;IACA,IAAI,SAAM;AACN,UAAI,KAAK,IAAI,qBAAiB,GAAG;AAC7B,aAAK,cAAa;MACtB;AACA,aAAO,KAAK;IAChB;IACA,IAAI,UAAO;AACP,aAAO,KAAK;IAChB;IACA,IAAI,cAAW;AACX,aAAO,KAAK,aAAa,IAAG;IAChC;IACA,IAAI,YAAY,YAAkB;AAC9B,UAAI,OAAO,eAAe,UAAU;AAChC,YAAI,KAAK,gBAAgB,YAAY;AACjC,eAAK,aAAa,IAAI,UAAU;AAChC,eAAK,IAAI,wBAAoB,IAAI;QACrC;MACJ;IACJ;IACA,IAAI,QAAK;AACL,aAAO,KAAK,OAAO,IAAG;IAC1B;IACA,IAAI,MAAM,OAAa;AACnB,WAAK,OAAO,IAAI,KAAK;AACrB,WAAK,IAAI,oBAAgB,IAAI;IACjC;IACA,IAAI,SAAM;AACN,aAAO,KAAK,QAAQ,IAAG;IAC3B;IACA,IAAI,OAAO,QAAa;AACpB,UAAI,KAAK,gBAAgB;AACrB,aAAK,eAAe,QAAO;AAC3B,aAAK,iBAAiB;MAC1B;AAEA,WAAK,QAAQ,IAAI,MAAM;AACvB,WAAK,IAAI,qBAAiB,IAAI;AAE9B,UAAI,kBAAkB,MAAM,GAAG;AAC3B,aAAK,iBAAiB,OAAO,QAAQ,UAAU,MAAK;AAChD,eAAK,IAAI,qBAAiB,IAAI;QAClC,CAAC;MACL;IACJ;IACA,IAAI,gBAAa;AACb,aAAO,KAAK,eAAe,IAAG;IAClC;IACA,IAAI,cAAc,eAAqB;AACnC,WAAK,eAAe,IAAI,aAAa;IACzC;IACA,IAAI,WAAQ;AACR,aAAO,KAAK;IAChB;IACA,IAAI,SAAS,UAA4B;AAErC,UAAI,KAAK,kBAAkB;AACvB,aAAK,iBAAiB,QAAO;AAC7B,aAAK,mBAAmB;MAC5B;AACA,UAAI,KAAK,kBAAkB;AACvB,aAAK,iBAAiB,QAAO;AAC7B,aAAK,mBAAmB;MAC5B;AAGA,UAAI,oBAAoB,YAAY;AAChC,aAAK,YAAY;MACrB,OACK;AACD,aAAK,YAAY,IAAI,WAAW,YAAY,CAAA,CAAE;MAClD;AAIA,WAAK,mBAAmB,KAAK,SAAS,QAAQ,UAAU,CAAC,YAAqB;AAC1E,YAAI,IAAI,QAAQ;AAChB,eAAO,KAAK;AACR,gBAAM,SAAS,QAAQ,CAAC;AACxB,gBAAM,eAAe,OAAO,QAAQ,UAAU,MAAK;AAC/C,iBAAK,IAAI,uBAAmB,IAAI;UACpC,CAAC;AAED,eAAK,mBAAmB,IAAI,QAAQ,YAAY;QACpD;AACA,aAAK,IAAI,uBAAmB,IAAI;MACpC,CAAC;AAED,WAAK,mBAAmB,KAAK,SAAS,QAAQ,UAAU,CAAC,YAAqB;AAC1E,YAAI,IAAI,QAAQ;AAChB,eAAO,KAAK;AACR,gBAAM,SAAS,QAAQ,CAAC;AACxB,gBAAM,eAAe,KAAK,mBAAmB,IAAI,MAAM;AACvD,uBAAa,QAAO;AACpB,eAAK,mBAAmB,OAAO,MAAM;QACzC;AACA,aAAK,IAAI,uBAAmB,IAAI;MACpC,CAAC;AAED,WAAK,SAAS,QAAQ,CAAC,WAAkB;AACrC,cAAM,eAAe,OAAO,QAAQ,UAAU,MAAK;AAC/C,eAAK,IAAI,uBAAmB,IAAI;QACpC,CAAC;AACD,aAAK,mBAAmB,IAAI,QAAQ,YAAY;MACpD,CAAC;IACL;IACA,IAAI,eAAY;AACZ,aAAO,KAAK;IAChB;IACA,IAAI,aAAa,cAAoG;AACjH,WAAK,gBAAgB;AACrB,WAAK,IAAI,2BAAuB,IAAI;IACxC;;;;ACvuCG,MAAM,iBAAN,MAA4C;AAAA,IAC/C,YAAqB,QAAwB;AAAxB;AAAA,IAErB;AAAA,IACA,WAAW,SAAgB,aAA2B;AAClD,aAAO,IAAI,QAAQ,SAAS,aAAa,KAAK,MAAM;AAAA,IACxD;AAAA,EACJ;;;ACMO,MAAM,aAAN,cAAyB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOjC,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMlB,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMhB,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMnB,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOnB,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMd,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMZ,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMf,eAAe;AAAA,IAEf,YAAY,OAAe,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI;AAEzF,YAAM,SAAS,OAAQ,UAAU,aAAa;AAC9C,YAAM,SAAmB,CAAC;AAC1B,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,eAAO,KAAK,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;AAAA,MAC5C;AAEA,YAAM,OAAO,QAAQ,MAAM,OAAO,IAAI;AAMtC,UAAI,OAAO,OAAO,UAAU;AACxB,aAAK,cAAc;AAAA,MACvB;AAMA,UAAI,OAAO,OAAO,UAAU;AACxB,aAAK,cAAc;AAAA,MACvB;AAMA,UAAI,OAAO,OAAO,UAAU;AACxB,aAAK,aAAa;AAAA,MACtB;AAMA,UAAI,OAAO,OAAO,UAAU;AACxB,aAAK,WAAW;AAAA,MACpB;AAEA,WAAK,OAAO;AAEZ,UAAI,OAAO,MAAM,UAAU;AACvB,aAAK,SAAS,IAAI;AAAA,MACtB;AACA,UAAI,OAAO,MAAM,UAAU;AACvB,aAAK,SAAS,IAAI;AAAA,MACtB;AAAA,IAEJ;AAAA,IAEA,OAAO,aAAa,CAAC,cAAc,YAAY,eAAe,aAAa;AAAA,IAE3E,SAAS;AAEL,UAAI,KAAK,IAAI,uBAAmB,KAAK,KAAK,mBAAmB,KAAK,iBAC3D,KAAK,oBAAoB,KAAK,kBAAkB;AAEnD,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,KAAK;AAEhB,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,KAAK;AAEhB,cAAM,YAAY,IAAI,IAAI,MAAM,MAAM,IAAI,IAAI,MAAM;AACpD,cAAM,YAAY,KAAK;AAEvB,cAAM,WAAW,KAAK;AACtB,YAAI,SAAU,YAAY,SAAS,SAAS,IAAI,SAAS;AACzD,YAAI,SAAS,KAAK;AAClB,YAAI,GAAG,MAAM,KAAK,GAAG,OAAO,MAAM,GAAG,GAAG;AAExC,YAAI,WAAW;AACX;AAAA,QACJ,WACS,CAAC,WAAW;AACjB,oBAAU;AAAA,QACd;AAKA,aAAK,IAAI,GAAG,OAAO,SAAS,GAAG,IAAI,QAAQ,KAAK;AAE5C,gBAAM,IAAI;AACV,cAAI,SAAS,MAAM,EAAE;AACrB,kBAAQ,OAAO,KAAK,MAAM;AAC1B,kBAAQ,KAAK,MAAM;AAEnB,cAAI,KAAK,KAAK,IAAI,KAAK;AACvB,cAAI,KAAK,KAAK,IAAI,KAAK;AAEvB,kBAAQ,GAAG;AAAA,YACP,KAAK;AACD,wBAAU,SAAS;AACnB;AAAA,YACJ;AACI,wBAAU,SAAS;AAAA,UAC3B;AAEA,YAAE,UAAU;AACZ,YAAE,IAAI;AACN,YAAE,IAAI;AACN,YAAE,SAAS,EAAE,MAAM;AACnB,YAAE,SAAS,EAAE,MAAM;AAEnB,cAAI,EAAE,YAAY,SAAS,OAAO;AAC9B,kBAAM,KAAK,OAAO,KAAK;AACvB,cAAE,SAAS,EAAE,IAAI,MAAM,KAAK,IAAI,QAAQ,OAAO;AAC/C,cAAE,SAAS,EAAE,IAAI,MAAM,KAAK,IAAI,QAAQ,OAAO;AAC/C,cAAE,SAAS,EAAE,IAAI,MAAM,KAAK,IAAI,QAAQ,OAAO;AAC/C,cAAE,SAAS,EAAE,IAAI,MAAM,KAAK,IAAI,QAAQ,OAAO;AAC/C,gBAAI,MAAM,GAAG;AACT,gBAAE,SAAS,EAAE,MAAM,CAAC;AAAA,YACxB;AACA,gBAAI,MAAM,MAAM;AACZ,gBAAE,SAAS,EAAE,MAAM,CAAC;AAAA,YACxB;AAAA,UACJ;AAEA;AAAA,QAEJ;AAEA,YAAI,WAAW;AAEX,cAAI,WAAW;AACX,qBAAS,MAAM,EAAE,EAAE,UAAU,SAAS;AACtC;AAAA,UACJ,OACK;AACD;AACA,mBAAO,SAAS;AAAA,UACpB;AAKA,eAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AAEzB,kBAAM,IAAI;AACV,gBAAI,SAAS,MAAM,EAAE;AACrB,qBAAS,IAAI,QAAQ,KAAK,MAAM;AAChC,oBAAQ,KAAK,MAAM;AAEnB,gBAAI,KAAK,KAAK,IAAI,KAAK;AACvB,gBAAI,KAAK,KAAK,IAAI,KAAK;AACvB,sBAAU,SAAS;AACnB,gBAAI,KAAK,GAAG;AACR,wBAAU,YAAY,SAAS,OAAO,SAAS;AAAA,YACnD;AAEA,cAAE,UAAU;AACZ,cAAE,IAAI;AACN,cAAE,IAAI;AACN,cAAE,SAAS,EAAE,MAAM;AACnB,cAAE,SAAS,EAAE,MAAM;AAEnB,gBAAI,EAAE,YAAY,SAAS,OAAO;AAC9B,oBAAM,KAAK,OAAO,KAAK;AACvB,gBAAE,SAAS,EAAE,IAAI,MAAM,KAAK,IAAI,QAAQ,OAAO;AAC/C,gBAAE,SAAS,EAAE,IAAI,MAAM,KAAK,IAAI,QAAQ,OAAO;AAC/C,gBAAE,SAAS,EAAE,IAAI,MAAM,KAAK,IAAI,QAAQ,OAAO;AAC/C,gBAAE,SAAS,EAAE,IAAI,MAAM,KAAK,IAAI,QAAQ,OAAO;AAC/C,kBAAI,MAAM,GAAG;AACT,kBAAE,SAAS,EAAE,MAAM,CAAC;AAAA,cACxB;AACA,kBAAI,MAAM,MAAM;AACZ,kBAAE,SAAS,EAAE,MAAM,CAAC;AAAA,cACxB;AAAA,YACJ;AAEA;AAAA,UAEJ;AAGA,mBAAS,MAAM,EAAE,EAAE,KAAK,SAAS,MAAM,CAAC,CAAC;AACzC,mBAAS,MAAM,EAAE,EAAE,UAAU,SAAS;AAAA,QAE1C,WACS,CAAC,WAAW;AAEjB,mBAAS,MAAM,EAAE,EAAE,UAAU,SAAS;AACtC,mBAAS,MAAM,EAAE,EAAE,IAAI;AACvB,mBAAS,MAAM,EAAE,EAAE,IAAI;AACvB;AAGA,mBAAS,MAAM,EAAE,EAAE,KAAK,SAAS,MAAM,CAAC,CAAC;AACzC,mBAAS,MAAM,EAAE,EAAE,UAAU,SAAS;AAAA,QAE1C;AAAA,MAEJ;AAEA,YAAM,OAAO;AAEb,aAAO;AAAA,IACX;AAAA,IAES,UAAU,YAAY,OAAO;AAClC,YAAM,UAAU,SAAS;AAEzB,WAAK,kBAAkB,KAAK,gBACtB,KAAK,mBAAmB,KAAK,mBAAmB;AACtD,aAAO;AAAA,IACX;AAAA,IACA,IAAI,aAAa;AACb,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,WAAW,GAAG;AACd,WAAK,cAAc;AACnB,WAAK,kBAAkB;AAAA,IAC3B;AAAA,IACA,IAAI,WAAW;AACX,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,SAAS,GAAG;AACZ,WAAK,YAAY;AACjB,WAAK,gBAAgB;AAAA,IACzB;AAAA,IACA,IAAI,cAAc;AACd,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,YAAY,GAAG;AACf,WAAK,eAAe;AACpB,WAAK,mBAAmB;AAAA,IAC5B;AAAA,IACA,IAAI,cAAc;AACd,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,YAAY,GAAG;AACf,WAAK,eAAe;AACpB,WAAK,mBAAmB;AAAA,IAC5B;AAAA,EACJ;;;ACvRO,MAAM,QAAN,cAAoB,KAAgC;AAAA,IAC9C,eAA6B,CAAC;AAAA,IAC9B;AAAA,IACA;AAAA,IACA;AAAA,IACT,YAAY,OAAe,MAAoB,aAA8B,CAAC,GAAG;AAE7E,YAAM,WAAW;AAAA,QACb,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,GAAG,SAAS,IAAI;AAAA;AAAA,QAC1C,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,GAAG,SAAS,IAAI;AAAA;AAAA,QAC1C,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,GAAG,SAAS,IAAI;AAAA;AAAA,QAC1C,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,GAAG,SAAS,IAAI;AAAA;AAAA,QAC1C,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,GAAG,SAAS,IAAI;AAAA;AAAA,QAC1C,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,GAAG,SAAS,IAAI;AAAA;AAAA,MAC9C;AAEA,YAAM,OAAO,UAAU,OAAO,OAAO,MAAM,gCAAgC,UAAU,CAAC;AAEtF,WAAK,UAAU,IAAI,KAAK,MAAM;AAE9B,WAAK,QAAQ,mBAAmB,IAAI;AAEpC,UAAI,OAAO,WAAW,eAAe,UAAU;AAE3C,aAAK,cAAc,IAAI,OAAO,WAAW,UAAU;AAAA,MACvD,OACK;AACD,aAAK,cAAc,IAAI,OAAO,IAAI;AAAA,MACtC;AAEA,WAAK,OAAO;AACZ,WAAK,MAAM;AACX,WAAK,OAAO;AAEZ,WAAK,aAAa,KAAK,KAAK,MAAM,QAAQ,UAAU,MAAM;AACtD,aAAK,gBAAgB;AAAA,MACzB,CAAC,CAAC;AACF,WAAK,aAAa,KAAK,KAAK,YAAY,QAAQ,UAAU,MAAM;AAC5D,aAAK,gBAAgB;AAAA,MACzB,CAAC,CAAC;AACF,WAAK,aAAa,KAAK,KAAK,QAAQ,QAAQ,UAAU,MAAM;AACxD,aAAK,gBAAgB;AAAA,MACzB,CAAC,CAAC;AAAA,IACN;AAAA,IAES,UAAgB;AACrB,cAAQ,KAAK,YAAY;AACzB,YAAM,QAAQ;AAAA,IAClB;AAAA,IAEA,kBAAwB;AACpB,4BAAsB,KAAK,MAAM,KAAK,YAAY,KAAK,QAAQ,KAAK,QAAQ;AAC5E,WAAK,IAAI,uBAAmB,IAAI;AAChC,YAAM,OAAO;AAAA,IACjB;AAAA,IAES,SAAe;AACpB,UAAI,KAAK,IAAI,uBAAmB,GAAG;AAAA,MAGnC;AACA,YAAM,OAAO;AACb,aAAO;AAAA,IACX;AAAA,IAES,UAAU,YAAY,OAAa;AAGxC,YAAM,UAAU,SAAS;AACzB,aAAO;AAAA,IACX;AAAA,IACA,IAAI,OAAY;AACZ,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,KAAK,MAAW;AAChB,UAAI,gBAAgB,KAAK;AACrB,aAAK,MAAM,WAAW,IAAI;AAAA,MAC9B;AAAA,IACJ;AAAA,IACA,IAAI,aAAqB;AACrB,aAAO,KAAK,YAAY;AAAA,IAC5B;AAAA,IACA,IAAI,WAAW,YAAoB;AAC/B,UAAI,OAAO,eAAe,UAAU;AAChC,YAAI,KAAK,eAAe,YAAY;AAChC,eAAK,YAAY,IAAI,GAAG,GAAG,YAAY,CAAC;AAAA,QAC5C;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,SAAc;AACd,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,OAAO,QAAa;AACpB,UAAI,kBAAkB,KAAK;AACvB,aAAK,QAAQ,WAAW,MAAM;AAAA,MAClC;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,sBAAsB,MAAW,YAAoB,QAAa,UAAoC;AAE3G,UAAM,SAAI,KAAK,MAAM,KAAK,GAAG,KAAK,CAAC;AACnC,UAAM,SAAI,KAAK,KAAK;AAEpB,UAAM,OAAO,SAAS,MAAM,CAAC;AAC7B,UAAM,OAAO,SAAS,MAAM,CAAC;AAC7B,UAAM,YAAY,SAAS,MAAM,CAAC;AAClC,UAAM,YAAY,SAAS,MAAM,CAAC;AAClC,UAAM,YAAY,SAAS,MAAM,CAAC;AAClC,UAAM,YAAY,SAAS,MAAM,CAAC;AAIlC,SAAK,OAAO,IAAI,GAAG,CAAC,EAAE,IAAI,MAAM;AAChC,SAAK,OAAO,WAAW,IAAI,EAAE,IAAI,MAAM;AAEvC,cAAU,OAAO,WAAW,IAAI,EAAE,IAAI,MAAM;AAC5C,cAAU,OAAO,IAAI,KAAK,IAAI,aAAa,KAAK,IAAI,SAAI,MAAC,GAAG,KAAK,IAAI,aAAa,KAAK,IAAI,SAAI,MAAC,CAAC,EAAE,IAAI,MAAM;AAE7G,cAAU,OAAO,WAAW,IAAI,EAAE,IAAI,MAAM;AAC5C,cAAU,OAAO,IAAI,KAAK,IAAI,aAAa,KAAK,IAAI,SAAI,MAAC,GAAG,KAAK,IAAI,aAAa,KAAK,IAAI,SAAI,MAAC,CAAC,EAAE,IAAI,MAAM;AAAA,EACjH;AAEA,WAAS,gCAAgC,YAAsD;AAC3F,UAAM,SAAkC;AAAA,MACpC,IAAI,WAAW;AAAA;AAAA;AAAA,MAGf,UAAU,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,MAKrB,eAAe,WAAW;AAAA,MAC1B,aAAa,WAAW;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;;;ACpIO,MAAM,SAAN,cAAqB,KAAiC;AAAA,IAEhD,UAAU,SAAS,CAAC;AAAA,IAE7B,YAAY,OAAe,UAA4B,CAAC,GAAG;AAGvD,YAAM,SAAS,QAAQ,aAAa,KAAK,IAAI,QAAQ,YAAY,CAAC,IAAI;AAEtE,YAAM,SAAmB,CAAC;AAC1B,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,eAAO,KAAK,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;AAAA,MAC5C;AAEA,YAAM,OAAO,QAAQ,MAAM,MAAM,MAAM,gBAAgB,OAAO,CAAC;AAE/D,WAAK,IAAI,UAAU,KAAK,QAAQ,aAAa;AAE7C,UAAI,OAAO,QAAQ,WAAW,UAAU;AACpC,aAAK,QAAQ,IAAI,QAAQ,MAAM;AAAA,MACnC;AAEA,WAAK,UAAU,IAAI;AAEnB,WAAK,OAAO;AAAA,IAChB;AAAA,IAES,UAAgB;AACrB,YAAM,QAAQ;AAAA,IAClB;AAAA,IAES,SAAe;AACpB,UAAI,KAAK,IAAI,uBAAmB,KAAK,KAAK,IAAI,qBAAiB,GAAG;AAE9D,YAAI,SAAS,KAAK,SAAS;AAE3B,YAAI,CAAC,KAAK,UAAU,SAAS,GAAG;AAC5B,oBAAU;AAAA,QACd;AAGA,cAAM,IAAK,IAAI,IAAK,KAAK,IAAI,KAAK,MAAM,SAAS,EAAE;AACnD,cAAM,SAAS,KAAK;AACpB,cAAM,KAAK,SAAS;AAEpB,cAAMC,OAAM,KAAK;AACjB,cAAMC,OAAM,KAAK;AAEjB,iBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,gBAAM,MAAM,IAAI;AAChB,gBAAM,QAAQ,MAAM;AAEpB,gBAAM,IAAI,SAASD,KAAI,KAAK;AAC5B,gBAAM,IAAI,SAASC,KAAI,KAAK;AAE5B,gBAAM,KAAK,KAAKD,KAAI,QAAQ,OAAO;AACnC,gBAAM,KAAK,KAAKC,KAAI,QAAQ,OAAO;AAEnC,gBAAM,KAAK,KAAKD,KAAI,QAAQ,OAAO;AACnC,gBAAM,KAAK,KAAKC,KAAI,QAAQ,OAAO;AAEnC,gBAAM,IAAI,KAAK,SAAS,MAAM,CAAC;AAE/B,YAAE,UAAU,MAAM,IAAI,SAAS,OAAO,SAAS;AAC/C,YAAE,OAAO,IAAI,GAAG,CAAC;AACjB,YAAE,SAAS,EAAE,IAAI,IAAI,EAAE;AACvB,YAAE,SAAS,EAAE,IAAI,IAAI,EAAE;AAAA,QAC3B;AAAA,MACJ;AAEA,YAAM,OAAO;AACb,aAAO;AAAA,IACX;AAAA,IAEA,UAAU,YAAY,OAAa;AAC/B,WAAK,IAAI,qBAAiB,IAAI;AAC9B,YAAM,UAAU,SAAS;AACzB,aAAO;AAAA,IACX;AAAA,IAEA,IAAI,SAAiB;AACjB,aAAO,KAAK,QAAQ,IAAI;AAAA,IAC5B;AAAA,IACA,IAAI,OAAO,QAAgB;AACvB,UAAI,OAAO,WAAW,UAAU;AAC5B,YAAI,KAAK,WAAW,QAAQ;AACxB,eAAK,QAAQ,IAAI,MAAM;AACvB,eAAK,IAAI,qBAAiB,IAAI;AAG9B,eAAK,IAAI,qBAAiB,IAAI;AAC9B,eAAK,OAAO;AAAA,QAChB;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,gBAAgB,YAAuD;AAC5E,UAAM,SAAkC;AAAA,MACpC,UAAU,WAAW;AAAA,MACrB,UAAU,WAAW;AAAA,MACrB,MAAM,WAAW;AAAA,MACjB,aAAa,WAAW;AAAA,MACxB,QAAQ,WAAW;AAAA,MACnB,eAAe,WAAW;AAAA,MAC1B,aAAa,WAAW;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;;;ACpIA,MAAMC,OAAM,KAAK;AAAjB,MAAsBC,OAAM,KAAK;AAiB1B,MAAM,UAAN,cAAsB,KAAK;AAAA,IAE9B,aAAa;AAAA,IACb,cAAc;AAAA,IAEd,SAAS;AAAA,IACT,UAAU;AAAA,IAEV,YAAY,OAAe,aAAgC,CAAC,GAAG;AAG3D,YAAM,SAAS,WAAW,aAAa,KAAK,IAAI,WAAW,YAAY,CAAC,IAAI;AAC5E,YAAM,SAAS,CAAC;AAChB,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,eAAO,KAAK,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;AAAA,MAC5C;AAEA,YAAM,OAAO,QAAQ,MAAM,MAAM,MAAM,kCAAkC,UAAU,CAAC;AAEpF,UAAI,OAAO,WAAW,OAAO,UAAU;AACnC,aAAK,QAAQ,WAAW,KAAK;AAAA,MACjC,OACK;AACD,aAAK,QAAQ;AAAA,MACjB;AAEA,UAAI,OAAO,WAAW,OAAO,UAAU;AACnC,aAAK,SAAS,WAAW,KAAK;AAAA,MAClC,OACK;AACD,aAAK,SAAS;AAAA,MAClB;AAEA,WAAK,UAAU,IAAI;AAEnB,WAAK,OAAO;AAAA,IAChB;AAAA,IAEA,OAAO,aAAa,CAAC,SAAS,QAAQ;AAAA,IAE7B,SAAe;AACpB,UAAI,KAAK,IAAI,uBAAmB,KAAK,KAAK,cAAc,KAAK,aAAa;AAEtE,YAAI,SAAS,KAAK,SAAS;AAE3B,YAAI,CAAC,KAAK,UAAU,SAAS,GAAG;AAC5B,oBAAU;AAAA,QACd;AAGA,cAAM,IAAK,IAAI,IAAK,KAAK,IAAI,KAAK,MAAM,KAAK,SAAS,SAAS,EAAE;AACjE,cAAM,UAAU,KAAK,SAAS;AAC9B,cAAM,UAAU,KAAK,UAAU;AAE/B,iBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,gBAAM,MAAM,IAAI;AAChB,gBAAM,QAAQ,MAAM;AAEpB,gBAAM,IAAI,UAAUD,KAAI,KAAK;AAC7B,gBAAM,IAAI,UAAUC,KAAI,KAAK;AAE7B,gBAAM,KAAK,UAAU,IAAID,KAAI,QAAQ,OAAO;AAC5C,gBAAM,KAAK,UAAU,IAAIC,KAAI,QAAQ,OAAO;AAE5C,gBAAM,KAAK,UAAU,IAAID,KAAI,QAAQ,OAAO;AAC5C,gBAAM,KAAK,UAAU,IAAIC,KAAI,QAAQ,OAAO;AAE5C,gBAAM,IAAI,KAAK,SAAS,MAAM,CAAC;AAE/B,YAAE,UAAU,MAAM,IAAI,SAAS,OAAO,SAAS;AAC/C,YAAE,OAAO,IAAI,GAAG,CAAC;AACjB,YAAE,SAAS,EAAE,IAAI,IAAI,EAAE;AACvB,YAAE,SAAS,EAAE,IAAI,IAAI,EAAE;AAAA,QAC3B;AAAA,MACJ;AAEA,YAAM,OAAO;AACb,aAAO;AAAA,IAEX;AAAA,IAES,UAAU,YAAY,OAAa;AACxC,WAAK,aAAa;AAClB,WAAK,cAAc;AACnB,YAAM,UAAU,SAAS;AACzB,aAAO;AAAA,IACX;AAAA,IACA,IAAI,SAAS;AACT,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,OAAO,GAAG;AACV,WAAK,UAAU;AACf,WAAK,cAAc;AAAA,IACvB;AAAA,IACA,IAAI,QAAQ;AACR,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,MAAM,GAAG;AACT,WAAK,SAAS;AACd,WAAK,aAAa;AAAA,IACtB;AAAA,EACJ;AAEA,WAAS,kCAAkC,YAAwD;AAC/F,UAAM,SAAkC;AAAA,MACpC,IAAI,WAAW;AAAA,MACf,MAAM,WAAW;AAAA,MACjB,aAAa,WAAW;AAAA,MACxB,UAAU,WAAW;AAAA,MACrB,UAAU,WAAW;AAAA,MACrB,QAAQ,WAAW;AAAA,MACnB,eAAe,WAAW;AAAA,MAC1B,aAAa,WAAW;AAAA,MACxB,YAAY,WAAW;AAAA,IAC3B;AACA,WAAO;AAAA,EACX;;;ACzHO,MAAM,OAAN,cAAmB,KAA+B;AAAA,IACrD,YAAY,OAAe,QAAsB,QAAsB,aAA6B,CAAC,GAAG;AACpG;AAAA,QAAM;AAAA,QAAO;AAAA,UACT,IAAI,OAAO,mBAAmB,MAAM,GAAG,GAAG;AAAA,UAC1C,IAAI,OAAO,mBAAmB,MAAM,GAAG,GAAG;AAAA,QAAC;AAAA,QAC3C;AAAA,QACA;AAAA,QACA;AAAA,QACA,+BAA+B,UAAU;AAAA,MAAC;AAAA,IAClD;AAAA,IACA,IAAI,SAAiB;AACjB,aAAO,KAAK,SAAS,MAAM,CAAC;AAAA,IAChC;AAAA,IACA,IAAI,OAAO,QAAgB;AACvB,UAAI,kBAAkB,QAAQ;AAC1B,aAAK,SAAS,OAAO,GAAG,GAAG,MAAM;AAAA,MACrC,OACK;AACD,cAAM,QAAQ,IAAI,MAAM,wCAAwC;AAEhE,gBAAQ,KAAK,MAAM,MAAM,MAAM,OAAO;AAAA,MAC1C;AAAA,IACJ;AAAA,IACA,IAAI,SAAiB;AACjB,aAAO,KAAK,SAAS,MAAM,CAAC;AAAA,IAChC;AAAA,IACA,IAAI,OAAO,QAAgB;AACvB,UAAI,kBAAkB,QAAQ;AAC1B,aAAK,SAAS,OAAO,GAAG,GAAG,MAAM;AAAA,MACrC,OACK;AACD,cAAM,QAAQ,IAAI,MAAM,wCAAwC;AAEhE,gBAAQ,KAAK,MAAM,MAAM,MAAM,OAAO;AAAA,MAC1C;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,+BAA+B,YAAqD;AACzF,UAAM,SAAkC;AAAA,MACpC,IAAI,WAAW;AAAA,MACf,YAAY,WAAW;AAAA,MACvB,QAAQ,WAAW;AAAA,MACnB,eAAe,WAAW;AAAA,MAC1B,aAAa,WAAW;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;;;ACrDO,MAAM,UAAN,cAAsB,KAAkC;AAAA,IAC3D,YAAY,OAAe,SAAyB,CAAC,GAAG,aAAyC,CAAC,GAAG;AAEjG,YAAM,WAAW,OACZ,IAAI,CAAC,UAAU,mBAAmB,KAAK,CAAC,EACxC,IAAI,CAAC,UAAU,UAAU,IAAI,OAAO,UAAU,UAAU,IAAI,MAAM,GAAG,CAAC;AAE3E,YAAM,OAAO,UAAU,MAAM,OAAO,OAAOC,iBAAgB,UAAU,CAAC;AAEtE,WAAK,UAAU,IAAI;AACnB,WAAK,OAAO;AAAA,IAChB;AAAA,EACJ;AAEA,WAASA,iBAAgB,YAAiE;AACtF,UAAM,SAAkC;AAAA,MACpC,IAAI,WAAW;AAAA,MACf,SAAS,WAAW;AAAA,MACpB,MAAM,WAAW;AAAA,MACjB,aAAa,WAAW;AAAA,MACxB,QAAQ,WAAW;AAAA,MACnB,eAAe,WAAW;AAAA,MAC1B,aAAa,WAAW;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;;;ACKO,MAAM,YAAN,cAAwB,KAAgD;AAAA,IAElE,eAA6B,CAAC;AAAA,IAE9B,SAAS,SAAS,CAAC;AAAA,IACnB,UAAU,SAAS,CAAC;AAAA,IAEpB,UAAU,IAAI,KAAK,MAAM;AAAA,IAElC,YAAY,OAAe,aAAkC,CAAC,GAAG;AAE7D,YAAM,SAAS;AAAA,QACX,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG;AAAA,QAChC,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG;AAAA,QAChC,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG;AAAA,QAChC,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG;AAAA,MACpC;AAEA,YAAM,OAAO,QAAQ,MAAM,OAAO,MAAM,oCAAoC,UAAU,CAAC;AAEvF,WAAK,IAAI,SAAS,KAAK,OAAO,aAAa;AAC3C,WAAK,IAAI,UAAU,KAAK,QAAQ,aAAa;AAE7C,UAAI,OAAO,WAAW,UAAU,UAAU;AACtC,aAAK,QAAQ,WAAW;AAAA,MAC5B;AAEA,UAAI,OAAO,WAAW,WAAW,UAAU;AACvC,aAAK,SAAS,WAAW;AAAA,MAC7B;AAEA,WAAK,aAAa,KAAK,KAAK,QAAQ,QAAQ,UAAU,MAAM;AACxD,aAAK,IAAI,uBAAmB,IAAI;AAAA,MACpC,CAAC,CAAC;AAEF,WAAK,aAAa,KAAK,KAAK,IAAI,OAAO,UAAU,CAAC,UAAU;AACxD,kCAA0B,OAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ;AAErF,aAAK,IAAI,uBAAmB,IAAI;AAChC,aAAK,IAAI,qBAAiB,IAAI;AAC9B,cAAM,OAAO;AAAA,MACjB,CAAC,CAAC;AAEF,WAAK,aAAa,KAAK,KAAK,IAAI,QAAQ,UAAU,CAAC,WAAW;AAC1D,kCAA0B,KAAK,OAAO,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ;AAErF,aAAK,IAAI,uBAAmB,IAAI;AAChC,aAAK,IAAI,qBAAiB,IAAI;AAC9B,cAAM,OAAO;AAAA,MACjB,CAAC,CAAC;AAEF,WAAK,aAAa,KAAK,KAAK,QAAQ,QAAQ,UAAU,CAAC,WAAW;AAC9D,kCAA0B,KAAK,OAAO,KAAK,QAAQ,QAAQ,KAAK,QAAQ,KAAK,QAAQ;AAErF,aAAK,IAAI,uBAAmB,IAAI;AAChC,aAAK,IAAI,qBAAiB,IAAI;AAC9B,cAAM,OAAO;AAAA,MACjB,CAAC,CAAC;AAEF,WAAK,UAAU,IAAI;AACnB,WAAK,OAAO;AAAA,IAChB;AAAA,IAES,UAAgB;AACrB,cAAQ,KAAK,YAAY;AACzB,YAAM,QAAQ;AAAA,IAClB;AAAA,IAES,SAAe;AACpB,UAAI,KAAK,IAAI,uBAAmB,KAAK,KAAK,IAAI,oBAAgB,KAAK,KAAK,IAAI,qBAAiB,GAAG;AAC5F,kCAA0B,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ;AAAA,MAC9F;AAEA,YAAM,OAAO;AAEb,aAAO;AAAA,IACX;AAAA,IAES,UAAU,YAAY,OAAa;AACxC,WAAK,IAAI,oBAAgB,IAAI;AAC7B,WAAK,IAAI,qBAAiB,IAAI;AAC9B,YAAM,UAAU,SAAS;AACzB,aAAO;AAAA,IACX;AAAA,IACA,IAAI,SAAiB;AACjB,aAAO,KAAK,QAAQ,IAAI;AAAA,IAC5B;AAAA,IACA,IAAI,OAAO,QAAgB;AACvB,UAAI,OAAO,WAAW,UAAU;AAC5B,aAAK,QAAQ,IAAI,MAAM;AACvB,aAAK,IAAI,qBAAiB,IAAI;AAAA,MAClC;AAAA,IACJ;AAAA,IACA,IAAI,SAAc;AACd,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,OAAO,QAAa;AACpB,WAAK,QAAQ,WAAW,MAAM;AAC9B,WAAK,IAAI,uBAAmB,IAAI;AAAA,IACpC;AAAA,IACA,IAAI,QAAgB;AAChB,aAAO,KAAK,OAAO,IAAI;AAAA,IAC3B;AAAA,IACA,IAAI,MAAM,OAAe;AACrB,UAAI,OAAO,UAAU,UAAU;AAC3B,aAAK,OAAO,IAAI,KAAK;AACrB,aAAK,IAAI,oBAAgB,IAAI;AAAA,MACjC;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,oCAAoC,YAA0D;AACnG,UAAM,SAAkC;AAAA,MACpC,IAAI,WAAW;AAAA,MACf,UAAU,WAAW;AAAA,MACrB,SAAS,WAAW;AAAA,MACpB,UAAU,WAAW;AAAA,MACrB,YAAY,WAAW;AAAA,MACvB,MAAM,WAAW;AAAA,MACjB,aAAa,WAAW;AAAA,MACxB,QAAQ,WAAW;AAAA,MACnB,eAAe,WAAW;AAAA,MAC1B,aAAa,WAAW;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;AAEA,WAAS,0BAA0B,OAAe,OAAe,QAAa,QAAiB,UAAoC;AAE/H,UAAM,IAAI,QAAQ;AAClB,UAAM,IAAI,QAAQ;AAElB,QAAI,CAAC,UAAU,SAAS,WAAW,GAAG;AAClC,eAAS,KAAK,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;AAAA,IAC9C;AAEA,aAAS,MAAM,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM;AAC/C,aAAS,MAAM,CAAC,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM;AAC9C,aAAS,MAAM,CAAC,EAAE,OAAO,IAAI,GAAG,CAAC,EAAE,IAAI,MAAM;AAC7C,aAAS,MAAM,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,MAAM;AAE9C,UAAM,SAAS,SAAS,MAAM,CAAC;AAC/B,QAAI,QAAQ;AACR,aAAO,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM;AACpC,aAAO,UAAU;AAAA,IACrB;AAAA,EACJ;;;ACrLA,MAAMC,OAAM,KAAK;AAAjB,MAAsBC,OAAM,KAAK;AA6C1B,MAAM,OAAN,MAAM,cAAa,MAAgC;AAAA,IACtD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAES,eAAe,SAAS,EAAE;AAAA,IAE1B,cAAc,SAAS,YAAY;AAAA,IACnC,cAAkC,KAAK,YAAY,aAAa;AAAA,IAEhE,YAAY,SAAS,EAAE;AAAA,IACvB,YAAgC,KAAK,UAAU,aAAa;AAAA,IAE5D,UAAU,SAAS,OAAqC;AAAA,IAExD,YAAY,SAAS,MAAgI;AAAA,IAErJ,aAAa,SAAS,QAA2C;AAAA,IAEjE,cAAc,SAAS,QAA6D;AAAA,IAEpF,cAAc,SAAS,CAAC,MAAwB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,IAMjD,aAAa,SAAS,KAAsB;AAAA,IAE5C,MAAM,SAAS,CAAoB;AAAA,IACnC,MAAM,SAAS,CAAoB;AAAA;AAAA;AAAA;AAAA,IAKnC,QAAQ,SAAS,SAAkB;AAAA,IAC5C,eAAkC;AAAA;AAAA;AAAA;AAAA,IAKzB,UAAU,SAAS,MAAe;AAAA,IAC3C,iBAAoC;AAAA,IAE3B,eAAe,SAAS,CAAC;AAAA,IAElC,UAA2B;AAAA,IAE3B,YAAY,OAAe,OAAe,aAAsC,CAAC,GAAG;AAEhF,YAAM,OAAO,sCAAsC,UAAU,CAAC;AAE9D,WAAK,IAAI,UAAU,KAAK,QAAQ,aAAa;AAC7C,WAAK,IAAI,YAAY,KAAK,UAAU,aAAa;AACjD,WAAK,IAAI,cAAc,KAAK,YAAY,aAAa;AACrD,WAAK,IAAI,aAAa,KAAK,WAAW,aAAa;AACnD,WAAK,IAAI,MAAM,KAAK,IAAI,aAAa;AACrC,WAAK,IAAI,MAAM,KAAK,IAAI,aAAa;AACrC,WAAK,IAAI,QAAQ,KAAK,MAAM,aAAa;AACzC,WAAK,IAAI,aAAa,KAAK,WAAW,aAAa;AACnD,WAAK,IAAI,cAAc,KAAK,YAAY,aAAa;AACrD,WAAK,IAAI,UAAU,KAAK,QAAQ,aAAa;AAC7C,WAAK,IAAI,eAAe,KAAK,aAAa,aAAa;AACvD,WAAK,IAAI,eAAe,KAAK,aAAa,aAAa;AAEvD,WAAK,IAAI,qBAAiB,IAAI;AAE9B,WAAK,QAAQ;AAKb,WAAK,SAAS,CAAC;AAEf,wBAAkB,KAAK,QAAQ,CAAC;AAEhC,UAAI,WAAW,QAAQ;AACnB,aAAK,SAAS,WAAW;AAAA,MAC7B;AACA,UAAI,WAAW,UAAU;AACrB,aAAK,WAAW,WAAW;AAAA,MAC/B;AACA,UAAI,WAAW,YAAY;AACvB,aAAK,aAAa,WAAW;AAAA,MACjC;AACA,UAAI,WAAW,WAAW;AACtB,aAAK,YAAY,WAAW;AAAA,MAChC;AACA,UAAI,OAAO,WAAW,OAAO,YAAY,OAAO,WAAW,OAAO,UAAU;AACxE,aAAK,KAAK,WAAW;AAAA,MACzB;AACA,UAAI,OAAO,WAAW,OAAO,YAAY,OAAO,WAAW,OAAO,UAAU;AACxE,aAAK,KAAK,WAAW;AAAA,MACzB;AACA,UAAI,WAAW,YAAY;AACvB,aAAK,aAAa,WAAW;AAAA,MACjC;AACA,UAAI,WAAW,MAAM;AACjB,aAAK,OAAO,WAAW;AAAA,MAC3B;AACA,UAAI,WAAW,aAAa;AACxB,aAAK,cAAc,WAAW;AAAA,MAClC;AACA,UAAI,WAAW,SAAS;AACpB,aAAK,UAAU,WAAW;AAAA,MAC9B;AACA,UAAI,WAAW,UAAU;AACrB,aAAK,WAAW,WAAW;AAAA,MAC/B;AACA,UAAI,WAAW,QAAQ;AACnB,aAAK,SAAS,WAAW;AAAA,MAC7B;AACA,UAAI,WAAW,WAAW;AACtB,aAAK,YAAY,WAAW;AAAA,MAChC;AACA,UAAI,WAAW,OAAO;AAClB,aAAK,QAAQ,WAAW;AAAA,MAC5B;AACA,UAAI,OAAO,WAAW,eAAe,UAAU;AAC3C,aAAK,aAAa,WAAW;AAAA,MACjC;AACA,UAAI,WAAW,YAAY;AACvB,aAAK,aAAa,WAAW;AAAA,MACjC;AAEA,WAAK,UAAU,IAAI;AAAA,IACvB;AAAA,IAEA,OAAO,YAAsC,YAA8B;AAEvE,WAAK,OAAO;AAGZ,YAAM,UAAyB,CAAC;AAEhC,YAAM,aAAa,KAAK,OAAO,UAAU,KAAK,IAAI,qBAAiB;AAEnE,UAAI,YAAY;AACZ,gBAAQ,YAAY,0BAA0B,KAAK,MAAM;AAAA,MAC7D;AAEA,UAAI,KAAK,IAAI,mBAAe,GAAG;AAC3B,gBAAQ,WAAW,IAAI,GAAG,KAAK,QAAQ;AAAA,MAC3C;AACA;AACI,cAAM,OAAO,KAAK;AAClB,YAAI,MAAM;AACN,cAAI,kBAAkB,IAAI,GAAG;AACzB,iBAAK,IAAI,gBAAgB;AACzB,iBAAK,OAAO,UAAU;AAAA,UAC1B,OACK;AACD,oBAAQ,OAAO,gBAAgB,IAAI;AACnC,gBAAI,KAAK,IAAI,eAAe;AACxB,kCAAoB,qBAAqB,UAAU,GAAG,IAAI;AAC1D,qBAAO,KAAK,IAAI;AAAA,YACpB;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AACA;AACI,cAAM,SAAS,KAAK;AACpB,YAAI,QAAQ;AACR,cAAI,kBAAkB,MAAM,GAAG;AAC3B,iBAAK,IAAI,kBAAkB;AAC3B,mBAAO,OAAO,UAAU;AAAA,UAC5B,OACK;AACD,oBAAQ,SAAS,gBAAgB,MAAM;AACvC,gBAAI,KAAK,IAAI,iBAAiB;AAC1B,kCAAoB,qBAAqB,UAAU,GAAG,IAAI;AAC1D,qBAAO,KAAK,IAAI;AAAA,YACpB;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AACA,UAAI,KAAK,IAAI,uBAAoB,GAAG;AAChC,gBAAQ,OAAO,IAAI,KAAK,UAAU,KAAK,GAAG;AAAA,MAC9C;AACA,UAAI,KAAK,UAAU,KAAK,OAAO,SAAS,GAAG;AACvC,gBAAQ,kBAAkB,IAAI,KAAK,OAAO,KAAK,GAAG;AAClD,gBAAQ,mBAAmB,IAAI,GAAG,kBAAkB,KAAK,MAAM,KAAK,CAAC;AAAA,MACzE;AAEA,UAAI,KAAK,IAAI,MAAM;AACf,YAAI,cAAc,KAAK,IAAI,MAAM,OAAO;AAAA,MAC5C,OACK;AACD,gBAAQ,KAAK,KAAK;AAClB,aAAK,IAAI,OAAO,IAAI,cAAc,QAAQ,OAAO;AACjD,mBAAW,YAAY,KAAK,IAAI,IAAI;AAEpC,aAAK,IAAI,YAAY,KAAK,KAAK,OAAO,QAAQ,UAAU,CAAC,WAAW;AAChE,gBAAM,SAAwB,CAAC;AAC/B,iBAAO,YAAY,0BAA0B,MAAM;AACnD,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AAAA,QAC3C,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,QAAQ,UAAU,CAAC,WAAW;AAC7D,kBAAQ,QAAQ;AAAA,YACZ,KAAK,SAAS;AACV,kBAAI,iBAAiB,KAAK,IAAI,MAAM,EAAE,eAAe,OAAO,CAAC;AAC7D;AAAA,YACJ;AAAA,YACA,KAAK;AAAA,YACL,KAAK,OAAO;AACR,kBAAI,cAAc,KAAK,IAAI,MAAM,EAAE,eAAe,OAAO,CAAC;AAC1D;AAAA,YACJ;AAAA,UACJ;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,YAAY,UAAU,CAAC,eAAe;AACrE,gBAAM,SAAwB,CAAC;AAC/B,iBAAO,iBAAiB,IAAI,WAAW,KAAK,GAAG;AAC/C,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AACvC,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,WAAW,UAAU,CAAC,cAAc;AACnE,cAAI,cAAc,OAAO;AACrB,gBAAI,cAAc,KAAK,IAAI,MAAM,EAAE,UAAU,CAAC;AAAA,UAClD,OACK;AACD,gBAAI,iBAAiB,KAAK,IAAI,MAAM,EAAE,UAAU,CAAC;AAAA,UACrD;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,UAAU,UAAU,CAAC,aAAa;AACjE,kBAAQ,UAAU;AAAA,YACd,KAAK,QAAQ;AACT,kBAAI,iBAAiB,KAAK,IAAI,MAAM,EAAE,qBAAqB,SAAS,CAAC;AACrE;AAAA,YACJ;AAAA,YACA,SAAS;AACL,kBAAI,cAAc,KAAK,IAAI,MAAM,EAAE,qBAAqB,SAAS,CAAC;AAClE;AAAA,YACJ;AAAA,UACJ;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,IAAI,UAAU,CAAC,OAAO;AACrD,cAAI,OAAO,OAAO,YAAY,OAAO,GAAG;AACpC,gBAAI,iBAAiB,KAAK,IAAI,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,UAClD,OACK;AACD,gBAAI,cAAc,KAAK,IAAI,MAAM,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC;AAAA,UACpD;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,IAAI,UAAU,CAAC,OAAO;AACrD,cAAI,OAAO,OAAO,YAAY,OAAO,GAAG;AACpC,gBAAI,iBAAiB,KAAK,IAAI,MAAM,EAAE,IAAI,GAAG,CAAC;AAAA,UAClD,OACK;AACD,gBAAI,cAAc,KAAK,IAAI,MAAM,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC;AAAA,UACpD;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,YAAY,UAAU,CAAC,WAAW;AAC7D,cAAI,cAAc,KAAK,IAAI,MAAM,EAAE,eAAe,OAAO,CAAC;AAAA,QAC9D,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,UAAU,UAAU,CAAC,SAAS;AACzD,cAAI,cAAc,KAAK,IAAI,MAAM,EAAE,aAAa,GAAG,IAAI,GAAG,CAAC;AAAA,QAC/D,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,WAAW,UAAU,CAAC,cAAc;AACnE,gBAAM,SAAwB,EAAE,cAAc,UAAU;AACxD,cAAI,OAAO,YAAY,MAAM,UAAU;AACnC,gBAAI,iBAAiB,KAAK,IAAI,MAAM,MAAM;AAAA,UAC9C,OACK;AACD,gBAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AAAA,UAC3C;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,YAAY,UAAU,CAAC,eAAe;AACrE,gBAAM,SAAwB,EAAE,eAAe,GAAG,UAAU,GAAG;AAC/D,cAAI,OAAO,aAAa,MAAM,UAAU;AACpC,gBAAI,iBAAiB,KAAK,IAAI,MAAM,MAAM;AAAA,UAC9C,OACK;AACD,gBAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AAAA,UAC3C;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,SAAS,UAAU,CAAC,YAAY;AAC/D,gBAAM,SAAwB,EAAE,SAAS,GAAG,OAAO,GAAG;AACtD,cAAI,YAAY,GAAG;AACf,gBAAI,iBAAiB,KAAK,IAAI,MAAM,MAAM;AAAA,UAC9C,OACK;AACD,gBAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AAAA,UAC3C;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,aAAa,UAAU,CAAC,gBAAgB;AACvE,gBAAM,SAAwB,CAAC;AAC/B,iBAAO,cAAc,IAAI,GAAG,WAAW;AACvC,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AACvC,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,aAAa,UAAU,CAAC,gBAAgB;AACvE,eAAK,IAAI,KAAK,cAAc;AAAA,QAChC,CAAC,CAAC;AAGF,aAAK,IAAI,YAAY,KAAK,KAAK,IAAI,YAAY,UAAU,CAAC,eAAe;AACrE,kBAAQ,YAAY;AAAA,YAChB,KAAK,WAAW;AACZ,oBAAM,SAAwB,EAAE,WAAW;AAC3C,kBAAI,iBAAiB,KAAK,IAAI,MAAM,MAAM;AAC1C;AAAA,YACJ;AAAA,YACA,SAAS;AACL,oBAAM,SAAwB,EAAE,WAAW;AAC3C,kBAAI,cAAc,KAAK,IAAI,MAAM,MAAM;AACvC;AAAA,YACJ;AAAA,UACJ;AACA,iBAAO,WAAY;AAAA,UAEnB;AAAA,QACJ,CAAC,CAAC;AAAA,MACN;AAEA,UAAI,KAAK,IAAI,sBAAmB,GAAG;AAC/B,cAAM,OAAO,IAAI,QAAQ,MAAM,UAAU;AACzC,cAAM,OAAO,KAAK,IAAI;AAEtB,YAAI,KAAK,IAAI,MAAM;AACf,eAAK,gBAAgB,IAAI;AACzB,eAAK,aAAa,MAAM,KAAK,EAAE;AAC/B,eAAK,YAAY,IAAI;AAAA,QACzB,OACK;AACD,eAAK,gBAAgB,IAAI;AACzB,eAAK,aAAa,MAAM,KAAK,EAAE;AAC/B,cAAI,KAAK,kBAAkB,aAAa;AACpC,iBAAK,OAAO,IAAI,KAAK,YAAY,IAAI;AAAA,UACzC;AAAA,QACJ;AAAA,MACJ;AAMA,UAAI,KAAK,IAAI,sBAAmB,GAAG;AAC/B,YAAI,KAAK,UAAU;AACf,eAAK,SAAS,OAAO,YAAY,UAAU;AAC3C,eAAK,IAAI,KAAK,aAAa,aAAa,UAAU,KAAK,SAAS,KAAK,GAAG;AAAA,QAC5E,OACK;AACD,eAAK,IAAI,KAAK,gBAAgB,WAAW;AAAA,QAC7C;AAAA,MACJ;AAEA,WAAK,UAAU;AAAA,IACnB;AAAA,IAEA,OAAO,QAAQ,MAA+C;AAE1D,YAAM,QAAQ,KAAK,MAAM,SAAS,KAAK,WAAW;AAClD,YAAM,SAAS,KAAK;AACpB,aAAO,EAAE,OAAO,OAAO;AAAA,IAC3B;AAAA;AAAA;AAAA;AAAA,IAKA,SAAS;AACL,WAAK,OAAO;AACZ,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA,IAKA,WAAW;AACP,WAAK,SAAS;AACd,aAAO;AAAA,IACX;AAAA,IAEA,eAAe,UAAU,OAAsE;AAE3F,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,WAAK,OAAO;AAEZ,YAAM,SAAS,UAAU,KAAK,SAAS,KAAK;AAE5C,YAAM,EAAE,OAAO,OAAO,IAAI,MAAK,QAAQ,IAAI;AAC3C,YAAM,UAAU,KAAK,eAAe,KAAK;AAEzC,cAAQ,KAAK,QAAQ;AAAA,QACjB,KAAK,SAAS;AACV,iBAAO,CAAE;AACT,kBAAQ,QAAQ;AAChB;AAAA,QACJ;AAAA,QACA,KAAK,UAAU;AACX,iBAAO,EAAG,QAAQ,IAAI;AACtB,kBAAQ,QAAQ,IAAI;AACpB;AAAA,QACJ;AAAA,QACA,KAAK,OAAO;AACR,iBAAO,EAAG,QAAQ;AAClB,kBAAQ;AACR;AAAA,QACJ;AAAA,MACJ;AAEA,cAAQ,KAAK,UAAU;AAAA,QACnB,KAAK;AACD,gBAAM,EAAG,SAAS,IAAI;AACtB,mBAAS,SAAS,IAAI;AACtB;AAAA,QACJ;AACI,gBAAM,EAAG,SAAS;AAClB,mBAAS;AAAA,MACjB;AAEA,YAAM,CAAC,IAAI,EAAE,IAAI,OAAO,gBAAgB,MAAM,GAAG;AACjD,YAAM,CAAC,IAAI,EAAE,IAAI,OAAO,gBAAgB,MAAM,MAAM;AACpD,YAAM,CAAC,IAAI,EAAE,IAAI,OAAO,gBAAgB,OAAO,GAAG;AAClD,YAAM,CAAC,IAAI,EAAE,IAAI,OAAO,gBAAgB,OAAO,MAAM;AAErD,YAAMD,KAAI,IAAI,IAAI,IAAI,EAAE;AACxB,aAAOA,KAAI,IAAI,IAAI,IAAI,EAAE;AACzB,cAAQC,KAAI,IAAI,IAAI,IAAI,EAAE;AAC1B,eAASA,KAAI,IAAI,IAAI,IAAI,EAAE;AAE3B,aAAO,EAAE,KAAK,MAAM,OAAO,OAAO;AAAA,IACtC;AAAA,IAEA,iBAA0B;AACtB,aAAO;AAAA,IACX;AAAA;AAAA,IAGA,UAAU,OAAqB;AAC3B,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC7C;AAAA,IAES,UAAU,YAAY,OAAO;AAClC,YAAM,UAAU,SAAS;AACzB,WAAK,IAAI,mBAAe,IAAI;AAC5B,WAAK,IAAI,mBAAe,IAAI;AAC5B,WAAK,IAAI,qBAAiB,IAAI;AAC9B,WAAK,IAAI,sBAAmB,IAAI;AAChC,WAAK,IAAI,uBAAoB,IAAI;AACjC,aAAO;AAAA,IACX;AAAA,IACA,IAAI,SAAqC;AACrC,aAAO,KAAK,QAAQ,IAAI;AAAA,IAC5B;AAAA,IACA,IAAI,OAAO,QAAoC;AAC3C,UAAI,OAAO,WAAW,UAAU;AAC5B,gBAAQ,QAAQ;AAAA,UACZ,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK,OAAO;AACR,iBAAK,QAAQ,IAAI,MAAM;AACvB;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,WAAmI;AACnI,aAAO,KAAK,UAAU,IAAI;AAAA,IAC9B;AAAA,IACA,IAAI,SAAS,UAAkI;AAC3I,UAAI,OAAO,aAAa,UAAU;AAC9B,gBAAQ,UAAU;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK,YAAY;AACb,iBAAK,UAAU,IAAI,QAAQ;AAAA,UAC/B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,SAAS;AACT,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,OAAO,GAAG;AACV,UAAI,OAAO,kBAAkB,CAAC,MAAM,UAAU;AAC1C,0BAAkB,GAAI,KAAK,UAAU,kBAAkB,KAAK,OAAO,KAAM,CAAC;AAAA,MAC9E;AACA,WAAK,UAAU;AAAA,IACnB;AAAA,IACA,IAAI,aAA+B;AAC/B,aAAO,KAAK,YAAY,IAAI;AAAA,IAChC;AAAA,IACA,IAAI,WAAW,GAAqB;AAChC,WAAK,YAAY,IAAI,CAAC;AAAA,IAC1B;AAAA,IACA,IAAI,YAA2B;AAC3B,aAAO,KAAK,WAAW,IAAI;AAAA,IAC/B;AAAA,IACA,IAAI,UAAU,WAA0B;AACpC,UAAI,OAAO,cAAc,UAAU;AAC/B,YAAI,cAAc,SAAS,cAAc,OAAO;AAC5C,cAAI,KAAK,cAAc,WAAW;AAC9B,iBAAK,WAAW,IAAI,SAAS;AAAA,UACjC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,KAAsB;AACtB,aAAO,KAAK,IAAI,IAAI;AAAA,IACxB;AAAA,IACA,IAAI,GAAG,IAAqB;AACxB,UAAI,OAAO,OAAO,YAAY,OAAO,OAAO,UAAU;AAClD,YAAI,KAAK,OAAO,IAAI;AAChB,eAAK,IAAI,IAAI,EAAE;AAAA,QACnB;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,KAAsB;AACtB,aAAO,KAAK,IAAI,IAAI;AAAA,IACxB;AAAA,IACA,IAAI,GAAG,IAAqB;AACxB,UAAI,OAAO,OAAO,YAAY,OAAO,OAAO,UAAU;AAClD,YAAI,KAAK,OAAO,IAAI;AAChB,eAAK,IAAI,IAAI,EAAE;AAAA,QACnB;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,aAAqB;AACrB,aAAO,KAAK,YAAY,IAAI;AAAA,IAChC;AAAA,IACA,IAAI,WAAW,QAAgB;AAC3B,UAAI,OAAO,WAAW,UAAU;AAC5B,YAAI,KAAK,eAAe,QAAQ;AAC5B,eAAK,YAAY,IAAI,MAAM;AAAA,QAC/B;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,OAAc;AACd,aAAO,KAAK,MAAM,IAAI;AAAA,IAC1B;AAAA,IACA,IAAI,KAAK,MAAM;AACX,UAAI,KAAK,cAAc;AACnB,aAAK,aAAa,QAAQ;AAC1B,aAAK,eAAe;AAAA,MACxB;AACA,WAAK,MAAM,IAAI,IAAI;AACnB,WAAK,IAAI,mBAAe,IAAI;AAC5B,UAAI,kBAAkB,KAAK,IAAI,GAAG;AAC9B,aAAK,eAAe,KAAK,KAAK,QAAQ,UAAU,MAAM;AAClD,eAAK,IAAI,mBAAe,IAAI;AAAA,QAChC,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,IACA,IAAI,cAAsB;AACtB,aAAO,KAAK,aAAa,IAAI;AAAA,IACjC;AAAA,IACA,IAAI,YAAY,aAAqB;AACjC,UAAI,OAAO,gBAAgB,UAAU;AACjC,YAAI,KAAK,gBAAgB,aAAa;AAClC,eAAK,aAAa,IAAI,WAAW;AAAA,QACrC;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,WAAmB;AACnB,aAAO,KAAK,UAAU,IAAI;AAAA,IAC9B;AAAA,IACA,IAAI,SAAS,MAAc;AACvB,UAAI,OAAO,SAAS,UAAU;AAC1B,YAAI,KAAK,aAAa,MAAM;AACxB,eAAK,UAAU,IAAI,IAAI;AACvB,eAAK,IAAI,mBAAe,IAAI;AAAA,QAChC;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,SAAgB;AAChB,aAAO,KAAK,QAAQ,IAAI;AAAA,IAC5B;AAAA,IACA,IAAI,OAAO,QAAe;AACtB,UAAI,KAAK,gBAAgB;AACrB,aAAK,eAAe,QAAQ;AAC5B,aAAK,iBAAiB;AAAA,MAC1B;AACA,WAAK,QAAQ,IAAI,MAAM;AACvB,WAAK,IAAI,qBAAiB,IAAI;AAC9B,UAAI,kBAAkB,KAAK,MAAM,GAAG;AAChC,aAAK,iBAAiB,KAAK,OAAO,QAAQ,UAAU,MAAM;AACtD,eAAK,IAAI,qBAAiB,IAAI;AAAA,QAClC,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,IACA,IAAI,YAA6C;AAC7C,aAAO,KAAK,WAAW,IAAI;AAAA,IAC/B;AAAA,IACA,IAAI,UAAU,WAA4C;AACtD,UAAI,OAAO,cAAc,UAAU;AAC/B,aAAK,WAAW,IAAI,SAAS;AAAA,MACjC;AAAA,IACJ;AAAA,IACA,IAAI,QAAgB;AAChB,aAAO,KAAK,aAAa,IAAI;AAAA,IACjC;AAAA,IACA,IAAI,MAAM,OAAe;AACrB,UAAI,OAAO,UAAU,UAAU;AAC3B,YAAI,KAAK,UAAU,OAAO;AACtB,eAAK,aAAa,IAAI,KAAK;AAAA,QAC/B;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,IAAI,aAAa;AACb,aAAO,KAAK,YAAY,IAAI;AAAA,IAChC;AAAA,IACA,IAAI,WAAW,YAAY;AACvB,WAAK,YAAY,IAAI,UAAU;AAAA,IACnC;AAAA,EACJ;AAEA,WAAS,sCAAsC,YAA+D;AAC1G,UAAM,SAAmC;AAAA,MACrC,IAAI,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,UAAU,WAAW;AAAA,IACzB;AACA,WAAO;AAAA,EACX;;;AChuBO,MAAM,WAAa,KAAK,eAAe,KAAK,YAAY,MAAO,KAAK,cAAc;;;ACsClF,MAAM,QAAN,MAA8B;AAAA,IAExB;AAAA,IACT,eAAkC;AAAA;AAAA;AAAA;AAAA,IAKzB;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA;AAAA;AAAA;AAAA,IAKT,QAAQ;AAAA;AAAA;AAAA;AAAA,IAKR,SAAS;AAAA,IAEA,QAAQ,SAAS,EAAE,OAAO,KAAK,OAAO,QAAQ,KAAK,OAAO,CAAC;AAAA,IAC3D,QAAQ,KAAK,MAAM,aAAa;AAAA;AAAA;AAAA;AAAA,IAKzC,QAA4B;AAAA;AAAA;AAAA;AAAA,IAKnB;AAAA,IAEA,cAAc,SAAS,CAAC;AAAA,IACxB,cAAc,KAAK,YAAY,aAAa;AAAA;AAAA,IAGrD,YAA2B;AAAA,IAC3B,YAA2B;AAAA,IAElB,eAA6E,EAAE,MAAM,IAAI,KAAK,GAAG,OAAO,GAAG,QAAQ,GAAG;AAAA,IACtH;AAAA,IAET,YAAY,aAAmC,UAA2B,CAAC,GAAG;AAE1E,YAAM,YAAY,cAAc,WAAW;AAC3C,YAAM,eAAe,iBAAiB,WAAW;AAEjD,WAAK,WAAW,IAAI,MAAM,MAAM,CAAC,GAAG,EAAE,IAAI,GAAG,YAAY,WAAW,CAAC;AAErE,UAAI,OAAO,QAAQ,gBAAgB,UAAU;AACzC,cAAM,OAAO,QAAQ,YAAY;AACjC,cAAM,MAAM,QAAQ,YAAY;AAChC,cAAM,QAAQ,QAAQ,YAAY;AAClC,cAAM,SAAS,QAAQ,YAAY;AACnC,aAAK,aAAa,OAAO;AACzB,aAAK,aAAa,MAAM;AACxB,aAAK,aAAa,QAAQ;AAC1B,aAAK,aAAa,SAAS;AAC3B,aAAK,QAAQ,SAAS;AAAA,MAC1B,OACK;AACD,aAAK,QAAQ;AAAA,MACjB;AAEA,UAAI,QAAQ,iBAAiB,OAAO;AAChC,aAAK,SAAS,QAAQ;AAAA,MAC1B,OACK;AACD,aAAK,SAAS,IAAI,MAAM,MAAM,CAAC,GAAG,EAAE,IAAI,GAAG,YAAY,SAAS,CAAC;AAAA,MACrE;AACA,WAAK,SAAS,IAAI,KAAK,MAAM;AAE7B,UAAI,OAAO,QAAQ,gBAAgB,UAAU;AACzC,aAAK,QAAQ,QAAQ,YAAY,WAAW,KAAK,UAAU,YAAY;AAAA,MAC3E,OACK;AACD,aAAK,QAAQ,IAAI,eAAe,EAAE,WAAW,KAAK,UAAU,YAAY;AAAA,MAC5E;AAEA,YAAMC,UAAsB,oBAAoB,WAAW,OAAO;AAElE,WAAK,UAAU,IAAI,OAAO,MAAM,KAAK,KAAK;AAG1C,UAAI,qBAAqB,aAAa;AAClC,aAAK,QAAQ,WAAW,SAAwB;AAChD,aAAK,QAAQ,UAAU;AACvB,aAAK,QAAQ,OAAO;AAAA,MACxB;AAEA,UAAI,qBAAqB,aAAa;AAClC,aAAK,SAAS,SAAS;AAAA,MAC3B;AAEA,UAAIA,QAAO,MAAM;AACb,aAAK,MAAM,QAAQA,QAAO,MAAM,KAAK,KAAK;AAAA,MAC9C;AAGA,UAAI,OAAO,KAAK,MAAM,UAAU,UAAU;AACtC,aAAK,eAAe,KAAK,MAAM,MAAM,UAAU,CAAC,EAAE,OAAO,OAAO,MAAM;AAClE,eAAK,QAAQ;AACb,eAAK,SAAS;AACd,eAAK,iBAAiB;AACtB,eAAK,MAAM,IAAI,EAAE,OAAO,OAAO,CAAC;AAAA,QACpC,CAAC;AAAA,MACL,OACK;AACD,cAAM,IAAI,MAAM,4BAA4B;AAAA,MAChD;AAAA,IACJ;AAAA,IAEA,UAAgB;AACZ,UAAI,KAAK,cAAc;AACnB,aAAK,aAAa,QAAQ;AAC1B,aAAK,eAAe;AAAA,MACxB;AACA,WAAK,QAAQ,YAAY;AAAA,IAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,mBAAyB;AACrB,YAAM,EAAE,MAAM,KAAK,OAAO,OAAO,IAAI,KAAK,eAAe;AACzD,YAAM,UAAK,KAAK;AAChB,YAAM,UAAK,KAAK;AAChB,YAAM,KAAK,QAAQ;AACnB,YAAM,KAAK,MAAM;AACjB,YAAM,KAAK,UAAK;AAChB,YAAM,KAAK,UAAK;AAChB,YAAM,IAAI,CAAC,OAAO,UAAK;AACvB,YAAM,IAAI,CAAC,SAAS,UAAK;AACzB,WAAK,SAAS,SAAS,IAAI,GAAG,CAAC;AAC/B,UAAI,CAAC,KAAK,OAAO;AACb,aAAK,SAAS,SAAS,eAAe,KAAK,KAAK,CAAC;AAAA,MACrD;AACA,WAAK,SAAS,QAAQ,IAAI,IAAI,EAAE;AAAA,IACpC;AAAA,IAEA,IAAI,UAAe;AACf,aAAO,KAAK,SAAS,QAAQ,MAAM;AAAA,IACvC;AAAA,IAEA,IAAI,QAAe;AACf,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,SAAS,WAAoB;AACzB,UAAI,aAAa,OAAO,UAAU,aAAa,UAAU;AACrD,YAAI,UAAU,aAAa,KAAK,cAAc;AAC1C,gBAAM,aAAa,KAAK,MAAM;AAC9B,cAAI,sBAAsB,cAAc,sBAAsB,mBAAmB;AAC7E,sBAAU,YAAY,KAAK,MAAM,UAAU;AAAA,UAC/C,OACK;AACD,kBAAM,IAAI,MAAM,uDAAuD;AAAA,UAC3E;AAEA,cAAI,CAAC,KAAK,QAAQ,eAAe,GAAG;AAChC,iBAAK,QAAQ,WAAW,SAAS;AAAA,UACrC;AAEA,eAAK,OAAO;AAAA,QAChB;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAAA,IAEA,iBAA+E;AAC3E,aAAO,KAAK;AAAA,IAChB;AAAA;AAAA;AAAA;AAAA,IAKA,eAAe,mBAAmB,GAAkB;AAChD,UAAI,OAAO,KAAK,cAAc,UAAU;AACpC,eAAO,YAAY,KAAK,YAAY,KAAK,WAAW,QAAQ,gBAAgB,CAAC;AAAA,MACjF,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,SAAe;AACX,WAAK,YAAY,KAAK;AACtB,WAAK,YAAY,SAAS,IAAI;AAE9B,UAAI,KAAK,QAAQ,WAAW,KAAK,CAAC,KAAK,QAAQ,SAAS,GAAG;AACvD,aAAK,QAAQ,UAAU;AACvB,aAAK,QAAQ,OAAO;AAAA,MACxB;AAEA,YAAM,QAAQ,KAAK;AACnB,YAAM,SAAS,KAAK;AACpB,YAAM,WAAW,KAAK;AAEtB,UAAI,UAAU,SAAS,SAAS,WAAW,SAAS,QAAQ;AACxD,iBAAS,QAAQ,EAAE,OAAO,OAAO,GAAG,KAAK,KAAK;AAAA,MAClD;AAEA,WAAK,MAAM,OAAO;AAElB,WAAK,YAAY,IAAI,KAAK,YAAY,IAAI,IAAI,CAAC;AAAA,IACnD;AAAA,IAEA,OAAO,QAAuB;AAC1B,WAAK,OAAO,IAAI,GAAG,MAAM;AACzB,WAAK,OAAO;AACZ,aAAO;AAAA,IACX;AAAA,IAEA,UAAU,QAAuB;AAC7B,WAAK,OAAO,OAAO,GAAG,MAAM;AAC5B,WAAK,OAAO;AACZ,aAAO;AAAA,IACX;AAAA,IAEA,OAAO,UAA4B,CAAC,GAAW;AAC3C,YAAM,SAAS,IAAI,OAAO,MAAM,OAAO;AACvC,WAAK,IAAI,MAAM;AACf,aAAO;AAAA,IACX;AAAA,IAEA,QAAQ,aAAgC,CAAC,GAAY;AACjD,YAAM,UAAU,IAAI,QAAQ,MAAM,UAAU;AAC5C,WAAK,IAAI,OAAO;AAChB,aAAO;AAAA,IACX;AAAA,IAEA,KAAK,QAAsB,QAAsB,aAA6B,CAAC,GAAS;AACpF,YAAM,OAAO,IAAI,KAAK,MAAM,QAAQ,QAAQ,UAAU;AACtD,WAAK,IAAI,IAAI;AACb,aAAO;AAAA,IACX;AAAA,IAEA,KAAK,WAAoB,QAAwB;AAC7C,YAAM,OAAO,IAAI,KAAK,MAAM,QAAQ,MAAM;AAC1C,YAAM,OAAO,KAAK,eAAe;AACjC,UAAI,OAAO,KAAK,QAAQ,YAAY,OAAO,KAAK,SAAS,YACrD,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,WAAW,UAAU;AACnE,aAAK,OAAO,EAAE,SAAS,KAAK,KAAK,OAAO,KAAK,SAAS,IAAI,KAAK,MAAM,KAAK,UAAU,CAAC;AAAA,MACzF;AACA,WAAK,IAAI,IAAI;AACb,aAAO;AAAA,IACX;AAAA,IAEA,MAAM,UAAwB,aAA8B,CAAC,GAAU;AACnE,YAAM,EAAE,MAAM,KAAK,OAAO,OAAO,IAAI,KAAK,eAAe;AACzD,YAAM,KAAK,KAAK,SAAS,MAAM;AAC/B,YAAM,KAAK,KAAK,UAAU,SAAS;AACnC,YAAM,KAAK,IAAI;AACf,YAAM,KAAK,IAAI;AACf,YAAM,kBAAkB,mCAAmC,UAAU;AACrE,sBAAgB,WAAW;AAC3B,sBAAgB,KAAK;AACrB,sBAAgB,KAAK;AACrB,YAAM,UAAU,IAAI,QAAQ,MAAM,eAAe;AACjD,WAAK,IAAI,OAAO;AAChB,aAAO;AAAA,IACX;AAAA,IAEA,QAAQ,SAAyB,CAAC,GAAG,aAAyC,CAAC,GAAY;AACvF,YAAM,UAAU,IAAI,QAAQ,MAAM,QAAQ,UAAU;AACpD,WAAK,IAAI,OAAO;AAChB,aAAO;AAAA,IACX;AAAA,IAEA,UAAU,YAA4C;AAClD,YAAM,OAAO,IAAI,UAAU,MAAM,UAAU;AAC3C,WAAK,IAAI,IAAI;AACb,aAAO;AAAA,IACX;AAAA,IAEA,KAAK,SAAiB,YAA4C;AAC9D,YAAM,OAAO,IAAI,KAAK,MAAM,SAAS,UAAU;AAC/C,WAAK,IAAI,IAAI;AACb,aAAO;AAAA,IACX;AAAA,IAEA,MAAM,MAAoB,aAA8B,CAAC,GAAU;AAC/D,YAAM,QAAQ,IAAI,MAAM,MAAM,MAAM,UAAU;AAC9C,WAAK,IAAI,KAAK;AACd,aAAO;AAAA,IACX;AAAA,IAEA,MAAM,WAAoB,SAAyB;AAC/C,YAAM,SAAS;AACf,YAAM,QAAQ,IAAI,KAAK,MAAM,SAAS,QAAQ,MAAM;AACpD,YAAM,OAAO,MAAM,eAAe;AAClC,YAAM,OAAO,EAAE,SAAS,KAAK,KAAK,OAAO,KAAK,SAAS,IAAI,KAAK,MAAM,KAAK,UAAU,CAAC;AACtF,WAAK,IAAI,KAAK;AACd,aAAO;AAAA,IACX;AAAA,IAEA,IAAI,GAAW,GAAW,aAAqB,aAAqB,YAAoB,UAAkB,aAAqB,UAAU,YAAwB;AAC7J,YAAM,aAAa,IAAI,WAAW,MAAM,GAAG,GAAG,aAAa,aAAa,YAAY,UAAU,UAAU;AACxG,WAAK,IAAI,UAAU;AACnB,aAAO;AAAA,IACX;AAAA,IAEA,SAAS,QAAwB;AAC7B,YAAM,QAAQ,IAAI,MAAM,MAAM,MAAM;AACpC,WAAK,IAAI,KAAK;AACd,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwEJ;AAEA,MAAM,SAAN,MAAa;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACT,UAA0B;AAAA,IAC1B,iBAAsC;AAAA,IACtC,YAAY,OAAc,MAAY;AAClC,WAAK,SAAS;AACd,WAAK,QAAQ;AACb,WAAK,cAAc,KAAK;AAAA,IAC5B;AAAA,IACA,UAAgB;AACZ,WAAK,YAAY;AAAA,IACrB;AAAA,IACA,WAAoB;AAChB,aAAO,CAAC,CAAC,KAAK;AAAA,IAClB;AAAA;AAAA;AAAA;AAAA,IAIA,YAAkB;AACd,WAAK,YAAY;AACjB,WAAK,iBAAiB,UAAU,KAAK,SAAS,QAAQ,EACjD,KAAK,aAAa,GAAG,CAAC,EACtB,UAAU,MAAM;AACb,aAAK,OAAO;AAAA,MAChB,CAAC;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAIA,cAAoB;AAChB,UAAI,KAAK,gBAAgB;AACrB,aAAK,eAAe,YAAY;AAChC,aAAK,iBAAiB;AAAA,MAC1B;AAAA,IACJ;AAAA,IACA,aAAsB;AAClB,aAAO,CAAC,CAAC,KAAK;AAAA,IAClB;AAAA,IACA,WAAW,QAAuB;AAC9B,WAAK,UAAU;AACf,UAAI,KAAK,eAAe,GAAG;AAEvB,iBAAS,KAAK,MAAM,WAAW;AAC/B,iBAAS,KAAK,MAAM,SAAS;AAC7B,iBAAS,KAAK,MAAM,UAAU;AAC9B,iBAAS,KAAK,MAAM,MAAM;AAC1B,iBAAS,KAAK,MAAM,OAAO;AAC3B,iBAAS,KAAK,MAAM,QAAQ;AAC5B,iBAAS,KAAK,MAAM,SAAS;AAC7B,iBAAS,KAAK,MAAM,WAAW;AAG/B,aAAK,YAAY,MAAM,UAAU;AACjC,aAAK,YAAY,MAAM,MAAM;AAC7B,aAAK,YAAY,MAAM,OAAO;AAC9B,aAAK,YAAY,MAAM,QAAQ;AAC/B,aAAK,YAAY,MAAM,SAAS;AAChC,aAAK,YAAY,MAAM,WAAW;AAAA,MACtC;AACA,aAAO;AAAA,IACX;AAAA,IACA,iBAA0B;AACtB,aAAO,KAAK,YAAY,SAAS;AAAA,IACrC;AAAA,IACA,SAAe;AACX,YAAM,QAAQ,KAAK;AACnB,YAAM,OAAO,KAAK,QAAQ,sBAAsB;AAEhD,YAAM,QAAQ,KAAK;AACnB,YAAM,SAAS,KAAK;AAEpB,WAAK,MAAM,QAAQ,MAAM,MAAM,KAAK;AAAA,IACxC;AAAA,EACJ;AAOA,WAAS,oBAAoB,WAAwB,SAAuC;AACxF,UAAMA,UAAsB;AAAA,MACxB,UAAU,yBAAyB,WAAW,OAAO;AAAA,MACrD,MAAM,oBAAoB,WAAW,OAAO;AAAA,IAChD;AACA,WAAOA;AAAA,EACX;AAEA,WAAS,yBAAyB,WAAwB,SAA0C;AAChG,QAAI,QAAQ,UAAU;AAClB,aAAO,QAAQ;AAAA,IACnB;AACA,WAAO;AAAA,EACX;AAEA,WAAS,oBAAoB,WAAwB,SAAoE;AACrH,QAAI,OAAO,QAAQ,SAAS,UAAU;AAClC,aAAO,QAAQ;AAAA,IACnB,OACK;AACD,UAAI,WAAW;AACX,eAAO;AAAA,MACX,OACK;AACD,eAAO,EAAE,OAAO,KAAK,QAAQ,IAAI;AAAA,MACrC;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,cAAc,aAAgD;AACnE,QAAI,OAAO,gBAAgB,UAAU;AACjC,aAAO,SAAS,eAAe,WAAW;AAAA,IAC9C,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,WAAS,iBAAiB,aAA2C;AACjE,QAAI,OAAO,gBAAgB,UAAU;AACjC,aAAO;AAAA,IACX,OACK;AACD,aAAO,YAAY;AAAA,IACvB;AAAA,EACJ;AAEA,WAAS,mCAAmC,YAAgD;AACxF,UAAM,SAA4B;AAAA,MAC9B,IAAI,WAAW;AAAA,MACf,MAAM,WAAW;AAAA,MACjB,aAAa,WAAW;AAAA;AAAA;AAAA,MAGxB,QAAQ,WAAW;AAAA,MACnB,eAAe,WAAW;AAAA,MAC1B,aAAa,WAAW;AAAA,MACxB,YAAY,WAAW;AAAA,IAC3B;AACA,WAAO;AAAA,EACX;;;AC5jBA,WAAS,iBAAiB,oBAAoB,WAAY;AAEtD,UAAM,QAAQ,IAAI,MAAM,YAAY;AAAA,MAChC,aAAa,EAAE,MAAM,IAAI,KAAK,GAAG,OAAO,GAAG,QAAQ,GAAG;AAAA,IAC1D,CAAC;AAED,UAAM,IAAI,MAAM,MAAM,CAAC,GAAK,CAAG,GAAG,EAAE,IAAI,KAAK,YAAY,WAAW,MAAM,OAAO,QAAQ,MAAM,CAAC;AAChG,UAAM,IAAI,MAAM,MAAM,CAAC,GAAK,CAAG,GAAG,EAAE,IAAI,KAAK,YAAY,SAAS,CAAC;AACnE,UAAM,IAAI,MAAM,MAAM,CAAC,GAAK,CAAG,GAAG,EAAE,IAAI,KAAK,YAAY,SAAS,CAAC;AAEnE,UAAM,KAAK,EAAE,SAAS,QAAQ,EAAE,QAAQ;AACxC,UAAM,KAAK,EAAE,SAAS,QAAQ,EAAE,QAAQ;AACxC,UAAM,IAAI,GAAG,UAAU;AACvB,UAAM,IAAI,EAAE,QAAQ,IAAI,CAAC;AAEzB,UAAM,OAAO,MAAM,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,IAAI,QAAQ,SAAS,IAAI,CAAC;AAClE,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,cAAc;AACnB,SAAK,OAAO;AAEZ,UAAM,MAAM,MAAM,UAAU,EAAE,IAAI,OAAO,OAAO,GAAG,QAAQ,EAAE,CAAC;AAC9D,QAAI,SAAS,oBAAoB,IAAI,EAAE;AACvC,QAAI,OAAO;AACX,QAAI,SAAS;AACb,QAAI,cAAc;AAClB,QAAI,SAAS,WAAW,EAAE,QAAQ,EAAE,IAAI,GAAG,QAAQ,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,IAAI,SAAS,CAAC,CAAC;AAEvF,UAAM,QAAQ,MAAM,KAAK,KAAK;AAAA,MAC1B,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,IAAI;AAAA,MACJ,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU,EAAE;AAAA,IAChB,CAAC;AACD,YAAQ,OAAO,KAAK;AAEpB,UAAM,QAAQ,MAAM,KAAK,KAAK;AAAA,MAC1B,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,IAAI;AAAA,MACJ,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU,EAAE;AAAA,IAChB,CAAC;AACD,YAAQ,OAAO,KAAK;AAEpB,UAAM,QAAQ,MAAM,KAAK,KAAK;AAAA,MAC1B,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,IAAI;AAAA,MACJ,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU,EAAE;AAAA,IAChB,CAAC;AACD,YAAQ,OAAO,KAAK;AAEpB,UAAM,QAAQ,MAAM,KAAK,OAAO;AAAA,MAC5B,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU,IAAI;AAAA,IAClB,CAAC;AACD,UAAM,SAAS,oBAAoB,IAAI,EAAE;AACzC,YAAQ,OAAO,KAAK;AAEpB,UAAM,QAAQ,MAAM,KAAK,QAAQ;AAAA,MAC7B,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU,KAAK;AAAA,IACnB,CAAC;AACD,UAAM,SAAS,oBAAoB,IAAI,EAAE;AACzC,YAAQ,OAAO,KAAK;AACpB,UAAM,OAAO;AAEb,UAAM,MAAM,CAAC,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,IAAI,KAAK,YAAY,SAAS,CAAC;AAC/E,UAAM,OAAO;AAEb,QAAI,SAAS;AACb,QAAI,cAAc;AAClB,QAAI,gBAAgB;AACpB,QAAI,OAAO;AACX,QAAI,cAAc;AAElB,UAAM,KAAK,MAAM,MAAM,IAAI,GAAG,MAAM,EAAE,GAAG;AAAA,MACrC,UAAU,IAAI;AAAA,MACd,aAAa;AAAA,IACjB,CAAC;AACD,OAAG,gBAAgB;AAEnB,UAAM,KAAK,MAAM,MAAM,EAAE,MAAM,GAAG,GAAG;AAAA,MACjC,UAAU,IAAI;AAAA,MACd,eAAe;AAAA,IACnB,CAAC;AACD,OAAG,cAAc;AAEjB,UAAM,KAAK,MAAM,MAAM,EAAE,MAAM,GAAG,GAAG;AAAA,MACjC,UAAU,IAAI;AAAA,IAClB,CAAC;AACD,OAAG,gBAAgB;AACnB,OAAG,cAAc;AAEjB,UAAM,QAAQ,MAAM,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG;AAAA,MACvC,IAAI;AAAA,MACJ,aAAa;AAAA,IACjB,CAAC;AACD,UAAM,OAAO,IAAI;AACjB,UAAM,aAAa;AACnB,UAAM,SAAS,IAAI,GAAG,MAAM,IAAI,CAAC;AAGjC,QAAI,SAAS,WAAW,EAAE,QAAQ,EAAE,IAAI,GAAG,QAAQ,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,IAAI,SAAS,CAAC,CAAC;AAIvF,WAAO,WAAW,WAAY;AAC1B,YAAM,QAAQ;AAAA,IAClB;AAAA,EAUJ,CAAC;AAED,WAAS,QAAQ,MAAY,OAAoB;AAC7C,SAAK,QAAQ,IAAI,IAAI,MAAM,QAAQ;AACnC,SAAK,QAAQ,IAAI,IAAI,MAAM,QAAQ;AAAA,EACvC;",
  "names": ["d", "b", "v", "Subscription", "Subscriber", "ConsumerObserver", "SafeSubscriber", "Observable", "observable", "OperatorSubscriber", "err", "Subject", "observable", "AnonymousSubject", "BehaviorSubject", "Action", "AsyncAction", "Scheduler", "AsyncScheduler", "vector", "cos", "sin", "svg", "getCurveLength", "i", "getCurveLength", "cos", "sin", "cos", "sin", "path_attributes", "min", "max", "config"]
}
